

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jan 02 23:06:18 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30  0000                     
    31                           ; Version 2.00
    32                           ; Generated 27/05/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	smallconst
    67  000800                     __psmallconst:
    68                           	opt stack 0
    69  000800  00                 	db	0
    70  000801                     _toint:
    71                           	opt stack 0
    72  000801  0000               	dw	0
    73  000803  4B00               	dw	19200
    74  000805                     __end_of_toint:
    75                           	opt stack 0
    76  0000                     _RCREG	set	4014
    77  0000                     _TXREG	set	4013
    78  0000                     _RCSTA	set	4011
    79  0000                     _TXSTA	set	4012
    80  0000                     _SPBRG	set	4015
    81  0000                     _LATB	set	3978
    82  0000                     _TRISD	set	3989
    83  0000                     _TRISB	set	3987
    84  0000                     _CCPR2L	set	4027
    85  0000                     _T2CONbits	set	4042
    86  0000                     _TMR2	set	4044
    87  0000                     _T2CON	set	4042
    88  0000                     _PR2	set	4043
    89  0000                     _OSCCON	set	4051
    90  0000                     _CCP2CON	set	4026
    91  0000                     _TRISCbits	set	3988
    92  0000                     _RCIF	set	31989
    93  0000                     _TXIF	set	31988
    94  0000                     _TRISC7	set	31911
    95  0000                     _TRISC6	set	31910
    96  0000                     _LATD3	set	31843
    97  0000                     _LATD2	set	31842
    98  0000                     _LATD1	set	31841
    99  0000                     _LATD0	set	31840
   100  0000                     _LATD6	set	31846
   101  0000                     _LATD5	set	31845
   102  000805                     STR_2:
   103  000805  42                 	db	66	;'B'
   104  000806  41                 	db	65	;'A'
   105  000807  43                 	db	67	;'C'
   106  000808  4B                 	db	75	;'K'
   107  000809  57                 	db	87	;'W'
   108  00080A  41                 	db	65	;'A'
   109  00080B  52                 	db	82	;'R'
   110  00080C  44                 	db	68	;'D'
   111  00080D  00                 	db	0
   112  00080E                     STR_1:
   113  00080E  46                 	db	70	;'F'
   114  00080F  4F                 	db	79	;'O'
   115  000810  52                 	db	82	;'R'
   116  000811  57                 	db	87	;'W'
   117  000812  41                 	db	65	;'A'
   118  000813  52                 	db	82	;'R'
   119  000814  44                 	db	68	;'D'
   120  000815  00                 	db	0
   121  000816                     STR_4:
   122  000816  52                 	db	82	;'R'
   123  000817  49                 	db	73	;'I'
   124  000818  47                 	db	71	;'G'
   125  000819  48                 	db	72	;'H'
   126  00081A  54                 	db	84	;'T'
   127  00081B  00                 	db	0
   128  00081C                     STR_3:
   129  00081C  4C                 	db	76	;'L'
   130  00081D  45                 	db	69	;'E'
   131  00081E  46                 	db	70	;'F'
   132  00081F  54                 	db	84	;'T'
   133  000820  00                 	db	0
   134  000821                     STR_5:
   135  000821  35                 	db	53	;'5'
   136  000822  00                 	db	0
   137                           
   138                           ; #config settings
   139  000823  00                 	db	0	; dummy byte at the end
   140  0000                     
   141                           	psect	cinit
   142  001F22                     __pcinit:
   143                           	opt stack 0
   144  001F22                     start_initialization:
   145                           	opt stack 0
   146  001F22                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK0 (4 bytes)
   150  001F22  0100               	movlb	0
   151  001F24  6B98               	clrf	(__pbssBANK0+3)& (0+255),b
   152  001F26  6B97               	clrf	(__pbssBANK0+2)& (0+255),b
   153  001F28  6B96               	clrf	(__pbssBANK0+1)& (0+255),b
   154  001F2A  6B95               	clrf	__pbssBANK0& (0+255),b
   155  001F2C                     end_of_initialization:
   156                           	opt stack 0
   157  001F2C                     __end_of__initialization:
   158                           	opt stack 0
   159  001F2C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   160  001F2E  6EF8               	movwf	tblptru,c
   161  001F30  0E08               	movlw	high __Lsmallconst
   162  001F32  6EF7               	movwf	tblptrh,c
   163  001F34  0100               	movlb	0
   164  001F36  EFFE  F00B         	goto	_main	;jump to C main() function
   165                           tblptru	equ	0xFF8
   166                           tblptrh	equ	0xFF7
   167                           
   168                           	psect	bssBANK0
   169  000095                     __pbssBANK0:
   170                           	opt stack 0
   171  000095                     roundf@F521:
   172                           	opt stack 0
   173  000095                     	ds	4
   174                           tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           
   177                           	psect	cstackBANK0
   178  000060                     __pcstackBANK0:
   179                           	opt stack 0
   180  000060                     SetDutyCycleTo@Duty_cycle:
   181                           	opt stack 0
   182  000060                     USART_Init@baud_rate:
   183                           	opt stack 0
   184  000060                     _roundf$842:
   185                           	opt stack 0
   186                           
   187                           ; 4 bytes @ 0x0
   188  000060                     	ds	4
   189  000064                     SetDutyCycleTo@Period:
   190                           	opt stack 0
   191  000064                     roundf@e:
   192                           	opt stack 0
   193  000064                     USART_Init@temp:
   194                           	opt stack 0
   195                           
   196                           ; 4 bytes @ 0x4
   197  000064                     	ds	2
   198  000066                     ??_SetDutyCycleTo:
   199  000066                     _roundf$841:
   200                           	opt stack 0
   201                           
   202                           ; 4 bytes @ 0x6
   203  000066                     	ds	2
   204  000068                     _SetDutyCycleTo$840:
   205                           	opt stack 0
   206                           
   207                           ; 4 bytes @ 0x8
   208  000068                     	ds	2
   209  00006A                     roundf@u:
   210                           	opt stack 0
   211                           
   212                           ; 4 bytes @ 0xA
   213  00006A                     	ds	2
   214  00006C                     SetDutyCycleTo@PWM10BitValue:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0xC
   218  00006C                     	ds	2
   219  00006E                     roundf@y:
   220                           	opt stack 0
   221                           
   222                           ; 4 bytes @ 0xE
   223  00006E                     	ds	4
   224  000072                     ?_setPeriodTo:
   225                           	opt stack 0
   226  000072                     setPeriodTo@FPWM:
   227                           	opt stack 0
   228                           
   229                           ; 4 bytes @ 0x12
   230  000072                     	ds	4
   231  000076                     _setPeriodTo$839:
   232                           	opt stack 0
   233                           
   234                           ; 4 bytes @ 0x16
   235  000076                     	ds	4
   236  00007A                     setPeriodTo@TimerPrescaleBits:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x1A
   240  00007A                     	ds	2
   241  00007C                     setPeriodTo@TimerPrescaleValue:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x1C
   245  00007C                     	ds	2
   246  00007E                     setPeriodTo@FOSC:
   247                           	opt stack 0
   248                           
   249                           ; 4 bytes @ 0x1E
   250  00007E                     	ds	4
   251  000082                     setPeriodTo@clockSelectBits:
   252                           	opt stack 0
   253                           
   254                           ; 2 bytes @ 0x22
   255  000082                     	ds	2
   256  000084                     setPeriodTo@period:
   257                           	opt stack 0
   258                           
   259                           ; 4 bytes @ 0x24
   260  000084                     	ds	4
   261  000088                     setPeriodTo@_resolution:
   262                           	opt stack 0
   263                           
   264                           ; 4 bytes @ 0x28
   265  000088                     	ds	4
   266  00008C                     main@out:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x2C
   270  00008C                     	ds	2
   271  00008E                     main@Period:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x2E
   275  00008E                     	ds	2
   276  000090                     main@Duty_Scale:
   277                           	opt stack 0
   278                           
   279                           ; 4 bytes @ 0x30
   280  000090                     	ds	4
   281  000094                     main@data_in:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x34
   285  000094                     	ds	1
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           
   289                           	psect	cstackCOMRAM
   290  000001                     __pcstackCOMRAM:
   291                           	opt stack 0
   292  000001                     ?___flneg:
   293                           	opt stack 0
   294  000001                     ?___xxtofl:
   295                           	opt stack 0
   296  000001                     USART_TransmitChar@out:
   297                           	opt stack 0
   298  000001                     GetBitValue@n:
   299                           	opt stack 0
   300  000001                     MSdelay@val:
   301                           	opt stack 0
   302  000001                     ___flge@ff1:
   303                           	opt stack 0
   304  000001                     ___flneg@f1:
   305                           	opt stack 0
   306  000001                     ___xxtofl@val:
   307                           	opt stack 0
   308                           
   309                           ; 4 bytes @ 0x0
   310  000001                     	ds	1
   311  000002                     USART_SendString@out:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x1
   315  000002                     	ds	1
   316  000003                     GetBitValue@bitPosition:
   317                           	opt stack 0
   318  000003                     MSdelay@i:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x2
   322  000003                     	ds	1
   323  000004                     
   324                           ; 1 bytes @ 0x3
   325  000004                     	ds	1
   326  000005                     ??_GetBitValue:
   327  000005                     ??___xxtofl:
   328  000005                     MSdelay@j:
   329                           	opt stack 0
   330  000005                     ___flge@ff2:
   331                           	opt stack 0
   332                           
   333                           ; 4 bytes @ 0x4
   334  000005                     	ds	4
   335  000009                     ??___flge:
   336  000009                     ___xxtofl@sign:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x8
   340  000009                     	ds	1
   341  00000A                     ___xxtofl@exp:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x9
   345  00000A                     	ds	1
   346  00000B                     ___xxtofl@arg:
   347                           	opt stack 0
   348                           
   349                           ; 4 bytes @ 0xA
   350  00000B                     	ds	4
   351  00000F                     ?___flmul:
   352                           	opt stack 0
   353  00000F                     ___flmul@b:
   354                           	opt stack 0
   355                           
   356                           ; 4 bytes @ 0xE
   357  00000F                     	ds	4
   358  000013                     ___flmul@a:
   359                           	opt stack 0
   360                           
   361                           ; 4 bytes @ 0x12
   362  000013                     	ds	4
   363  000017                     ??___flmul:
   364                           
   365                           ; 1 bytes @ 0x16
   366  000017                     	ds	4
   367  00001B                     ___flmul@sign:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x1A
   371  00001B                     	ds	1
   372  00001C                     ___flmul@grs:
   373                           	opt stack 0
   374                           
   375                           ; 4 bytes @ 0x1B
   376  00001C                     	ds	4
   377  000020                     ___flmul@aexp:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x1F
   381  000020                     	ds	1
   382  000021                     ___flmul@bexp:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x20
   386  000021                     	ds	1
   387  000022                     ___flmul@prod:
   388                           	opt stack 0
   389                           
   390                           ; 4 bytes @ 0x21
   391  000022                     	ds	4
   392  000026                     ___flmul@temp:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x25
   396  000026                     	ds	2
   397  000028                     ?___fldiv:
   398                           	opt stack 0
   399  000028                     ___fldiv@b:
   400                           	opt stack 0
   401                           
   402                           ; 4 bytes @ 0x27
   403  000028                     	ds	4
   404  00002C                     ___fldiv@a:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x2B
   408  00002C                     	ds	4
   409  000030                     ??___fldiv:
   410                           
   411                           ; 1 bytes @ 0x2F
   412  000030                     	ds	4
   413  000034                     ___fldiv@rem:
   414                           	opt stack 0
   415                           
   416                           ; 4 bytes @ 0x33
   417  000034                     	ds	4
   418  000038                     ___fldiv@sign:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x37
   422  000038                     	ds	1
   423  000039                     ___fldiv@new_exp:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x38
   427  000039                     	ds	2
   428  00003B                     ___fldiv@grs:
   429                           	opt stack 0
   430                           
   431                           ; 4 bytes @ 0x3A
   432  00003B                     	ds	4
   433  00003F                     ___fldiv@bexp:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x3E
   437  00003F                     	ds	1
   438  000040                     ___fldiv@aexp:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x3F
   442  000040                     	ds	1
   443  000041                     ?___fladd:
   444                           	opt stack 0
   445  000041                     ___fladd@b:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x40
   449  000041                     	ds	4
   450  000045                     ___fladd@a:
   451                           	opt stack 0
   452                           
   453                           ; 4 bytes @ 0x44
   454  000045                     	ds	4
   455  000049                     ??___fladd:
   456                           
   457                           ; 1 bytes @ 0x48
   458  000049                     	ds	8
   459  000051                     ___fladd@signs:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x50
   463  000051                     	ds	1
   464  000052                     ___fladd@aexp:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x51
   468  000052                     	ds	1
   469  000053                     ___fladd@bexp:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x52
   473  000053                     	ds	1
   474  000054                     ___fladd@grs:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x53
   478  000054                     	ds	1
   479  000055                     ?_roundf:
   480                           	opt stack 0
   481  000055                     ?___fltol:
   482                           	opt stack 0
   483  000055                     ___fltol@f1:
   484                           	opt stack 0
   485  000055                     roundf@x:
   486                           	opt stack 0
   487                           
   488                           ; 4 bytes @ 0x54
   489  000055                     	ds	4
   490  000059                     ??_roundf:
   491  000059                     ??___fltol:
   492                           
   493                           ; 1 bytes @ 0x58
   494  000059                     	ds	4
   495  00005D                     ___fltol@sign1:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x5C
   499  00005D                     	ds	1
   500  00005E                     ___fltol@exp1:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x5D
   504  00005E                     	ds	1
   505  00005F                     ??_setPeriodTo:
   506                           
   507                           ; 1 bytes @ 0x5E
   508  00005F                     	ds	1
   509  000060                     tblptru	equ	0xFF8
   510                           tblptrh	equ	0xFF7
   511                           
   512                           ; 1 bytes @ 0x5F
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 77 in file "HC-05_Module.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  Duty_Scale      4   48[BANK0 ] float 
   523 ;;  Period          2   46[BANK0 ] int 
   524 ;;  out             2   44[BANK0 ] int 
   525 ;;  data_in         1   52[BANK0 ] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   535 ;;      Params:         0       0       0       0       0       0       0       0       0
   536 ;;      Locals:         0       9       0       0       0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0       0       0       0       0
   538 ;;      Totals:         0       9       0       0       0       0       0       0       0
   539 ;;Total ram usage:        9 bytes
   540 ;; Hardware stack levels required when called:    3
   541 ;; This function calls:
   542 ;;		_GetBitValue
   543 ;;		_MSdelay
   544 ;;		_PWM_Init
   545 ;;		_SetDutyCycleTo
   546 ;;		_USART_Init
   547 ;;		_USART_ReceiveChar
   548 ;;		_USART_SendString
   549 ;;		_setPeriodTo
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text0
   556  0017FC                     __ptext0:
   557                           	opt stack 0
   558  0017FC                     _main:
   559                           	opt stack 28
   560                           
   561                           ;HC-05_Module.c: 79:     OSCCON=0x72;
   562                           
   563                           ;incstack = 0
   564  0017FC  0E72               	movlw	114
   565  0017FE  6ED3               	movwf	4051,c	;volatile
   566                           
   567                           ;HC-05_Module.c: 81:     int out;;HC-05_Module.c: 82:     char data_in;;HC-05_Module.c: 
      +                          83:     float Duty_Scale;;HC-05_Module.c: 84:     int Period;;HC-05_Module.c: 85:      T
      +                          RISB = 0x00;
   568  001800  0E00               	movlw	0
   569  001802  6E93               	movwf	3987,c	;volatile
   570                           
   571                           ;HC-05_Module.c: 87:     TRISD = 0x00;
   572  001804  0E00               	movlw	0
   573  001806  6E95               	movwf	3989,c	;volatile
   574                           
   575                           ;HC-05_Module.c: 88:     LATD5 = 0;
   576  001808  9A8C               	bcf	3980,5,c	;volatile
   577                           
   578                           ;HC-05_Module.c: 89:     LATD6 = 1;
   579  00180A  8C8C               	bsf	3980,6,c	;volatile
   580                           
   581                           ;HC-05_Module.c: 90:     PWM_Init();
   582  00180C  ECA7  F00F         	call	_PWM_Init	;wreg free
   583                           
   584                           ;HC-05_Module.c: 91:     Period = setPeriodTo(10000);
   585  001810  0E10               	movlw	16
   586  001812  0100               	movlb	0	; () banked
   587  001814  6F72               	movwf	setPeriodTo@FPWM& (0+255),b
   588  001816  0E27               	movlw	39
   589  001818  6F73               	movwf	(setPeriodTo@FPWM+1)& (0+255),b
   590  00181A  0E00               	movlw	0
   591  00181C  6F74               	movwf	(setPeriodTo@FPWM+2)& (0+255),b
   592  00181E  0E00               	movlw	0
   593  001820  6F75               	movwf	(setPeriodTo@FPWM+3)& (0+255),b
   594  001822  EC16  F009         	call	_setPeriodTo	;wreg free
   595  001826  C072  F08E         	movff	?_setPeriodTo,main@Period
   596  00182A  C073  F08F         	movff	?_setPeriodTo+1,main@Period+1
   597                           
   598                           ;HC-05_Module.c: 92:     USART_Init(9600);
   599  00182E  0E80               	movlw	128
   600  001830  0100               	movlb	0	; () banked
   601  001832  6F60               	movwf	USART_Init@baud_rate& (0+255),b
   602  001834  0E25               	movlw	37
   603  001836  6F61               	movwf	(USART_Init@baud_rate+1)& (0+255),b
   604  001838  0E00               	movlw	0
   605  00183A  6F62               	movwf	(USART_Init@baud_rate+2)& (0+255),b
   606  00183C  0E00               	movlw	0
   607  00183E  6F63               	movwf	(USART_Init@baud_rate+3)& (0+255),b
   608  001840  ECED  F00E         	call	_USART_Init	;wreg free
   609  001844                     
   610                           ;HC-05_Module.c: 95:     { data_in=USART_ReceiveChar();
   611  001844  ECA3  F00F         	call	_USART_ReceiveChar	;wreg free
   612  001848  0100               	movlb	0	; () banked
   613  00184A  6F94               	movwf	main@data_in& (0+255),b
   614                           
   615                           ; BSR set to: 0
   616                           ;HC-05_Module.c: 98:          LATB=out;
   617  00184C  C08C  FF8A         	movff	main@out,3978	;volatile
   618                           
   619                           ; BSR set to: 0
   620                           ;HC-05_Module.c: 107:          if(GetBitValue(data_in,5)){
   621  001850  C094  F001         	movff	main@data_in,GetBitValue@n
   622  001854  6A02               	clrf	GetBitValue@n+1,c
   623  001856  0E00               	movlw	0
   624  001858  6E04               	movwf	GetBitValue@bitPosition+1,c
   625  00185A  0E05               	movlw	5
   626  00185C  6E03               	movwf	GetBitValue@bitPosition,c
   627  00185E  EC7E  F00F         	call	_GetBitValue	;wreg free
   628  001862  0900               	iorlw	0
   629  001864  B4D8               	btfsc	status,2,c
   630  001866  D018               	goto	l78
   631                           
   632                           ;HC-05_Module.c: 108:            Duty_Scale = ((15000.0)/2.55);
   633  001868  0ED3               	movlw	211
   634  00186A  0100               	movlb	0	; () banked
   635  00186C  6F90               	movwf	main@Duty_Scale& (0+255),b
   636  00186E  0ED2               	movlw	210
   637  001870  6F91               	movwf	(main@Duty_Scale+1)& (0+255),b
   638  001872  0EB7               	movlw	183
   639  001874  6F92               	movwf	(main@Duty_Scale+2)& (0+255),b
   640  001876  0E45               	movlw	69
   641  001878  6F93               	movwf	(main@Duty_Scale+3)& (0+255),b
   642                           
   643                           ; BSR set to: 0
   644                           ;HC-05_Module.c: 109:            SetDutyCycleTo(Duty_Scale, Period);
   645  00187A  C090  F060         	movff	main@Duty_Scale,SetDutyCycleTo@Duty_cycle
   646  00187E  C091  F061         	movff	main@Duty_Scale+1,SetDutyCycleTo@Duty_cycle+1
   647  001882  C092  F062         	movff	main@Duty_Scale+2,SetDutyCycleTo@Duty_cycle+2
   648  001886  C093  F063         	movff	main@Duty_Scale+3,SetDutyCycleTo@Duty_cycle+3
   649  00188A  C08E  F064         	movff	main@Period,SetDutyCycleTo@Period
   650  00188E  C08F  F065         	movff	main@Period+1,SetDutyCycleTo@Period+1
   651  001892  ECFF  F00D         	call	_SetDutyCycleTo	;wreg free
   652                           
   653                           ;HC-05_Module.c: 110:          }
   654  001896  D017               	goto	l79
   655  001898                     l78:
   656                           
   657                           ;HC-05_Module.c: 112:            Duty_Scale = ((8000.0)/2.55);
   658  001898  0E14               	movlw	20
   659  00189A  0100               	movlb	0	; () banked
   660  00189C  6F90               	movwf	main@Duty_Scale& (0+255),b
   661  00189E  0E14               	movlw	20
   662  0018A0  6F91               	movwf	(main@Duty_Scale+1)& (0+255),b
   663  0018A2  0E44               	movlw	68
   664  0018A4  6F92               	movwf	(main@Duty_Scale+2)& (0+255),b
   665  0018A6  0E45               	movlw	69
   666  0018A8  6F93               	movwf	(main@Duty_Scale+3)& (0+255),b
   667                           
   668                           ; BSR set to: 0
   669                           ;HC-05_Module.c: 113:            SetDutyCycleTo(Duty_Scale, Period);
   670  0018AA  C090  F060         	movff	main@Duty_Scale,SetDutyCycleTo@Duty_cycle
   671  0018AE  C091  F061         	movff	main@Duty_Scale+1,SetDutyCycleTo@Duty_cycle+1
   672  0018B2  C092  F062         	movff	main@Duty_Scale+2,SetDutyCycleTo@Duty_cycle+2
   673  0018B6  C093  F063         	movff	main@Duty_Scale+3,SetDutyCycleTo@Duty_cycle+3
   674  0018BA  C08E  F064         	movff	main@Period,SetDutyCycleTo@Period
   675  0018BE  C08F  F065         	movff	main@Period+1,SetDutyCycleTo@Period+1
   676  0018C2  ECFF  F00D         	call	_SetDutyCycleTo	;wreg free
   677  0018C6                     l79:
   678                           
   679                           ;HC-05_Module.c: 116:           if((data_in=='1')|(data_in=='A'))
   680  0018C6  0E31               	movlw	49
   681  0018C8  0100               	movlb	0	; () banked
   682  0018CA  1994               	xorwf	main@data_in& (0+255),w,b
   683  0018CC  B4D8               	btfsc	status,2,c
   684  0018CE  D004               	goto	u2780
   685                           
   686                           ; BSR set to: 0
   687  0018D0  0E41               	movlw	65
   688  0018D2  1994               	xorwf	main@data_in& (0+255),w,b
   689  0018D4  A4D8               	btfss	status,2,c
   690  0018D6  D00B               	goto	l80
   691  0018D8                     u2780:
   692                           
   693                           ; BSR set to: 0
   694                           ;HC-05_Module.c: 117:         { LATD0 = 0;
   695  0018D8  908C               	bcf	3980,0,c	;volatile
   696                           
   697                           ;HC-05_Module.c: 118:             LATD1 = 1;
   698  0018DA  828C               	bsf	3980,1,c	;volatile
   699                           
   700                           ;HC-05_Module.c: 119:             LATD2 = 0;
   701  0018DC  948C               	bcf	3980,2,c	;volatile
   702                           
   703                           ;HC-05_Module.c: 120:             LATD3 = 1;
   704  0018DE  868C               	bsf	3980,3,c	;volatile
   705                           
   706                           ; BSR set to: 0
   707                           ;HC-05_Module.c: 121:             USART_SendString("FORWARD");
   708  0018E0  0E0E               	movlw	low STR_1
   709  0018E2  6E02               	movwf	USART_SendString@out,c
   710  0018E4  0E08               	movlw	high STR_1
   711  0018E6  6E03               	movwf	USART_SendString@out+1,c
   712  0018E8  EC69  F00F         	call	_USART_SendString	;wreg free
   713                           
   714                           ;HC-05_Module.c: 122:         }
   715  0018EC  D051               	goto	l98
   716  0018EE                     l80:
   717  0018EE  0E32               	movlw	50
   718  0018F0  0100               	movlb	0	; () banked
   719  0018F2  1994               	xorwf	main@data_in& (0+255),w,b
   720  0018F4  B4D8               	btfsc	status,2,c
   721  0018F6  D004               	goto	u2800
   722                           
   723                           ; BSR set to: 0
   724  0018F8  0E42               	movlw	66
   725  0018FA  1994               	xorwf	main@data_in& (0+255),w,b
   726  0018FC  A4D8               	btfss	status,2,c
   727  0018FE  D00B               	goto	l84
   728  001900                     u2800:
   729                           
   730                           ; BSR set to: 0
   731                           ;HC-05_Module.c: 125:         {;HC-05_Module.c: 126:                LATD0 = 1;
   732  001900  808C               	bsf	3980,0,c	;volatile
   733                           
   734                           ;HC-05_Module.c: 127:                LATD1 = 0;
   735  001902  928C               	bcf	3980,1,c	;volatile
   736                           
   737                           ;HC-05_Module.c: 128:                LATD2 = 1;
   738  001904  848C               	bsf	3980,2,c	;volatile
   739                           
   740                           ;HC-05_Module.c: 129:                LATD3 = 0;
   741  001906  968C               	bcf	3980,3,c	;volatile
   742                           
   743                           ; BSR set to: 0
   744                           ;HC-05_Module.c: 130:             USART_SendString("BACKWARD");
   745  001908  0E05               	movlw	low STR_2
   746  00190A  6E02               	movwf	USART_SendString@out,c
   747  00190C  0E08               	movlw	high STR_2
   748  00190E  6E03               	movwf	USART_SendString@out+1,c
   749  001910  EC69  F00F         	call	_USART_SendString	;wreg free
   750                           
   751                           ;HC-05_Module.c: 131:         }
   752  001914  D03D               	goto	l98
   753  001916                     l84:
   754  001916  0E33               	movlw	51
   755  001918  0100               	movlb	0	; () banked
   756  00191A  1994               	xorwf	main@data_in& (0+255),w,b
   757  00191C  B4D8               	btfsc	status,2,c
   758  00191E  D004               	goto	u2820
   759                           
   760                           ; BSR set to: 0
   761  001920  0E43               	movlw	67
   762  001922  1994               	xorwf	main@data_in& (0+255),w,b
   763  001924  A4D8               	btfss	status,2,c
   764  001926  D00B               	goto	l88
   765  001928                     u2820:
   766                           
   767                           ; BSR set to: 0
   768                           ;HC-05_Module.c: 133:         { LATD0 = 0;
   769  001928  908C               	bcf	3980,0,c	;volatile
   770                           
   771                           ;HC-05_Module.c: 134:             LATD1 = 1;
   772  00192A  828C               	bsf	3980,1,c	;volatile
   773                           
   774                           ;HC-05_Module.c: 135:             LATD2 = 1;
   775  00192C  848C               	bsf	3980,2,c	;volatile
   776                           
   777                           ;HC-05_Module.c: 136:             LATD3 = 0;
   778  00192E  968C               	bcf	3980,3,c	;volatile
   779                           
   780                           ; BSR set to: 0
   781                           ;HC-05_Module.c: 137:             USART_SendString("LEFT");
   782  001930  0E1C               	movlw	low STR_3
   783  001932  6E02               	movwf	USART_SendString@out,c
   784  001934  0E08               	movlw	high STR_3
   785  001936  6E03               	movwf	USART_SendString@out+1,c
   786  001938  EC69  F00F         	call	_USART_SendString	;wreg free
   787                           
   788                           ;HC-05_Module.c: 138:         }else if((data_in=='4')|(data_in=='D'))
   789  00193C  D029               	goto	l98
   790  00193E                     l88:
   791  00193E  0E34               	movlw	52
   792  001940  0100               	movlb	0	; () banked
   793  001942  1994               	xorwf	main@data_in& (0+255),w,b
   794  001944  B4D8               	btfsc	status,2,c
   795  001946  D004               	goto	u2840
   796                           
   797                           ; BSR set to: 0
   798  001948  0E44               	movlw	68
   799  00194A  1994               	xorwf	main@data_in& (0+255),w,b
   800  00194C  A4D8               	btfss	status,2,c
   801  00194E  D00B               	goto	l92
   802  001950                     u2840:
   803                           
   804                           ; BSR set to: 0
   805                           ;HC-05_Module.c: 139:         { LATD0 = 1;
   806  001950  808C               	bsf	3980,0,c	;volatile
   807                           
   808                           ;HC-05_Module.c: 140:             LATD1 = 0;
   809  001952  928C               	bcf	3980,1,c	;volatile
   810                           
   811                           ;HC-05_Module.c: 141:             LATD2 = 0;
   812  001954  948C               	bcf	3980,2,c	;volatile
   813                           
   814                           ;HC-05_Module.c: 142:             LATD3 = 1;
   815  001956  868C               	bsf	3980,3,c	;volatile
   816                           
   817                           ; BSR set to: 0
   818                           ;HC-05_Module.c: 143:             USART_SendString("RIGHT");
   819  001958  0E16               	movlw	low STR_4
   820  00195A  6E02               	movwf	USART_SendString@out,c
   821  00195C  0E08               	movlw	high STR_4
   822  00195E  6E03               	movwf	USART_SendString@out+1,c
   823  001960  EC69  F00F         	call	_USART_SendString	;wreg free
   824                           
   825                           ;HC-05_Module.c: 144:         }
   826  001964  D015               	goto	l98
   827  001966                     l92:
   828  001966  0E37               	movlw	55
   829  001968  0100               	movlb	0	; () banked
   830  00196A  1994               	xorwf	main@data_in& (0+255),w,b
   831  00196C  A4D8               	btfss	status,2,c
   832  00196E  D009               	goto	l96
   833                           
   834                           ; BSR set to: 0
   835                           ;HC-05_Module.c: 146:         { LATD6 = 0;
   836  001970  9C8C               	bcf	3980,6,c	;volatile
   837                           
   838                           ;HC-05_Module.c: 147:             LATD5 = 1;
   839  001972  8A8C               	bsf	3980,5,c	;volatile
   840                           
   841                           ; BSR set to: 0
   842                           ;HC-05_Module.c: 148:             USART_SendString("5");
   843  001974  0E21               	movlw	low STR_5
   844  001976  6E02               	movwf	USART_SendString@out,c
   845  001978  0E08               	movlw	high STR_5
   846  00197A  6E03               	movwf	USART_SendString@out+1,c
   847  00197C  EC69  F00F         	call	_USART_SendString	;wreg free
   848                           
   849                           ;HC-05_Module.c: 149:         }
   850  001980  D007               	goto	l98
   851  001982                     l96:
   852  001982  0E38               	movlw	56
   853  001984  0100               	movlb	0	; () banked
   854  001986  1994               	xorwf	main@data_in& (0+255),w,b
   855  001988  A4D8               	btfss	status,2,c
   856  00198A  D002               	goto	l98
   857                           
   858                           ; BSR set to: 0
   859                           ;HC-05_Module.c: 151:         { LATD6 = 1;
   860  00198C  8C8C               	bsf	3980,6,c	;volatile
   861                           
   862                           ;HC-05_Module.c: 152:             LATD5 = 0;
   863  00198E  9A8C               	bcf	3980,5,c	;volatile
   864  001990                     l98:
   865                           
   866                           ;HC-05_Module.c: 162:         MSdelay(100);
   867                           
   868                           ; BSR set to: 0
   869                           
   870                           ; BSR set to: 0
   871                           
   872                           ; BSR set to: 0
   873                           
   874                           ; BSR set to: 0
   875                           
   876                           ; BSR set to: 0
   877                           
   878                           ; BSR set to: 0
   879  001990  0E00               	movlw	0
   880  001992  6E02               	movwf	MSdelay@val+1,c
   881  001994  0E64               	movlw	100
   882  001996  6E01               	movwf	MSdelay@val,c
   883  001998  EC37  F00F         	call	_MSdelay	;wreg free
   884                           
   885                           ;HC-05_Module.c: 164:     }
   886  00199C  D753               	goto	l77
   887  00199E                     __end_of_main:
   888                           	opt stack 0
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           status	equ	0xFD8
   892                           
   893 ;; *************** function _setPeriodTo *****************
   894 ;; Defined at:
   895 ;;		line 35 in file "HC-05_Module.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  FPWM            4   18[BANK0 ] unsigned long 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  _resolution     4   40[BANK0 ] unsigned long 
   900 ;;  period          4   36[BANK0 ] float 
   901 ;;  FOSC            4   30[BANK0 ] unsigned long 
   902 ;;  clockSelectB    2   34[BANK0 ] int 
   903 ;;  TimerPrescal    2   28[BANK0 ] int 
   904 ;;  TimerPrescal    2   26[BANK0 ] int 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  2   18[BANK0 ] int 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   914 ;;      Params:         0       4       0       0       0       0       0       0       0
   915 ;;      Locals:         0      22       0       0       0       0       0       0       0
   916 ;;      Temps:          1       0       0       0       0       0       0       0       0
   917 ;;      Totals:         1      26       0       0       0       0       0       0       0
   918 ;;Total ram usage:       27 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    2
   921 ;; This function calls:
   922 ;;		___fladd
   923 ;;		___fldiv
   924 ;;		___flmul
   925 ;;		___fltol
   926 ;;		___xxtofl
   927 ;;		_roundf
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text1
   934  00122C                     __ptext1:
   935                           	opt stack 0
   936  00122C                     _setPeriodTo:
   937                           	opt stack 28
   938                           
   939                           ;HC-05_Module.c: 35: int setPeriodTo(unsigned long FPWM);HC-05_Module.c: 36: {;HC-05_Mod
      +                          ule.c: 37:     int clockSelectBits, TimerPrescaleBits;;HC-05_Module.c: 38:     int Timer
      +                          PrescaleValue;;HC-05_Module.c: 39:     float period;;HC-05_Module.c: 40:     unsigned lo
      +                          ng FOSC, _resolution = 488;
   940                           
   941                           ;incstack = 0
   942  00122C  0EE8               	movlw	232
   943  00122E  0100               	movlb	0	; () banked
   944  001230  6F88               	movwf	setPeriodTo@_resolution& (0+255),b
   945  001232  0E01               	movlw	1
   946  001234  6F89               	movwf	(setPeriodTo@_resolution+1)& (0+255),b
   947  001236  0E00               	movlw	0
   948  001238  6F8A               	movwf	(setPeriodTo@_resolution+2)& (0+255),b
   949  00123A  0E00               	movlw	0
   950  00123C  6F8B               	movwf	(setPeriodTo@_resolution+3)& (0+255),b
   951                           
   952                           ; BSR set to: 0
   953                           ;HC-05_Module.c: 42:     if (FPWM < 8000) {TimerPrescaleBits = 2; TimerPrescaleValue = 1
      +                          6;}
   954  00123E  5175               	movf	(setPeriodTo@FPWM+3)& (0+255),w,b
   955  001240  1174               	iorwf	(setPeriodTo@FPWM+2)& (0+255),w,b
   956  001242  E10E               	bnz	l2308
   957  001244  0E40               	movlw	64
   958  001246  5D72               	subwf	setPeriodTo@FPWM& (0+255),w,b
   959  001248  0E1F               	movlw	31
   960  00124A  5973               	subwfb	(setPeriodTo@FPWM+1)& (0+255),w,b
   961  00124C  B0D8               	btfsc	status,0,c
   962  00124E  D008               	goto	l50
   963                           
   964                           ; BSR set to: 0
   965  001250  0E00               	movlw	0
   966  001252  6F7B               	movwf	(setPeriodTo@TimerPrescaleBits+1)& (0+255),b
   967  001254  0E02               	movlw	2
   968  001256  6F7A               	movwf	setPeriodTo@TimerPrescaleBits& (0+255),b
   969  001258  0E00               	movlw	0
   970  00125A  6F7D               	movwf	(setPeriodTo@TimerPrescaleValue+1)& (0+255),b
   971  00125C  0E10               	movlw	16
   972  00125E  D007               	goto	L1
   973  001260                     l50:
   974  001260                     l2308:
   975                           
   976                           ; BSR set to: 0
   977  001260  0E00               	movlw	0
   978  001262  6F7B               	movwf	(setPeriodTo@TimerPrescaleBits+1)& (0+255),b
   979  001264  0E00               	movlw	0
   980  001266  6F7A               	movwf	setPeriodTo@TimerPrescaleBits& (0+255),b
   981  001268  0E00               	movlw	0
   982  00126A  6F7D               	movwf	(setPeriodTo@TimerPrescaleValue+1)& (0+255),b
   983  00126C  0E01               	movlw	1
   984  00126E                     L1:
   985  00126E  6F7C               	movwf	setPeriodTo@TimerPrescaleValue& (0+255),b
   986                           
   987                           ; BSR set to: 0
   988                           ;HC-05_Module.c: 45:     if (FPWM > _resolution) {clockSelectBits = 7; FOSC = 8000000;}
   989                           
   990                           ; BSR set to: 0
   991  001270  5172               	movf	setPeriodTo@FPWM& (0+255),w,b
   992  001272  5D88               	subwf	setPeriodTo@_resolution& (0+255),w,b
   993  001274  5173               	movf	(setPeriodTo@FPWM+1)& (0+255),w,b
   994  001276  5989               	subwfb	(setPeriodTo@_resolution+1)& (0+255),w,b
   995  001278  5174               	movf	(setPeriodTo@FPWM+2)& (0+255),w,b
   996  00127A  598A               	subwfb	(setPeriodTo@_resolution+2)& (0+255),w,b
   997  00127C  5175               	movf	(setPeriodTo@FPWM+3)& (0+255),w,b
   998  00127E  598B               	subwfb	(setPeriodTo@_resolution+3)& (0+255),w,b
   999  001280  B0D8               	btfsc	status,0,c
  1000  001282  D00A               	goto	l52
  1001                           
  1002                           ; BSR set to: 0
  1003  001284  0E00               	movlw	0
  1004  001286  6F83               	movwf	(setPeriodTo@clockSelectBits+1)& (0+255),b
  1005  001288  0E07               	movlw	7
  1006  00128A  6F82               	movwf	setPeriodTo@clockSelectBits& (0+255),b
  1007  00128C  0E00               	movlw	0
  1008  00128E  6F7E               	movwf	setPeriodTo@FOSC& (0+255),b
  1009  001290  0E12               	movlw	18
  1010  001292  6F7F               	movwf	(setPeriodTo@FOSC+1)& (0+255),b
  1011  001294  0E7A               	movlw	122
  1012  001296  D09F               	goto	L8
  1013  001298                     l52:
  1014                           
  1015                           ; BSR set to: 0
  1016                           
  1017                           ; BSR set to: 0
  1018  001298  90D8               	bcf	status,0,c
  1019  00129A  338B               	rrcf	(setPeriodTo@_resolution+3)& (0+255),f,b
  1020  00129C  338A               	rrcf	(setPeriodTo@_resolution+2)& (0+255),f,b
  1021  00129E  3389               	rrcf	(setPeriodTo@_resolution+1)& (0+255),f,b
  1022  0012A0  3388               	rrcf	setPeriodTo@_resolution& (0+255),f,b
  1023  0012A2  5172               	movf	setPeriodTo@FPWM& (0+255),w,b
  1024  0012A4  5D88               	subwf	setPeriodTo@_resolution& (0+255),w,b
  1025  0012A6  5173               	movf	(setPeriodTo@FPWM+1)& (0+255),w,b
  1026  0012A8  5989               	subwfb	(setPeriodTo@_resolution+1)& (0+255),w,b
  1027  0012AA  5174               	movf	(setPeriodTo@FPWM+2)& (0+255),w,b
  1028  0012AC  598A               	subwfb	(setPeriodTo@_resolution+2)& (0+255),w,b
  1029  0012AE  5175               	movf	(setPeriodTo@FPWM+3)& (0+255),w,b
  1030  0012B0  598B               	subwfb	(setPeriodTo@_resolution+3)& (0+255),w,b
  1031  0012B2  B0D8               	btfsc	status,0,c
  1032  0012B4  D00A               	goto	l54
  1033                           
  1034                           ; BSR set to: 0
  1035  0012B6  0E00               	movlw	0
  1036  0012B8  6F83               	movwf	(setPeriodTo@clockSelectBits+1)& (0+255),b
  1037  0012BA  0E06               	movlw	6
  1038  0012BC  6F82               	movwf	setPeriodTo@clockSelectBits& (0+255),b
  1039  0012BE  0E00               	movlw	0
  1040  0012C0  6F7E               	movwf	setPeriodTo@FOSC& (0+255),b
  1041  0012C2  0E09               	movlw	9
  1042  0012C4  6F7F               	movwf	(setPeriodTo@FOSC+1)& (0+255),b
  1043  0012C6  0E3D               	movlw	61
  1044  0012C8  D086               	goto	L8
  1045  0012CA                     l54:
  1046                           
  1047                           ; BSR set to: 0
  1048                           
  1049                           ; BSR set to: 0
  1050  0012CA  90D8               	bcf	status,0,c
  1051  0012CC  338B               	rrcf	(setPeriodTo@_resolution+3)& (0+255),f,b
  1052  0012CE  338A               	rrcf	(setPeriodTo@_resolution+2)& (0+255),f,b
  1053  0012D0  3389               	rrcf	(setPeriodTo@_resolution+1)& (0+255),f,b
  1054  0012D2  3388               	rrcf	setPeriodTo@_resolution& (0+255),f,b
  1055  0012D4  5172               	movf	setPeriodTo@FPWM& (0+255),w,b
  1056  0012D6  5D88               	subwf	setPeriodTo@_resolution& (0+255),w,b
  1057  0012D8  5173               	movf	(setPeriodTo@FPWM+1)& (0+255),w,b
  1058  0012DA  5989               	subwfb	(setPeriodTo@_resolution+1)& (0+255),w,b
  1059  0012DC  5174               	movf	(setPeriodTo@FPWM+2)& (0+255),w,b
  1060  0012DE  598A               	subwfb	(setPeriodTo@_resolution+2)& (0+255),w,b
  1061  0012E0  5175               	movf	(setPeriodTo@FPWM+3)& (0+255),w,b
  1062  0012E2  598B               	subwfb	(setPeriodTo@_resolution+3)& (0+255),w,b
  1063  0012E4  B0D8               	btfsc	status,0,c
  1064  0012E6  D00A               	goto	l56
  1065                           
  1066                           ; BSR set to: 0
  1067  0012E8  0E00               	movlw	0
  1068  0012EA  6F83               	movwf	(setPeriodTo@clockSelectBits+1)& (0+255),b
  1069  0012EC  0E05               	movlw	5
  1070  0012EE  6F82               	movwf	setPeriodTo@clockSelectBits& (0+255),b
  1071  0012F0  0E80               	movlw	128
  1072  0012F2  6F7E               	movwf	setPeriodTo@FOSC& (0+255),b
  1073  0012F4  0E84               	movlw	132
  1074  0012F6  6F7F               	movwf	(setPeriodTo@FOSC+1)& (0+255),b
  1075  0012F8  0E1E               	movlw	30
  1076  0012FA  D06D               	goto	L8
  1077  0012FC                     l56:
  1078                           
  1079                           ; BSR set to: 0
  1080                           
  1081                           ; BSR set to: 0
  1082  0012FC  90D8               	bcf	status,0,c
  1083  0012FE  338B               	rrcf	(setPeriodTo@_resolution+3)& (0+255),f,b
  1084  001300  338A               	rrcf	(setPeriodTo@_resolution+2)& (0+255),f,b
  1085  001302  3389               	rrcf	(setPeriodTo@_resolution+1)& (0+255),f,b
  1086  001304  3388               	rrcf	setPeriodTo@_resolution& (0+255),f,b
  1087  001306  5172               	movf	setPeriodTo@FPWM& (0+255),w,b
  1088  001308  5D88               	subwf	setPeriodTo@_resolution& (0+255),w,b
  1089  00130A  5173               	movf	(setPeriodTo@FPWM+1)& (0+255),w,b
  1090  00130C  5989               	subwfb	(setPeriodTo@_resolution+1)& (0+255),w,b
  1091  00130E  5174               	movf	(setPeriodTo@FPWM+2)& (0+255),w,b
  1092  001310  598A               	subwfb	(setPeriodTo@_resolution+2)& (0+255),w,b
  1093  001312  5175               	movf	(setPeriodTo@FPWM+3)& (0+255),w,b
  1094  001314  598B               	subwfb	(setPeriodTo@_resolution+3)& (0+255),w,b
  1095  001316  B0D8               	btfsc	status,0,c
  1096  001318  D00A               	goto	l58
  1097                           
  1098                           ; BSR set to: 0
  1099  00131A  0E00               	movlw	0
  1100  00131C  6F83               	movwf	(setPeriodTo@clockSelectBits+1)& (0+255),b
  1101  00131E  0E04               	movlw	4
  1102  001320  6F82               	movwf	setPeriodTo@clockSelectBits& (0+255),b
  1103  001322  0E40               	movlw	64
  1104  001324  6F7E               	movwf	setPeriodTo@FOSC& (0+255),b
  1105  001326  0E42               	movlw	66
  1106  001328  6F7F               	movwf	(setPeriodTo@FOSC+1)& (0+255),b
  1107  00132A  0E0F               	movlw	15
  1108  00132C  D054               	goto	L8
  1109  00132E                     l58:
  1110                           
  1111                           ; BSR set to: 0
  1112                           
  1113                           ; BSR set to: 0
  1114  00132E  90D8               	bcf	status,0,c
  1115  001330  338B               	rrcf	(setPeriodTo@_resolution+3)& (0+255),f,b
  1116  001332  338A               	rrcf	(setPeriodTo@_resolution+2)& (0+255),f,b
  1117  001334  3389               	rrcf	(setPeriodTo@_resolution+1)& (0+255),f,b
  1118  001336  3388               	rrcf	setPeriodTo@_resolution& (0+255),f,b
  1119  001338  5172               	movf	setPeriodTo@FPWM& (0+255),w,b
  1120  00133A  5D88               	subwf	setPeriodTo@_resolution& (0+255),w,b
  1121  00133C  5173               	movf	(setPeriodTo@FPWM+1)& (0+255),w,b
  1122  00133E  5989               	subwfb	(setPeriodTo@_resolution+1)& (0+255),w,b
  1123  001340  5174               	movf	(setPeriodTo@FPWM+2)& (0+255),w,b
  1124  001342  598A               	subwfb	(setPeriodTo@_resolution+2)& (0+255),w,b
  1125  001344  5175               	movf	(setPeriodTo@FPWM+3)& (0+255),w,b
  1126  001346  598B               	subwfb	(setPeriodTo@_resolution+3)& (0+255),w,b
  1127  001348  B0D8               	btfsc	status,0,c
  1128  00134A  D00A               	goto	l60
  1129                           
  1130                           ; BSR set to: 0
  1131  00134C  0E00               	movlw	0
  1132  00134E  6F83               	movwf	(setPeriodTo@clockSelectBits+1)& (0+255),b
  1133  001350  0E03               	movlw	3
  1134  001352  6F82               	movwf	setPeriodTo@clockSelectBits& (0+255),b
  1135  001354  0E20               	movlw	32
  1136  001356  6F7E               	movwf	setPeriodTo@FOSC& (0+255),b
  1137  001358  0EA1               	movlw	161
  1138  00135A  6F7F               	movwf	(setPeriodTo@FOSC+1)& (0+255),b
  1139  00135C  0E07               	movlw	7
  1140  00135E  D03B               	goto	L8
  1141  001360                     l60:
  1142                           
  1143                           ; BSR set to: 0
  1144                           
  1145                           ; BSR set to: 0
  1146  001360  90D8               	bcf	status,0,c
  1147  001362  338B               	rrcf	(setPeriodTo@_resolution+3)& (0+255),f,b
  1148  001364  338A               	rrcf	(setPeriodTo@_resolution+2)& (0+255),f,b
  1149  001366  3389               	rrcf	(setPeriodTo@_resolution+1)& (0+255),f,b
  1150  001368  3388               	rrcf	setPeriodTo@_resolution& (0+255),f,b
  1151  00136A  5172               	movf	setPeriodTo@FPWM& (0+255),w,b
  1152  00136C  5D88               	subwf	setPeriodTo@_resolution& (0+255),w,b
  1153  00136E  5173               	movf	(setPeriodTo@FPWM+1)& (0+255),w,b
  1154  001370  5989               	subwfb	(setPeriodTo@_resolution+1)& (0+255),w,b
  1155  001372  5174               	movf	(setPeriodTo@FPWM+2)& (0+255),w,b
  1156  001374  598A               	subwfb	(setPeriodTo@_resolution+2)& (0+255),w,b
  1157  001376  5175               	movf	(setPeriodTo@FPWM+3)& (0+255),w,b
  1158  001378  598B               	subwfb	(setPeriodTo@_resolution+3)& (0+255),w,b
  1159  00137A  B0D8               	btfsc	status,0,c
  1160  00137C  D00A               	goto	l62
  1161                           
  1162                           ; BSR set to: 0
  1163  00137E  0E00               	movlw	0
  1164  001380  6F83               	movwf	(setPeriodTo@clockSelectBits+1)& (0+255),b
  1165  001382  0E02               	movlw	2
  1166  001384  6F82               	movwf	setPeriodTo@clockSelectBits& (0+255),b
  1167  001386  0E90               	movlw	144
  1168  001388  6F7E               	movwf	setPeriodTo@FOSC& (0+255),b
  1169  00138A  0ED0               	movlw	208
  1170  00138C  6F7F               	movwf	(setPeriodTo@FOSC+1)& (0+255),b
  1171  00138E  0E03               	movlw	3
  1172  001390  D022               	goto	L8
  1173  001392                     l62:
  1174                           
  1175                           ; BSR set to: 0
  1176                           
  1177                           ; BSR set to: 0
  1178  001392  90D8               	bcf	status,0,c
  1179  001394  338B               	rrcf	(setPeriodTo@_resolution+3)& (0+255),f,b
  1180  001396  338A               	rrcf	(setPeriodTo@_resolution+2)& (0+255),f,b
  1181  001398  3389               	rrcf	(setPeriodTo@_resolution+1)& (0+255),f,b
  1182  00139A  3388               	rrcf	setPeriodTo@_resolution& (0+255),f,b
  1183  00139C  5172               	movf	setPeriodTo@FPWM& (0+255),w,b
  1184  00139E  5D88               	subwf	setPeriodTo@_resolution& (0+255),w,b
  1185  0013A0  5173               	movf	(setPeriodTo@FPWM+1)& (0+255),w,b
  1186  0013A2  5989               	subwfb	(setPeriodTo@_resolution+1)& (0+255),w,b
  1187  0013A4  5174               	movf	(setPeriodTo@FPWM+2)& (0+255),w,b
  1188  0013A6  598A               	subwfb	(setPeriodTo@_resolution+2)& (0+255),w,b
  1189  0013A8  5175               	movf	(setPeriodTo@FPWM+3)& (0+255),w,b
  1190  0013AA  598B               	subwfb	(setPeriodTo@_resolution+3)& (0+255),w,b
  1191  0013AC  B0D8               	btfsc	status,0,c
  1192  0013AE  D00A               	goto	l64
  1193                           
  1194                           ; BSR set to: 0
  1195  0013B0  0E00               	movlw	0
  1196  0013B2  6F83               	movwf	(setPeriodTo@clockSelectBits+1)& (0+255),b
  1197  0013B4  0E01               	movlw	1
  1198  0013B6  6F82               	movwf	setPeriodTo@clockSelectBits& (0+255),b
  1199  0013B8  0E48               	movlw	72
  1200  0013BA  6F7E               	movwf	setPeriodTo@FOSC& (0+255),b
  1201  0013BC  0EE8               	movlw	232
  1202  0013BE  6F7F               	movwf	(setPeriodTo@FOSC+1)& (0+255),b
  1203  0013C0  0E01               	movlw	1
  1204  0013C2  D009               	goto	L8
  1205  0013C4                     l64:
  1206                           
  1207                           ; BSR set to: 0
  1208                           
  1209                           ; BSR set to: 0
  1210  0013C4  0E00               	movlw	0
  1211  0013C6  6F83               	movwf	(setPeriodTo@clockSelectBits+1)& (0+255),b
  1212  0013C8  0E00               	movlw	0
  1213  0013CA  6F82               	movwf	setPeriodTo@clockSelectBits& (0+255),b
  1214  0013CC  0E18               	movlw	24
  1215  0013CE  6F7E               	movwf	setPeriodTo@FOSC& (0+255),b
  1216  0013D0  0E79               	movlw	121
  1217  0013D2  6F7F               	movwf	(setPeriodTo@FOSC+1)& (0+255),b
  1218  0013D4  0E00               	movlw	0
  1219  0013D6                     L8:
  1220  0013D6  6F80               	movwf	(setPeriodTo@FOSC+2)& (0+255),b
  1221  0013D8  0E00               	movlw	0
  1222  0013DA  6F81               	movwf	(setPeriodTo@FOSC+3)& (0+255),b
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;HC-05_Module.c: 54:     period = ((float)FOSC / (4.0 * (float)TimerPrescaleValue * (flo
      +                          at)FPWM)) - 1.0;
  1226                           
  1227                           ; BSR set to: 0
  1228                           
  1229                           ; BSR set to: 0
  1230                           
  1231                           ; BSR set to: 0
  1232                           
  1233                           ; BSR set to: 0
  1234                           
  1235                           ; BSR set to: 0
  1236                           
  1237                           ; BSR set to: 0
  1238                           
  1239                           ; BSR set to: 0
  1240  0013DC  0E00               	movlw	0
  1241  0013DE  6E13               	movwf	___flmul@a,c
  1242  0013E0  0E00               	movlw	0
  1243  0013E2  6E14               	movwf	___flmul@a+1,c
  1244  0013E4  0E80               	movlw	128
  1245  0013E6  6E15               	movwf	___flmul@a+2,c
  1246  0013E8  0E40               	movlw	64
  1247  0013EA  6E16               	movwf	___flmul@a+3,c
  1248  0013EC  C07C  F001         	movff	setPeriodTo@TimerPrescaleValue,___xxtofl@val
  1249  0013F0  C07D  F002         	movff	setPeriodTo@TimerPrescaleValue+1,___xxtofl@val+1
  1250  0013F4  0E00               	movlw	0
  1251  0013F6  BE02               	btfsc	___xxtofl@val+1,7,c
  1252  0013F8  0EFF               	movlw	-1
  1253  0013FA  6E03               	movwf	___xxtofl@val+2,c
  1254  0013FC  6E04               	movwf	___xxtofl@val+3,c
  1255  0013FE  0E01               	movlw	1
  1256  001400  ECCF  F00C         	call	___xxtofl
  1257  001404  C001  F00F         	movff	?___xxtofl,___flmul@b
  1258  001408  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1259  00140C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1260  001410  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1261  001414  ECD1  F005         	call	___flmul	;wreg free
  1262  001418  C00F  F076         	movff	?___flmul,_setPeriodTo$839
  1263  00141C  C010  F077         	movff	?___flmul+1,_setPeriodTo$839+1
  1264  001420  C011  F078         	movff	?___flmul+2,_setPeriodTo$839+2
  1265  001424  C012  F079         	movff	?___flmul+3,_setPeriodTo$839+3
  1266                           
  1267                           ;HC-05_Module.c: 54:     period = ((float)FOSC / (4.0 * (float)TimerPrescaleValue * (flo
      +                          at)FPWM)) - 1.0;
  1268  001428  C072  F001         	movff	setPeriodTo@FPWM,___xxtofl@val
  1269  00142C  C073  F002         	movff	setPeriodTo@FPWM+1,___xxtofl@val+1
  1270  001430  C074  F003         	movff	setPeriodTo@FPWM+2,___xxtofl@val+2
  1271  001434  C075  F004         	movff	setPeriodTo@FPWM+3,___xxtofl@val+3
  1272  001438  0E00               	movlw	0
  1273  00143A  ECCF  F00C         	call	___xxtofl
  1274  00143E  C001  F013         	movff	?___xxtofl,___flmul@a
  1275  001442  C002  F014         	movff	?___xxtofl+1,___flmul@a+1
  1276  001446  C003  F015         	movff	?___xxtofl+2,___flmul@a+2
  1277  00144A  C004  F016         	movff	?___xxtofl+3,___flmul@a+3
  1278  00144E  C076  F00F         	movff	_setPeriodTo$839,___flmul@b
  1279  001452  C077  F010         	movff	_setPeriodTo$839+1,___flmul@b+1
  1280  001456  C078  F011         	movff	_setPeriodTo$839+2,___flmul@b+2
  1281  00145A  C079  F012         	movff	_setPeriodTo$839+3,___flmul@b+3
  1282  00145E  ECD1  F005         	call	___flmul	;wreg free
  1283  001462  C00F  F02C         	movff	?___flmul,___fldiv@a
  1284  001466  C010  F02D         	movff	?___flmul+1,___fldiv@a+1
  1285  00146A  C011  F02E         	movff	?___flmul+2,___fldiv@a+2
  1286  00146E  C012  F02F         	movff	?___flmul+3,___fldiv@a+3
  1287  001472  C07E  F001         	movff	setPeriodTo@FOSC,___xxtofl@val
  1288  001476  C07F  F002         	movff	setPeriodTo@FOSC+1,___xxtofl@val+1
  1289  00147A  C080  F003         	movff	setPeriodTo@FOSC+2,___xxtofl@val+2
  1290  00147E  C081  F004         	movff	setPeriodTo@FOSC+3,___xxtofl@val+3
  1291  001482  0E00               	movlw	0
  1292  001484  ECCF  F00C         	call	___xxtofl
  1293  001488  C001  F028         	movff	?___xxtofl,___fldiv@b
  1294  00148C  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  1295  001490  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  1296  001494  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  1297  001498  ECA2  F00A         	call	___fldiv	;wreg free
  1298  00149C  C028  F041         	movff	?___fldiv,___fladd@b
  1299  0014A0  C029  F042         	movff	?___fldiv+1,___fladd@b+1
  1300  0014A4  C02A  F043         	movff	?___fldiv+2,___fladd@b+2
  1301  0014A8  C02B  F044         	movff	?___fldiv+3,___fladd@b+3
  1302  0014AC  0E00               	movlw	0
  1303  0014AE  6E45               	movwf	___fladd@a,c
  1304  0014B0  0E00               	movlw	0
  1305  0014B2  6E46               	movwf	___fladd@a+1,c
  1306  0014B4  0E80               	movlw	128
  1307  0014B6  6E47               	movwf	___fladd@a+2,c
  1308  0014B8  0EBF               	movlw	191
  1309  0014BA  6E48               	movwf	___fladd@a+3,c
  1310  0014BC  EC79  F007         	call	___fladd	;wreg free
  1311  0014C0  C041  F084         	movff	?___fladd,setPeriodTo@period
  1312  0014C4  C042  F085         	movff	?___fladd+1,setPeriodTo@period+1
  1313  0014C8  C043  F086         	movff	?___fladd+2,setPeriodTo@period+2
  1314  0014CC  C044  F087         	movff	?___fladd+3,setPeriodTo@period+3
  1315                           
  1316                           ;HC-05_Module.c: 55:     period = roundf(period);
  1317  0014D0  C084  F055         	movff	setPeriodTo@period,roundf@x
  1318  0014D4  C085  F056         	movff	setPeriodTo@period+1,roundf@x+1
  1319  0014D8  C086  F057         	movff	setPeriodTo@period+2,roundf@x+2
  1320  0014DC  C087  F058         	movff	setPeriodTo@period+3,roundf@x+3
  1321  0014E0  EC12  F004         	call	_roundf	;wreg free
  1322  0014E4  C055  F084         	movff	?_roundf,setPeriodTo@period
  1323  0014E8  C056  F085         	movff	?_roundf+1,setPeriodTo@period+1
  1324  0014EC  C057  F086         	movff	?_roundf+2,setPeriodTo@period+2
  1325  0014F0  C058  F087         	movff	?_roundf+3,setPeriodTo@period+3
  1326                           
  1327                           ;HC-05_Module.c: 57:     OSCCON = ((clockSelectBits & 0x07) << 4) | 0x02;
  1328  0014F4  C082  F05F         	movff	setPeriodTo@clockSelectBits,??_setPeriodTo
  1329  0014F8  0E07               	movlw	7
  1330  0014FA  165F               	andwf	??_setPeriodTo,f,c
  1331  0014FC  385F               	swapf	??_setPeriodTo,w,c
  1332  0014FE  0BF0               	andlw	240
  1333  001500  0902               	iorlw	2
  1334  001502  6ED3               	movwf	4051,c	;volatile
  1335                           
  1336                           ;HC-05_Module.c: 58:     PR2 = (int)period;
  1337  001504  C084  F055         	movff	setPeriodTo@period,___fltol@f1
  1338  001508  C085  F056         	movff	setPeriodTo@period+1,___fltol@f1+1
  1339  00150C  C086  F057         	movff	setPeriodTo@period+2,___fltol@f1+2
  1340  001510  C087  F058         	movff	setPeriodTo@period+3,___fltol@f1+3
  1341  001514  EC7F  F00E         	call	___fltol	;wreg free
  1342  001518  5055               	movf	?___fltol,w,c
  1343  00151A  6ECB               	movwf	4043,c	;volatile
  1344                           
  1345                           ;HC-05_Module.c: 59:     T2CON = TimerPrescaleBits;
  1346  00151C  C07A  FFCA         	movff	setPeriodTo@TimerPrescaleBits,4042	;volatile
  1347                           
  1348                           ;HC-05_Module.c: 60:     TMR2 = 0;
  1349  001520  0E00               	movlw	0
  1350  001522  6ECC               	movwf	4044,c	;volatile
  1351                           
  1352                           ;HC-05_Module.c: 61:     T2CONbits.TMR2ON = 1;
  1353  001524  84CA               	bsf	4042,2,c	;volatile
  1354                           
  1355                           ;HC-05_Module.c: 62:     return (int)period;
  1356  001526  C084  F055         	movff	setPeriodTo@period,___fltol@f1
  1357  00152A  C085  F056         	movff	setPeriodTo@period+1,___fltol@f1+1
  1358  00152E  C086  F057         	movff	setPeriodTo@period+2,___fltol@f1+2
  1359  001532  C087  F058         	movff	setPeriodTo@period+3,___fltol@f1+3
  1360  001536  EC7F  F00E         	call	___fltol	;wreg free
  1361  00153A  C055  F072         	movff	?___fltol,?_setPeriodTo
  1362  00153E  C056  F073         	movff	?___fltol+1,?_setPeriodTo+1
  1363  001542  0012               	return	
  1364  001544                     __end_of_setPeriodTo:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function _roundf *****************
  1371 ;; Defined at:
  1372 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\roundf.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  x               4   84[COMRAM] float 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  y               4   14[BANK0 ] float 
  1377 ;;  u               4   10[BANK0 ] struct .
  1378 ;;  e               2    4[BANK0 ] int 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  4   84[COMRAM] float 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1388 ;;      Params:         4       0       0       0       0       0       0       0       0
  1389 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1390 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1391 ;;      Totals:         8      18       0       0       0       0       0       0       0
  1392 ;;Total ram usage:       26 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    1
  1395 ;; This function calls:
  1396 ;;		___fladd
  1397 ;;		___flge
  1398 ;;		___flmul
  1399 ;;		___flneg
  1400 ;; This function is called by:
  1401 ;;		_setPeriodTo
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text2
  1406  000824                     __ptext2:
  1407                           	opt stack 0
  1408  000824                     _roundf:
  1409                           	opt stack 28
  1410                           
  1411                           ;incstack = 0
  1412  000824  C095  F06A         	movff	roundf@F521,roundf@u
  1413  000828  C096  F06B         	movff	roundf@F521+1,roundf@u+1
  1414  00082C  C097  F06C         	movff	roundf@F521+2,roundf@u+2
  1415  000830  C098  F06D         	movff	roundf@F521+3,roundf@u+3
  1416  000834  C055  F06A         	movff	roundf@x,roundf@u
  1417  000838  C056  F06B         	movff	roundf@x+1,roundf@u+1
  1418  00083C  C057  F06C         	movff	roundf@x+2,roundf@u+2
  1419  000840  C058  F06D         	movff	roundf@x+3,roundf@u+3
  1420  000844  C06A  F059         	movff	roundf@u,??_roundf
  1421  000848  C06B  F05A         	movff	roundf@u+1,??_roundf+1
  1422  00084C  C06C  F05B         	movff	roundf@u+2,??_roundf+2
  1423  000850  C06D  F05C         	movff	roundf@u+3,??_roundf+3
  1424  000854  0E18               	movlw	24
  1425  000856  D005               	goto	u2100
  1426  000858                     u2105:
  1427  000858  90D8               	bcf	status,0,c
  1428  00085A  325C               	rrcf	??_roundf+3,f,c
  1429  00085C  325B               	rrcf	??_roundf+2,f,c
  1430  00085E  325A               	rrcf	??_roundf+1,f,c
  1431  000860  3259               	rrcf	??_roundf,f,c
  1432  000862                     u2100:
  1433  000862  2EE8               	decfsz	wreg,f,c
  1434  000864  D7F9               	goto	u2105
  1435  000866  5059               	movf	??_roundf,w,c
  1436  000868  0100               	movlb	0	; () banked
  1437  00086A  6F64               	movwf	roundf@e& (0+255),b
  1438  00086C  6B65               	clrf	(roundf@e+1)& (0+255),b
  1439  00086E  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  1440  000870  D00F               	goto	l838
  1441  000872  5165               	movf	(roundf@e+1)& (0+255),w,b
  1442  000874  E104               	bnz	u2110
  1443  000876  0E96               	movlw	150
  1444  000878  5D64               	subwf	roundf@e& (0+255),w,b
  1445  00087A  A0D8               	btfss	status,0,c
  1446  00087C  D009               	goto	l838
  1447  00087E                     u2110:
  1448                           
  1449                           ; BSR set to: 0
  1450  00087E  C055  F055         	movff	roundf@x,?_roundf
  1451  000882  C056  F056         	movff	roundf@x+1,?_roundf+1
  1452  000886  C057  F057         	movff	roundf@x+2,?_roundf+2
  1453  00088A  C058  F058         	movff	roundf@x+3,?_roundf+3
  1454  00088E  0012               	return	
  1455  000890                     l838:
  1456                           
  1457                           ; BSR set to: 0
  1458                           
  1459                           ; BSR set to: 0
  1460  000890  C06A  F059         	movff	roundf@u,??_roundf
  1461  000894  C06B  F05A         	movff	roundf@u+1,??_roundf+1
  1462  000898  C06C  F05B         	movff	roundf@u+2,??_roundf+2
  1463  00089C  C06D  F05C         	movff	roundf@u+3,??_roundf+3
  1464  0008A0  0E20               	movlw	32
  1465  0008A2  D005               	goto	u2120
  1466  0008A4                     u2125:
  1467  0008A4  90D8               	bcf	status,0,c
  1468  0008A6  325C               	rrcf	??_roundf+3,f,c
  1469  0008A8  325B               	rrcf	??_roundf+2,f,c
  1470  0008AA  325A               	rrcf	??_roundf+1,f,c
  1471  0008AC  3259               	rrcf	??_roundf,f,c
  1472  0008AE                     u2120:
  1473  0008AE  2EE8               	decfsz	wreg,f,c
  1474  0008B0  D7F9               	goto	u2125
  1475  0008B2  5059               	movf	??_roundf,w,c
  1476  0008B4  105A               	iorwf	??_roundf+1,w,c
  1477  0008B6  105B               	iorwf	??_roundf+2,w,c
  1478  0008B8  105C               	iorwf	??_roundf+3,w,c
  1479  0008BA  B4D8               	btfsc	status,2,c
  1480  0008BC  D012               	goto	l840
  1481                           
  1482                           ; BSR set to: 0
  1483  0008BE  C055  F001         	movff	roundf@x,___flneg@f1
  1484  0008C2  C056  F002         	movff	roundf@x+1,___flneg@f1+1
  1485  0008C6  C057  F003         	movff	roundf@x+2,___flneg@f1+2
  1486  0008CA  C058  F004         	movff	roundf@x+3,___flneg@f1+3
  1487  0008CE  EC52  F00F         	call	___flneg	;wreg free
  1488  0008D2  C001  F055         	movff	?___flneg,roundf@x
  1489  0008D6  C002  F056         	movff	?___flneg+1,roundf@x+1
  1490  0008DA  C003  F057         	movff	?___flneg+2,roundf@x+2
  1491  0008DE  C004  F058         	movff	?___flneg+3,roundf@x+3
  1492  0008E2                     l840:
  1493  0008E2  0100               	movlb	0	; () banked
  1494  0008E4  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  1495  0008E6  D006               	goto	u2140
  1496  0008E8  5165               	movf	(roundf@e+1)& (0+255),w,b
  1497  0008EA  E11F               	bnz	l2044
  1498  0008EC  0E7E               	movlw	126
  1499  0008EE  5D64               	subwf	roundf@e& (0+255),w,b
  1500  0008F0  B0D8               	btfsc	status,0,c
  1501  0008F2  D01B               	goto	l841
  1502  0008F4                     u2140:
  1503                           
  1504                           ; BSR set to: 0
  1505  0008F4  C06A  F00F         	movff	roundf@u,___flmul@b
  1506  0008F8  C06B  F010         	movff	roundf@u+1,___flmul@b+1
  1507  0008FC  C06C  F011         	movff	roundf@u+2,___flmul@b+2
  1508  000900  C06D  F012         	movff	roundf@u+3,___flmul@b+3
  1509  000904  0E00               	movlw	0
  1510  000906  6E13               	movwf	___flmul@a,c
  1511  000908  0E00               	movlw	0
  1512  00090A  6E14               	movwf	___flmul@a+1,c
  1513  00090C  0E00               	movlw	0
  1514  00090E  6E15               	movwf	___flmul@a+2,c
  1515  000910  0E00               	movlw	0
  1516  000912  6E16               	movwf	___flmul@a+3,c
  1517  000914  ECD1  F005         	call	___flmul	;wreg free
  1518  000918  C00F  F055         	movff	?___flmul,?_roundf
  1519  00091C  C010  F056         	movff	?___flmul+1,?_roundf+1
  1520  000920  C011  F057         	movff	?___flmul+2,?_roundf+2
  1521  000924  C012  F058         	movff	?___flmul+3,?_roundf+3
  1522  000928  0012               	return	
  1523  00092A                     l841:
  1524  00092A                     l2044:
  1525  00092A  0E01               	movlw	low _toint
  1526  00092C  6EF6               	movwf	tblptrl,c
  1527  00092E                     	if	0	;There is only one active tblptr byte
  1528  00092E                     	endif
  1529  00092E                     	if	0	;There are less than 3 active tblptr bytes
  1530  00092E                     	endif
  1531  00092E  0009               	tblrd		*+
  1532  000930  CFF5 F045          	movff	tablat,___fladd@a
  1533  000934  0009               	tblrd		*+
  1534  000936  CFF5 F046          	movff	tablat,___fladd@a+1
  1535  00093A  0009               	tblrd		*+
  1536  00093C  CFF5 F047          	movff	tablat,___fladd@a+2
  1537  000940  000A               	tblrd		*-
  1538  000942  CFF5 F048          	movff	tablat,___fladd@a+3
  1539  000946  C055  F041         	movff	roundf@x,___fladd@b
  1540  00094A  C056  F042         	movff	roundf@x+1,___fladd@b+1
  1541  00094E  C057  F043         	movff	roundf@x+2,___fladd@b+2
  1542  000952  C058  F044         	movff	roundf@x+3,___fladd@b+3
  1543  000956  EC79  F007         	call	___fladd	;wreg free
  1544  00095A  C041  F066         	movff	?___fladd,_roundf$841
  1545  00095E  C042  F067         	movff	?___fladd+1,_roundf$841+1
  1546  000962  C043  F068         	movff	?___fladd+2,_roundf$841+2
  1547  000966  C044  F069         	movff	?___fladd+3,_roundf$841+3
  1548  00096A  0E01               	movlw	low _toint
  1549  00096C  6EF6               	movwf	tblptrl,c
  1550  00096E                     	if	0	;There is only one active tblptr byte
  1551  00096E                     	endif
  1552  00096E                     	if	0	;There are less than 3 active tblptr bytes
  1553  00096E                     	endif
  1554  00096E  0009               	tblrd		*+
  1555  000970  CFF5 F001          	movff	tablat,___flneg@f1
  1556  000974  0009               	tblrd		*+
  1557  000976  CFF5 F002          	movff	tablat,___flneg@f1+1
  1558  00097A  0009               	tblrd		*+
  1559  00097C  CFF5 F003          	movff	tablat,___flneg@f1+2
  1560  000980  000A               	tblrd		*-
  1561  000982  CFF5 F004          	movff	tablat,___flneg@f1+3
  1562  000986  EC52  F00F         	call	___flneg	;wreg free
  1563  00098A  C001  F045         	movff	?___flneg,___fladd@a
  1564  00098E  C002  F046         	movff	?___flneg+1,___fladd@a+1
  1565  000992  C003  F047         	movff	?___flneg+2,___fladd@a+2
  1566  000996  C004  F048         	movff	?___flneg+3,___fladd@a+3
  1567  00099A  C066  F041         	movff	_roundf$841,___fladd@b
  1568  00099E  C067  F042         	movff	_roundf$841+1,___fladd@b+1
  1569  0009A2  C068  F043         	movff	_roundf$841+2,___fladd@b+2
  1570  0009A6  C069  F044         	movff	_roundf$841+3,___fladd@b+3
  1571  0009AA  EC79  F007         	call	___fladd	;wreg free
  1572  0009AE  C041  F060         	movff	?___fladd,_roundf$842
  1573  0009B2  C042  F061         	movff	?___fladd+1,_roundf$842+1
  1574  0009B6  C043  F062         	movff	?___fladd+2,_roundf$842+2
  1575  0009BA  C044  F063         	movff	?___fladd+3,_roundf$842+3
  1576  0009BE  C060  F041         	movff	_roundf$842,___fladd@b
  1577  0009C2  C061  F042         	movff	_roundf$842+1,___fladd@b+1
  1578  0009C6  C062  F043         	movff	_roundf$842+2,___fladd@b+2
  1579  0009CA  C063  F044         	movff	_roundf$842+3,___fladd@b+3
  1580  0009CE  C055  F001         	movff	roundf@x,___flneg@f1
  1581  0009D2  C056  F002         	movff	roundf@x+1,___flneg@f1+1
  1582  0009D6  C057  F003         	movff	roundf@x+2,___flneg@f1+2
  1583  0009DA  C058  F004         	movff	roundf@x+3,___flneg@f1+3
  1584  0009DE  EC52  F00F         	call	___flneg	;wreg free
  1585  0009E2  C001  F045         	movff	?___flneg,___fladd@a
  1586  0009E6  C002  F046         	movff	?___flneg+1,___fladd@a+1
  1587  0009EA  C003  F047         	movff	?___flneg+2,___fladd@a+2
  1588  0009EE  C004  F048         	movff	?___flneg+3,___fladd@a+3
  1589  0009F2  EC79  F007         	call	___fladd	;wreg free
  1590  0009F6  C041  F06E         	movff	?___fladd,roundf@y
  1591  0009FA  C042  F06F         	movff	?___fladd+1,roundf@y+1
  1592  0009FE  C043  F070         	movff	?___fladd+2,roundf@y+2
  1593  000A02  C044  F071         	movff	?___fladd+3,roundf@y+3
  1594  000A06  0E00               	movlw	0
  1595  000A08  6E01               	movwf	___flge@ff1,c
  1596  000A0A  0E00               	movlw	0
  1597  000A0C  6E02               	movwf	___flge@ff1+1,c
  1598  000A0E  0E00               	movlw	0
  1599  000A10  6E03               	movwf	___flge@ff1+2,c
  1600  000A12  0E3F               	movlw	63
  1601  000A14  6E04               	movwf	___flge@ff1+3,c
  1602  000A16  C06E  F005         	movff	roundf@y,___flge@ff2
  1603  000A1A  C06F  F006         	movff	roundf@y+1,___flge@ff2+1
  1604  000A1E  C070  F007         	movff	roundf@y+2,___flge@ff2+2
  1605  000A22  C071  F008         	movff	roundf@y+3,___flge@ff2+3
  1606  000A26  EC6F  F00D         	call	___flge	;wreg free
  1607  000A2A  B0D8               	btfsc	status,0,c
  1608  000A2C  D02D               	goto	l842
  1609  000A2E  C055  F045         	movff	roundf@x,___fladd@a
  1610  000A32  C056  F046         	movff	roundf@x+1,___fladd@a+1
  1611  000A36  C057  F047         	movff	roundf@x+2,___fladd@a+2
  1612  000A3A  C058  F048         	movff	roundf@x+3,___fladd@a+3
  1613  000A3E  C06E  F041         	movff	roundf@y,___fladd@b
  1614  000A42  C06F  F042         	movff	roundf@y+1,___fladd@b+1
  1615  000A46  C070  F043         	movff	roundf@y+2,___fladd@b+2
  1616  000A4A  C071  F044         	movff	roundf@y+3,___fladd@b+3
  1617  000A4E  EC79  F007         	call	___fladd	;wreg free
  1618  000A52  C041  F066         	movff	?___fladd,_roundf$841
  1619  000A56  C042  F067         	movff	?___fladd+1,_roundf$841+1
  1620  000A5A  C043  F068         	movff	?___fladd+2,_roundf$841+2
  1621  000A5E  C044  F069         	movff	?___fladd+3,_roundf$841+3
  1622  000A62  C066  F041         	movff	_roundf$841,___fladd@b
  1623  000A66  C067  F042         	movff	_roundf$841+1,___fladd@b+1
  1624  000A6A  C068  F043         	movff	_roundf$841+2,___fladd@b+2
  1625  000A6E  C069  F044         	movff	_roundf$841+3,___fladd@b+3
  1626  000A72  0E00               	movlw	0
  1627  000A74  6E45               	movwf	___fladd@a,c
  1628  000A76  0E00               	movlw	0
  1629  000A78  6E46               	movwf	___fladd@a+1,c
  1630  000A7A  0E80               	movlw	128
  1631  000A7C  6E47               	movwf	___fladd@a+2,c
  1632  000A7E  0EBF               	movlw	191
  1633  000A80  6E48               	movwf	___fladd@a+3,c
  1634  000A82  EC79  F007         	call	___fladd	;wreg free
  1635  000A86  D053               	goto	L10
  1636  000A88                     l842:
  1637  000A88  0E00               	movlw	0
  1638  000A8A  6E01               	movwf	___flge@ff1,c
  1639  000A8C  0E00               	movlw	0
  1640  000A8E  6E02               	movwf	___flge@ff1+1,c
  1641  000A90  0E00               	movlw	0
  1642  000A92  6E03               	movwf	___flge@ff1+2,c
  1643  000A94  0EBF               	movlw	191
  1644  000A96  6E04               	movwf	___flge@ff1+3,c
  1645  000A98  C06E  F005         	movff	roundf@y,___flge@ff2
  1646  000A9C  C06F  F006         	movff	roundf@y+1,___flge@ff2+1
  1647  000AA0  C070  F007         	movff	roundf@y+2,___flge@ff2+2
  1648  000AA4  C071  F008         	movff	roundf@y+3,___flge@ff2+3
  1649  000AA8  EC6F  F00D         	call	___flge	;wreg free
  1650  000AAC  A0D8               	btfss	status,0,c
  1651  000AAE  D02D               	goto	l844
  1652  000AB0  C055  F045         	movff	roundf@x,___fladd@a
  1653  000AB4  C056  F046         	movff	roundf@x+1,___fladd@a+1
  1654  000AB8  C057  F047         	movff	roundf@x+2,___fladd@a+2
  1655  000ABC  C058  F048         	movff	roundf@x+3,___fladd@a+3
  1656  000AC0  C06E  F041         	movff	roundf@y,___fladd@b
  1657  000AC4  C06F  F042         	movff	roundf@y+1,___fladd@b+1
  1658  000AC8  C070  F043         	movff	roundf@y+2,___fladd@b+2
  1659  000ACC  C071  F044         	movff	roundf@y+3,___fladd@b+3
  1660  000AD0  EC79  F007         	call	___fladd	;wreg free
  1661  000AD4  C041  F066         	movff	?___fladd,_roundf$841
  1662  000AD8  C042  F067         	movff	?___fladd+1,_roundf$841+1
  1663  000ADC  C043  F068         	movff	?___fladd+2,_roundf$841+2
  1664  000AE0  C044  F069         	movff	?___fladd+3,_roundf$841+3
  1665  000AE4  C066  F041         	movff	_roundf$841,___fladd@b
  1666  000AE8  C067  F042         	movff	_roundf$841+1,___fladd@b+1
  1667  000AEC  C068  F043         	movff	_roundf$841+2,___fladd@b+2
  1668  000AF0  C069  F044         	movff	_roundf$841+3,___fladd@b+3
  1669  000AF4  0E00               	movlw	0
  1670  000AF6  6E45               	movwf	___fladd@a,c
  1671  000AF8  0E00               	movlw	0
  1672  000AFA  6E46               	movwf	___fladd@a+1,c
  1673  000AFC  0E80               	movlw	128
  1674  000AFE  6E47               	movwf	___fladd@a+2,c
  1675  000B00  0E3F               	movlw	63
  1676  000B02  6E48               	movwf	___fladd@a+3,c
  1677  000B04  EC79  F007         	call	___fladd	;wreg free
  1678  000B08  D012               	goto	L10
  1679  000B0A                     l844:
  1680  000B0A  C06E  F041         	movff	roundf@y,___fladd@b
  1681  000B0E  C06F  F042         	movff	roundf@y+1,___fladd@b+1
  1682  000B12  C070  F043         	movff	roundf@y+2,___fladd@b+2
  1683  000B16  C071  F044         	movff	roundf@y+3,___fladd@b+3
  1684  000B1A  C055  F045         	movff	roundf@x,___fladd@a
  1685  000B1E  C056  F046         	movff	roundf@x+1,___fladd@a+1
  1686  000B22  C057  F047         	movff	roundf@x+2,___fladd@a+2
  1687  000B26  C058  F048         	movff	roundf@x+3,___fladd@a+3
  1688  000B2A  EC79  F007         	call	___fladd	;wreg free
  1689  000B2E                     L10:
  1690  000B2E  C041  F06E         	movff	?___fladd,roundf@y
  1691  000B32  C042  F06F         	movff	?___fladd+1,roundf@y+1
  1692  000B36  C043  F070         	movff	?___fladd+2,roundf@y+2
  1693  000B3A  C044  F071         	movff	?___fladd+3,roundf@y+3
  1694  000B3E  C06A  F059         	movff	roundf@u,??_roundf
  1695  000B42  C06B  F05A         	movff	roundf@u+1,??_roundf+1
  1696  000B46  C06C  F05B         	movff	roundf@u+2,??_roundf+2
  1697  000B4A  C06D  F05C         	movff	roundf@u+3,??_roundf+3
  1698  000B4E  0E20               	movlw	32
  1699  000B50  D005               	goto	u2170
  1700  000B52                     u2175:
  1701  000B52  90D8               	bcf	status,0,c
  1702  000B54  325C               	rrcf	??_roundf+3,f,c
  1703  000B56  325B               	rrcf	??_roundf+2,f,c
  1704  000B58  325A               	rrcf	??_roundf+1,f,c
  1705  000B5A  3259               	rrcf	??_roundf,f,c
  1706  000B5C                     u2170:
  1707  000B5C  2EE8               	decfsz	wreg,f,c
  1708  000B5E  D7F9               	goto	u2175
  1709  000B60  5059               	movf	??_roundf,w,c
  1710  000B62  105A               	iorwf	??_roundf+1,w,c
  1711  000B64  105B               	iorwf	??_roundf+2,w,c
  1712  000B66  105C               	iorwf	??_roundf+3,w,c
  1713  000B68  B4D8               	btfsc	status,2,c
  1714  000B6A  D012               	goto	l846
  1715  000B6C  C06E  F001         	movff	roundf@y,___flneg@f1
  1716  000B70  C06F  F002         	movff	roundf@y+1,___flneg@f1+1
  1717  000B74  C070  F003         	movff	roundf@y+2,___flneg@f1+2
  1718  000B78  C071  F004         	movff	roundf@y+3,___flneg@f1+3
  1719  000B7C  EC52  F00F         	call	___flneg	;wreg free
  1720  000B80  C001  F06E         	movff	?___flneg,roundf@y
  1721  000B84  C002  F06F         	movff	?___flneg+1,roundf@y+1
  1722  000B88  C003  F070         	movff	?___flneg+2,roundf@y+2
  1723  000B8C  C004  F071         	movff	?___flneg+3,roundf@y+3
  1724  000B90                     l846:
  1725  000B90  C06E  F055         	movff	roundf@y,?_roundf
  1726  000B94  C06F  F056         	movff	roundf@y+1,?_roundf+1
  1727  000B98  C070  F057         	movff	roundf@y+2,?_roundf+2
  1728  000B9C  C071  F058         	movff	roundf@y+3,?_roundf+3
  1729  000BA0  0012               	return	
  1730  000BA2                     __end_of_roundf:
  1731                           	opt stack 0
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           wreg	equ	0xFE8
  1737                           status	equ	0xFD8
  1738                           
  1739 ;; *************** function ___flneg *****************
  1740 ;; Defined at:
  1741 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flneg.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  f1              4    0[COMRAM] float 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  4    0[COMRAM] float 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2, status,0
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1755 ;;      Params:         4       0       0       0       0       0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1758 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1759 ;;Total ram usage:        4 bytes
  1760 ;; Hardware stack levels used:    1
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_roundf
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text3
  1769  001EA4                     __ptext3:
  1770                           	opt stack 0
  1771  001EA4                     ___flneg:
  1772                           	opt stack 28
  1773                           
  1774                           ;incstack = 0
  1775  001EA4  5001               	movf	___flneg@f1,w,c
  1776  001EA6  1002               	iorwf	___flneg@f1+1,w,c
  1777  001EA8  1003               	iorwf	___flneg@f1+2,w,c
  1778  001EAA  1004               	iorwf	___flneg@f1+3,w,c
  1779  001EAC  B4D8               	btfsc	status,2,c
  1780  001EAE  D008               	goto	l433
  1781  001EB0  0E00               	movlw	0
  1782  001EB2  1A01               	xorwf	___flneg@f1,f,c
  1783  001EB4  0E00               	movlw	0
  1784  001EB6  1A02               	xorwf	___flneg@f1+1,f,c
  1785  001EB8  0E00               	movlw	0
  1786  001EBA  1A03               	xorwf	___flneg@f1+2,f,c
  1787  001EBC  0E80               	movlw	128
  1788  001EBE  1A04               	xorwf	___flneg@f1+3,f,c
  1789  001EC0                     l433:
  1790  001EC0  C001  F001         	movff	___flneg@f1,?___flneg
  1791  001EC4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  1792  001EC8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  1793  001ECC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  1794  001ED0  0012               	return	
  1795  001ED2                     __end_of___flneg:
  1796                           	opt stack 0
  1797                           tblptru	equ	0xFF8
  1798                           tblptrh	equ	0xFF7
  1799                           tblptrl	equ	0xFF6
  1800                           tablat	equ	0xFF5
  1801                           wreg	equ	0xFE8
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function ___flge *****************
  1805 ;; Defined at:
  1806 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  ff1             4    0[COMRAM] float 
  1809 ;;  ff2             4    4[COMRAM] float 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;		None               void
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1821 ;;      Params:         8       0       0       0       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1823 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1824 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1825 ;;Total ram usage:       12 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_roundf
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text4
  1835  001ADE                     __ptext4:
  1836                           	opt stack 0
  1837  001ADE                     ___flge:
  1838                           	opt stack 28
  1839                           
  1840                           ;incstack = 0
  1841  001ADE  0E00               	movlw	0
  1842  001AE0  1401               	andwf	___flge@ff1,w,c
  1843  001AE2  6E09               	movwf	??___flge& (0+255),c
  1844  001AE4  0E00               	movlw	0
  1845  001AE6  1402               	andwf	___flge@ff1+1,w,c
  1846  001AE8  6E0A               	movwf	(??___flge+1)& (0+255),c
  1847  001AEA  0E80               	movlw	128
  1848  001AEC  1403               	andwf	___flge@ff1+2,w,c
  1849  001AEE  6E0B               	movwf	(??___flge+2)& (0+255),c
  1850  001AF0  0E7F               	movlw	127
  1851  001AF2  1404               	andwf	___flge@ff1+3,w,c
  1852  001AF4  6E0C               	movwf	(??___flge+3)& (0+255),c
  1853  001AF6  5009               	movf	??___flge,w,c
  1854  001AF8  100A               	iorwf	??___flge+1,w,c
  1855  001AFA  100B               	iorwf	??___flge+2,w,c
  1856  001AFC  100C               	iorwf	??___flge+3,w,c
  1857  001AFE  A4D8               	btfss	status,2,c
  1858  001B00  D008               	goto	l422
  1859  001B02  0E00               	movlw	0
  1860  001B04  6E01               	movwf	___flge@ff1,c
  1861  001B06  0E00               	movlw	0
  1862  001B08  6E02               	movwf	___flge@ff1+1,c
  1863  001B0A  0E00               	movlw	0
  1864  001B0C  6E03               	movwf	___flge@ff1+2,c
  1865  001B0E  0E00               	movlw	0
  1866  001B10  6E04               	movwf	___flge@ff1+3,c
  1867  001B12                     l422:
  1868  001B12  0E00               	movlw	0
  1869  001B14  1405               	andwf	___flge@ff2,w,c
  1870  001B16  6E09               	movwf	??___flge& (0+255),c
  1871  001B18  0E00               	movlw	0
  1872  001B1A  1406               	andwf	___flge@ff2+1,w,c
  1873  001B1C  6E0A               	movwf	(??___flge+1)& (0+255),c
  1874  001B1E  0E80               	movlw	128
  1875  001B20  1407               	andwf	___flge@ff2+2,w,c
  1876  001B22  6E0B               	movwf	(??___flge+2)& (0+255),c
  1877  001B24  0E7F               	movlw	127
  1878  001B26  1408               	andwf	___flge@ff2+3,w,c
  1879  001B28  6E0C               	movwf	(??___flge+3)& (0+255),c
  1880  001B2A  5009               	movf	??___flge,w,c
  1881  001B2C  100A               	iorwf	??___flge+1,w,c
  1882  001B2E  100B               	iorwf	??___flge+2,w,c
  1883  001B30  100C               	iorwf	??___flge+3,w,c
  1884  001B32  A4D8               	btfss	status,2,c
  1885  001B34  D008               	goto	l423
  1886  001B36  0E00               	movlw	0
  1887  001B38  6E05               	movwf	___flge@ff2,c
  1888  001B3A  0E00               	movlw	0
  1889  001B3C  6E06               	movwf	___flge@ff2+1,c
  1890  001B3E  0E00               	movlw	0
  1891  001B40  6E07               	movwf	___flge@ff2+2,c
  1892  001B42  0E00               	movlw	0
  1893  001B44  6E08               	movwf	___flge@ff2+3,c
  1894  001B46                     l423:
  1895  001B46  AE04               	btfss	___flge@ff1+3,7,c
  1896  001B48  D01D               	goto	l424
  1897  001B4A  C001  F009         	movff	___flge@ff1,??___flge
  1898  001B4E  C002  F00A         	movff	___flge@ff1+1,??___flge+1
  1899  001B52  C003  F00B         	movff	___flge@ff1+2,??___flge+2
  1900  001B56  C004  F00C         	movff	___flge@ff1+3,??___flge+3
  1901  001B5A  1E09               	comf	??___flge,f,c
  1902  001B5C  1E0A               	comf	??___flge+1,f,c
  1903  001B5E  1E0B               	comf	??___flge+2,f,c
  1904  001B60  1E0C               	comf	??___flge+3,f,c
  1905  001B62  2A09               	incf	??___flge,f,c
  1906  001B64  0E00               	movlw	0
  1907  001B66  220A               	addwfc	??___flge+1,f,c
  1908  001B68  220B               	addwfc	??___flge+2,f,c
  1909  001B6A  220C               	addwfc	??___flge+3,f,c
  1910  001B6C  0E00               	movlw	0
  1911  001B6E  2409               	addwf	??___flge,w,c
  1912  001B70  6E01               	movwf	___flge@ff1,c
  1913  001B72  0E00               	movlw	0
  1914  001B74  200A               	addwfc	??___flge+1,w,c
  1915  001B76  6E02               	movwf	___flge@ff1+1,c
  1916  001B78  0E00               	movlw	0
  1917  001B7A  200B               	addwfc	??___flge+2,w,c
  1918  001B7C  6E03               	movwf	___flge@ff1+2,c
  1919  001B7E  0E80               	movlw	128
  1920  001B80  200C               	addwfc	??___flge+3,w,c
  1921  001B82  6E04               	movwf	___flge@ff1+3,c
  1922  001B84                     l424:
  1923  001B84  AE08               	btfss	___flge@ff2+3,7,c
  1924  001B86  D01D               	goto	l425
  1925  001B88  C005  F009         	movff	___flge@ff2,??___flge
  1926  001B8C  C006  F00A         	movff	___flge@ff2+1,??___flge+1
  1927  001B90  C007  F00B         	movff	___flge@ff2+2,??___flge+2
  1928  001B94  C008  F00C         	movff	___flge@ff2+3,??___flge+3
  1929  001B98  1E09               	comf	??___flge,f,c
  1930  001B9A  1E0A               	comf	??___flge+1,f,c
  1931  001B9C  1E0B               	comf	??___flge+2,f,c
  1932  001B9E  1E0C               	comf	??___flge+3,f,c
  1933  001BA0  2A09               	incf	??___flge,f,c
  1934  001BA2  0E00               	movlw	0
  1935  001BA4  220A               	addwfc	??___flge+1,f,c
  1936  001BA6  220B               	addwfc	??___flge+2,f,c
  1937  001BA8  220C               	addwfc	??___flge+3,f,c
  1938  001BAA  0E00               	movlw	0
  1939  001BAC  2409               	addwf	??___flge,w,c
  1940  001BAE  6E05               	movwf	___flge@ff2,c
  1941  001BB0  0E00               	movlw	0
  1942  001BB2  200A               	addwfc	??___flge+1,w,c
  1943  001BB4  6E06               	movwf	___flge@ff2+1,c
  1944  001BB6  0E00               	movlw	0
  1945  001BB8  200B               	addwfc	??___flge+2,w,c
  1946  001BBA  6E07               	movwf	___flge@ff2+2,c
  1947  001BBC  0E80               	movlw	128
  1948  001BBE  200C               	addwfc	??___flge+3,w,c
  1949  001BC0  6E08               	movwf	___flge@ff2+3,c
  1950  001BC2                     l425:
  1951  001BC2  0E00               	movlw	0
  1952  001BC4  1A01               	xorwf	___flge@ff1,f,c
  1953  001BC6  0E00               	movlw	0
  1954  001BC8  1A02               	xorwf	___flge@ff1+1,f,c
  1955  001BCA  0E00               	movlw	0
  1956  001BCC  1A03               	xorwf	___flge@ff1+2,f,c
  1957  001BCE  0E80               	movlw	128
  1958  001BD0  1A04               	xorwf	___flge@ff1+3,f,c
  1959  001BD2  0E00               	movlw	0
  1960  001BD4  1A05               	xorwf	___flge@ff2,f,c
  1961  001BD6  0E00               	movlw	0
  1962  001BD8  1A06               	xorwf	___flge@ff2+1,f,c
  1963  001BDA  0E00               	movlw	0
  1964  001BDC  1A07               	xorwf	___flge@ff2+2,f,c
  1965  001BDE  0E80               	movlw	128
  1966  001BE0  1A08               	xorwf	___flge@ff2+3,f,c
  1967  001BE2  5005               	movf	___flge@ff2,w,c
  1968  001BE4  5C01               	subwf	___flge@ff1,w,c
  1969  001BE6  5006               	movf	___flge@ff2+1,w,c
  1970  001BE8  5802               	subwfb	___flge@ff1+1,w,c
  1971  001BEA  5007               	movf	___flge@ff2+2,w,c
  1972  001BEC  5803               	subwfb	___flge@ff1+2,w,c
  1973  001BEE  5008               	movf	___flge@ff2+3,w,c
  1974  001BF0  5804               	subwfb	___flge@ff1+3,w,c
  1975  001BF2  B0D8               	btfsc	status,0,c
  1976  001BF4  D002               	goto	l427
  1977  001BF6  90D8               	bcf	status,0,c
  1978  001BF8  0012               	return	
  1979  001BFA                     l427:
  1980  001BFA  80D8               	bsf	status,0,c
  1981  001BFC  0012               	return	
  1982  001BFE                     __end_of___flge:
  1983                           	opt stack 0
  1984                           tblptru	equ	0xFF8
  1985                           tblptrh	equ	0xFF7
  1986                           tblptrl	equ	0xFF6
  1987                           tablat	equ	0xFF5
  1988                           wreg	equ	0xFE8
  1989                           status	equ	0xFD8
  1990                           
  1991 ;; *************** function _USART_SendString *****************
  1992 ;; Defined at:
  1993 ;;		line 51 in file "USART_Source_File.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  out             2    1[COMRAM] PTR const unsigned char 
  1996 ;;		 -> STR_5(2), STR_4(6), STR_3(5), STR_2(9), 
  1997 ;;		 -> STR_1(8), 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2009 ;;      Params:         2       0       0       0       0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2012 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2013 ;;Total ram usage:        2 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    1
  2016 ;; This function calls:
  2017 ;;		_USART_TransmitChar
  2018 ;; This function is called by:
  2019 ;;		_main
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text5
  2024  001ED2                     __ptext5:
  2025                           	opt stack 0
  2026  001ED2                     _USART_SendString:
  2027                           	opt stack 29
  2028                           
  2029                           ;USART_Source_File.c: 51: void USART_SendString(const char *out);USART_Source_File.c: 52
      +                          : {;USART_Source_File.c: 53:    while(*out!='\0')
  2030                           
  2031                           ;incstack = 0
  2032  001ED2  D00A               	goto	l146
  2033  001ED4                     
  2034                           ;USART_Source_File.c: 54:    {;USART_Source_File.c: 55:         USART_TransmitChar(*out)
      +                          ;
  2035  001ED4  C002  FFF6         	movff	USART_SendString@out,tblptrl
  2036  001ED8  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
  2037  001EDC                     	if	0	;tblptru may be non-zero
  2038  001EDC                     	endif
  2039  001EDC                     	if	0	;tblptru may be non-zero
  2040  001EDC                     	endif
  2041  001EDC  0008               	tblrd		*
  2042  001EDE  50F5               	movf	tablat,w,c
  2043  001EE0  EC9D  F00F         	call	_USART_TransmitChar
  2044                           
  2045                           ;USART_Source_File.c: 56:         out++;
  2046  001EE4  4A02               	infsnz	USART_SendString@out,f,c
  2047  001EE6  2A03               	incf	USART_SendString@out+1,f,c
  2048  001EE8                     l146:
  2049                           
  2050                           ;USART_Source_File.c: 53:    while(*out!='\0')
  2051  001EE8  C002  FFF6         	movff	USART_SendString@out,tblptrl
  2052  001EEC  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
  2053  001EF0                     	if	0	;tblptru may be non-zero
  2054  001EF0                     	endif
  2055  001EF0                     	if	0	;tblptru may be non-zero
  2056  001EF0                     	endif
  2057  001EF0  0008               	tblrd		*
  2058  001EF2  50F5               	movf	tablat,w,c
  2059  001EF4  0900               	iorlw	0
  2060  001EF6  B4D8               	btfsc	status,2,c
  2061  001EF8  0012               	return	
  2062  001EFA  D7EC               	goto	l147
  2063  001EFC                     __end_of_USART_SendString:
  2064                           	opt stack 0
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           wreg	equ	0xFE8
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _USART_TransmitChar *****************
  2073 ;; Defined at:
  2074 ;;		line 19 in file "USART_Source_File.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  out             1    wreg     unsigned char 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  out             1    0[COMRAM] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0
  2089 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2091 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2092 ;;Total ram usage:        1 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_USART_SendString
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text6
  2102  001F3A                     __ptext6:
  2103                           	opt stack 0
  2104  001F3A                     _USART_TransmitChar:
  2105                           	opt stack 29
  2106                           
  2107                           ;incstack = 0
  2108                           ;USART_TransmitChar@out stored from wreg
  2109  001F3A  6E01               	movwf	USART_TransmitChar@out,c
  2110  001F3C                     
  2111                           ;USART_Source_File.c: 19: void USART_TransmitChar(char out);USART_Source_File.c: 20: {;U
      +                          SART_Source_File.c: 21:         while(TXIF==0);
  2112  001F3C  A89E               	btfss	3998,4,c	;volatile
  2113  001F3E  D7FE               	goto	l2066
  2114                           
  2115                           ;USART_Source_File.c: 22:         TXREG=out;
  2116  001F40  C001  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
  2117  001F44  0012               	return		;funcret
  2118  001F46                     __end_of_USART_TransmitChar:
  2119                           	opt stack 0
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           wreg	equ	0xFE8
  2125                           status	equ	0xFD8
  2126                           
  2127 ;; *************** function _USART_ReceiveChar *****************
  2128 ;; Defined at:
  2129 ;;		line 26 in file "USART_Source_File.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      unsigned char 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;;		_UARTReadString
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text7
  2158  001F46                     __ptext7:
  2159                           	opt stack 0
  2160  001F46                     _USART_ReceiveChar:
  2161                           	opt stack 30
  2162                           
  2163                           ;USART_Source_File.c: 29:     while(RCIF==0);
  2164                           
  2165                           ;incstack = 0
  2166  001F46  AA9E               	btfss	3998,5,c	;volatile
  2167  001F48  D7FE               	goto	_USART_ReceiveChar
  2168                           
  2169                           ;USART_Source_File.c: 30:     return(RCREG);
  2170  001F4A  50AE               	movf	4014,w,c	;volatile
  2171  001F4C  0012               	return	
  2172  001F4E                     __end_of_USART_ReceiveChar:
  2173                           	opt stack 0
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           wreg	equ	0xFE8
  2179                           status	equ	0xFD8
  2180                           
  2181 ;; *************** function _USART_Init *****************
  2182 ;; Defined at:
  2183 ;;		line 8 in file "USART_Source_File.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  baud_rate       4    0[BANK0 ] long 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  temp            4    4[BANK0 ] float 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2197 ;;      Params:         0       4       0       0       0       0       0       0       0
  2198 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2200 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2201 ;;Total ram usage:        8 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    1
  2204 ;; This function calls:
  2205 ;;		___fladd
  2206 ;;		___fldiv
  2207 ;;		___fltol
  2208 ;;		___xxtofl
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text8
  2215  001DDA                     __ptext8:
  2216                           	opt stack 0
  2217  001DDA                     _USART_Init:
  2218                           	opt stack 29
  2219                           
  2220                           ;USART_Source_File.c: 8: void USART_Init(long baud_rate);USART_Source_File.c: 9: {;USART
      +                          _Source_File.c: 10:     float temp;;USART_Source_File.c: 11:     TRISC6=0;
  2221                           
  2222                           ;incstack = 0
  2223  001DDA  9C94               	bcf	3988,6,c	;volatile
  2224                           
  2225                           ;USART_Source_File.c: 12:     TRISC7=1;
  2226  001DDC  8E94               	bsf	3988,7,c	;volatile
  2227                           
  2228                           ;USART_Source_File.c: 13:     temp=(((float)(8000000/64)/(float)baud_rate)-1);
  2229  001DDE  C060  F001         	movff	USART_Init@baud_rate,___xxtofl@val
  2230  001DE2  C061  F002         	movff	USART_Init@baud_rate+1,___xxtofl@val+1
  2231  001DE6  C062  F003         	movff	USART_Init@baud_rate+2,___xxtofl@val+2
  2232  001DEA  C063  F004         	movff	USART_Init@baud_rate+3,___xxtofl@val+3
  2233  001DEE  0E01               	movlw	1
  2234  001DF0  ECCF  F00C         	call	___xxtofl
  2235  001DF4  C001  F02C         	movff	?___xxtofl,___fldiv@a
  2236  001DF8  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  2237  001DFC  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  2238  001E00  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  2239  001E04  0E00               	movlw	0
  2240  001E06  6E28               	movwf	___fldiv@b,c
  2241  001E08  0E24               	movlw	36
  2242  001E0A  6E29               	movwf	___fldiv@b+1,c
  2243  001E0C  0EF4               	movlw	244
  2244  001E0E  6E2A               	movwf	___fldiv@b+2,c
  2245  001E10  0E47               	movlw	71
  2246  001E12  6E2B               	movwf	___fldiv@b+3,c
  2247  001E14  ECA2  F00A         	call	___fldiv	;wreg free
  2248  001E18  C028  F041         	movff	?___fldiv,___fladd@b
  2249  001E1C  C029  F042         	movff	?___fldiv+1,___fladd@b+1
  2250  001E20  C02A  F043         	movff	?___fldiv+2,___fladd@b+2
  2251  001E24  C02B  F044         	movff	?___fldiv+3,___fladd@b+3
  2252  001E28  0E00               	movlw	0
  2253  001E2A  6E45               	movwf	___fladd@a,c
  2254  001E2C  0E00               	movlw	0
  2255  001E2E  6E46               	movwf	___fladd@a+1,c
  2256  001E30  0E80               	movlw	128
  2257  001E32  6E47               	movwf	___fladd@a+2,c
  2258  001E34  0EBF               	movlw	191
  2259  001E36  6E48               	movwf	___fladd@a+3,c
  2260  001E38  EC79  F007         	call	___fladd	;wreg free
  2261  001E3C  C041  F064         	movff	?___fladd,USART_Init@temp
  2262  001E40  C042  F065         	movff	?___fladd+1,USART_Init@temp+1
  2263  001E44  C043  F066         	movff	?___fladd+2,USART_Init@temp+2
  2264  001E48  C044  F067         	movff	?___fladd+3,USART_Init@temp+3
  2265                           
  2266                           ;USART_Source_File.c: 14:     SPBRG=(int)temp;
  2267  001E4C  C064  F055         	movff	USART_Init@temp,___fltol@f1
  2268  001E50  C065  F056         	movff	USART_Init@temp+1,___fltol@f1+1
  2269  001E54  C066  F057         	movff	USART_Init@temp+2,___fltol@f1+2
  2270  001E58  C067  F058         	movff	USART_Init@temp+3,___fltol@f1+3
  2271  001E5C  EC7F  F00E         	call	___fltol	;wreg free
  2272  001E60  5055               	movf	?___fltol,w,c
  2273  001E62  6EAF               	movwf	4015,c	;volatile
  2274                           
  2275                           ;USART_Source_File.c: 15:     TXSTA=0x20;
  2276  001E64  0E20               	movlw	32
  2277  001E66  6EAC               	movwf	4012,c	;volatile
  2278                           
  2279                           ;USART_Source_File.c: 16:     RCSTA=0x90;
  2280  001E68  0E90               	movlw	144
  2281  001E6A  6EAB               	movwf	4011,c	;volatile
  2282  001E6C  0012               	return		;funcret
  2283  001E6E                     __end_of_USART_Init:
  2284                           	opt stack 0
  2285                           tblptru	equ	0xFF8
  2286                           tblptrh	equ	0xFF7
  2287                           tblptrl	equ	0xFF6
  2288                           tablat	equ	0xFF5
  2289                           wreg	equ	0xFE8
  2290                           status	equ	0xFD8
  2291                           
  2292 ;; *************** function _SetDutyCycleTo *****************
  2293 ;; Defined at:
  2294 ;;		line 65 in file "HC-05_Module.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  Duty_cycle      4    0[BANK0 ] float 
  2297 ;;  Period          2    4[BANK0 ] int 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  PWM10BitValu    2   12[BANK0 ] int 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2309 ;;      Params:         0       6       0       0       0       0       0       0       0
  2310 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2311 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2312 ;;      Totals:         0      14       0       0       0       0       0       0       0
  2313 ;;Total ram usage:       14 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    1
  2316 ;; This function calls:
  2317 ;;		___fladd
  2318 ;;		___fldiv
  2319 ;;		___flmul
  2320 ;;		___fltol
  2321 ;;		___xxtofl
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text9
  2328  001BFE                     __ptext9:
  2329                           	opt stack 0
  2330  001BFE                     _SetDutyCycleTo:
  2331                           	opt stack 29
  2332                           
  2333                           ;HC-05_Module.c: 65: void SetDutyCycleTo(float Duty_cycle, int Period);HC-05_Module.c: 6
      +                          6: {;HC-05_Module.c: 67:     int PWM10BitValue;;HC-05_Module.c: 69:     PWM10BitValue = 
      +                          4.0 * ((float)Period + 1.0) * (Duty_cycle/100.0);
  2334                           
  2335                           ;incstack = 0
  2336  001BFE  0E00               	movlw	0
  2337  001C00  6E13               	movwf	___flmul@a,c
  2338  001C02  0E00               	movlw	0
  2339  001C04  6E14               	movwf	___flmul@a+1,c
  2340  001C06  0E80               	movlw	128
  2341  001C08  6E15               	movwf	___flmul@a+2,c
  2342  001C0A  0E40               	movlw	64
  2343  001C0C  6E16               	movwf	___flmul@a+3,c
  2344  001C0E  0E00               	movlw	0
  2345  001C10  6E45               	movwf	___fladd@a,c
  2346  001C12  0E00               	movlw	0
  2347  001C14  6E46               	movwf	___fladd@a+1,c
  2348  001C16  0E80               	movlw	128
  2349  001C18  6E47               	movwf	___fladd@a+2,c
  2350  001C1A  0E3F               	movlw	63
  2351  001C1C  6E48               	movwf	___fladd@a+3,c
  2352  001C1E  C064  F001         	movff	SetDutyCycleTo@Period,___xxtofl@val
  2353  001C22  C065  F002         	movff	SetDutyCycleTo@Period+1,___xxtofl@val+1
  2354  001C26  0E00               	movlw	0
  2355  001C28  BE02               	btfsc	___xxtofl@val+1,7,c
  2356  001C2A  0EFF               	movlw	-1
  2357  001C2C  6E03               	movwf	___xxtofl@val+2,c
  2358  001C2E  6E04               	movwf	___xxtofl@val+3,c
  2359  001C30  0E01               	movlw	1
  2360  001C32  ECCF  F00C         	call	___xxtofl
  2361  001C36  C001  F041         	movff	?___xxtofl,___fladd@b
  2362  001C3A  C002  F042         	movff	?___xxtofl+1,___fladd@b+1
  2363  001C3E  C003  F043         	movff	?___xxtofl+2,___fladd@b+2
  2364  001C42  C004  F044         	movff	?___xxtofl+3,___fladd@b+3
  2365  001C46  EC79  F007         	call	___fladd	;wreg free
  2366  001C4A  C041  F00F         	movff	?___fladd,___flmul@b
  2367  001C4E  C042  F010         	movff	?___fladd+1,___flmul@b+1
  2368  001C52  C043  F011         	movff	?___fladd+2,___flmul@b+2
  2369  001C56  C044  F012         	movff	?___fladd+3,___flmul@b+3
  2370  001C5A  ECD1  F005         	call	___flmul	;wreg free
  2371  001C5E  C00F  F068         	movff	?___flmul,_SetDutyCycleTo$840
  2372  001C62  C010  F069         	movff	?___flmul+1,_SetDutyCycleTo$840+1
  2373  001C66  C011  F06A         	movff	?___flmul+2,_SetDutyCycleTo$840+2
  2374  001C6A  C012  F06B         	movff	?___flmul+3,_SetDutyCycleTo$840+3
  2375                           
  2376                           ;HC-05_Module.c: 65: void SetDutyCycleTo(float Duty_cycle, int Period);HC-05_Module.c: 6
      +                          6: {;HC-05_Module.c: 67:     int PWM10BitValue;;HC-05_Module.c: 69:     PWM10BitValue = 
      +                          4.0 * ((float)Period + 1.0) * (Duty_cycle/100.0);
  2377  001C6E  0E00               	movlw	0
  2378  001C70  6E2C               	movwf	___fldiv@a,c
  2379  001C72  0E00               	movlw	0
  2380  001C74  6E2D               	movwf	___fldiv@a+1,c
  2381  001C76  0EC8               	movlw	200
  2382  001C78  6E2E               	movwf	___fldiv@a+2,c
  2383  001C7A  0E42               	movlw	66
  2384  001C7C  6E2F               	movwf	___fldiv@a+3,c
  2385  001C7E  C060  F028         	movff	SetDutyCycleTo@Duty_cycle,___fldiv@b
  2386  001C82  C061  F029         	movff	SetDutyCycleTo@Duty_cycle+1,___fldiv@b+1
  2387  001C86  C062  F02A         	movff	SetDutyCycleTo@Duty_cycle+2,___fldiv@b+2
  2388  001C8A  C063  F02B         	movff	SetDutyCycleTo@Duty_cycle+3,___fldiv@b+3
  2389  001C8E  ECA2  F00A         	call	___fldiv	;wreg free
  2390  001C92  C028  F013         	movff	?___fldiv,___flmul@a
  2391  001C96  C029  F014         	movff	?___fldiv+1,___flmul@a+1
  2392  001C9A  C02A  F015         	movff	?___fldiv+2,___flmul@a+2
  2393  001C9E  C02B  F016         	movff	?___fldiv+3,___flmul@a+3
  2394  001CA2  C068  F00F         	movff	_SetDutyCycleTo$840,___flmul@b
  2395  001CA6  C069  F010         	movff	_SetDutyCycleTo$840+1,___flmul@b+1
  2396  001CAA  C06A  F011         	movff	_SetDutyCycleTo$840+2,___flmul@b+2
  2397  001CAE  C06B  F012         	movff	_SetDutyCycleTo$840+3,___flmul@b+3
  2398  001CB2  ECD1  F005         	call	___flmul	;wreg free
  2399  001CB6  C00F  F055         	movff	?___flmul,___fltol@f1
  2400  001CBA  C010  F056         	movff	?___flmul+1,___fltol@f1+1
  2401  001CBE  C011  F057         	movff	?___flmul+2,___fltol@f1+2
  2402  001CC2  C012  F058         	movff	?___flmul+3,___fltol@f1+3
  2403  001CC6  EC7F  F00E         	call	___fltol	;wreg free
  2404  001CCA  C055  F06C         	movff	?___fltol,SetDutyCycleTo@PWM10BitValue
  2405  001CCE  C056  F06D         	movff	?___fltol+1,SetDutyCycleTo@PWM10BitValue+1
  2406                           
  2407                           ;HC-05_Module.c: 70:     CCPR2L = (PWM10BitValue >> 2);
  2408  001CD2  C06C  F066         	movff	SetDutyCycleTo@PWM10BitValue,??_SetDutyCycleTo
  2409  001CD6  C06D  F067         	movff	SetDutyCycleTo@PWM10BitValue+1,??_SetDutyCycleTo+1
  2410  001CDA  0100               	movlb	0	; () banked
  2411  001CDC  3567               	rlcf	(??_SetDutyCycleTo+1)& (0+255),w,b
  2412  001CDE  3367               	rrcf	(??_SetDutyCycleTo+1)& (0+255),f,b
  2413  001CE0  3366               	rrcf	??_SetDutyCycleTo& (0+255),f,b
  2414  001CE2  3567               	rlcf	(??_SetDutyCycleTo+1)& (0+255),w,b
  2415  001CE4  3367               	rrcf	(??_SetDutyCycleTo+1)& (0+255),f,b
  2416  001CE6  3366               	rrcf	??_SetDutyCycleTo& (0+255),f,b
  2417  001CE8  5166               	movf	??_SetDutyCycleTo& (0+255),w,b
  2418  001CEA  6EBB               	movwf	4027,c	;volatile
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;HC-05_Module.c: 71:     CCP2CON = ((PWM10BitValue & 0x03) << 4) | 0x0C;
  2422  001CEC  C06C  F066         	movff	SetDutyCycleTo@PWM10BitValue,??_SetDutyCycleTo
  2423  001CF0  0E03               	movlw	3
  2424  001CF2  1766               	andwf	??_SetDutyCycleTo& (0+255),f,b
  2425  001CF4  3966               	swapf	??_SetDutyCycleTo& (0+255),w,b
  2426  001CF6  0BF0               	andlw	240
  2427  001CF8  090C               	iorlw	12
  2428  001CFA  6EBA               	movwf	4026,c	;volatile
  2429                           
  2430                           ; BSR set to: 0
  2431  001CFC  0012               	return		;funcret
  2432  001CFE                     __end_of_SetDutyCycleTo:
  2433                           	opt stack 0
  2434                           tblptru	equ	0xFF8
  2435                           tblptrh	equ	0xFF7
  2436                           tblptrl	equ	0xFF6
  2437                           tablat	equ	0xFF5
  2438                           wreg	equ	0xFE8
  2439                           status	equ	0xFD8
  2440                           
  2441 ;; *************** function ___xxtofl *****************
  2442 ;; Defined at:
  2443 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  sign            1    wreg     unsigned char 
  2446 ;;  val             4    0[COMRAM] long 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  sign            1    8[COMRAM] unsigned char 
  2449 ;;  arg             4   10[COMRAM] unsigned long 
  2450 ;;  exp             1    9[COMRAM] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  4    0[COMRAM] unsigned char 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2460 ;;      Params:         4       0       0       0       0       0       0       0       0
  2461 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2462 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2463 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2464 ;;Total ram usage:       14 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_setPeriodTo
  2470 ;;		_SetDutyCycleTo
  2471 ;;		_USART_Init
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text10
  2476  00199E                     __ptext10:
  2477                           	opt stack 0
  2478  00199E                     ___xxtofl:
  2479                           	opt stack 29
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;incstack = 0
  2483                           ;___xxtofl@sign stored from wreg
  2484  00199E  6E09               	movwf	___xxtofl@sign,c
  2485  0019A0  5009               	movf	___xxtofl@sign,w,c
  2486  0019A2  A4D8               	btfss	status,2,c
  2487  0019A4  AE04               	btfss	___xxtofl@val+3,7,c
  2488  0019A6  D01A               	goto	l815
  2489  0019A8  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2490  0019AC  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2491  0019B0  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2492  0019B4  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2493  0019B8  1E05               	comf	??___xxtofl,f,c
  2494  0019BA  1E06               	comf	??___xxtofl+1,f,c
  2495  0019BC  1E07               	comf	??___xxtofl+2,f,c
  2496  0019BE  1E08               	comf	??___xxtofl+3,f,c
  2497  0019C0  2A05               	incf	??___xxtofl,f,c
  2498  0019C2  0E00               	movlw	0
  2499  0019C4  2206               	addwfc	??___xxtofl+1,f,c
  2500  0019C6  2207               	addwfc	??___xxtofl+2,f,c
  2501  0019C8  2208               	addwfc	??___xxtofl+3,f,c
  2502  0019CA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2503  0019CE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2504  0019D2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2505  0019D6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2506  0019DA  D008               	goto	l816
  2507  0019DC                     l815:
  2508  0019DC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2509  0019E0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2510  0019E4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2511  0019E8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2512  0019EC                     l816:
  2513  0019EC  5001               	movf	___xxtofl@val,w,c
  2514  0019EE  1002               	iorwf	___xxtofl@val+1,w,c
  2515  0019F0  1003               	iorwf	___xxtofl@val+2,w,c
  2516  0019F2  1004               	iorwf	___xxtofl@val+3,w,c
  2517  0019F4  A4D8               	btfss	status,2,c
  2518  0019F6  D009               	goto	l817
  2519  0019F8  0E00               	movlw	0
  2520  0019FA  6E01               	movwf	?___xxtofl,c
  2521  0019FC  0E00               	movlw	0
  2522  0019FE  6E02               	movwf	?___xxtofl+1,c
  2523  001A00  0E00               	movlw	0
  2524  001A02  6E03               	movwf	?___xxtofl+2,c
  2525  001A04  0E00               	movlw	0
  2526  001A06  6E04               	movwf	?___xxtofl+3,c
  2527  001A08  0012               	return	
  2528  001A0A                     l817:
  2529  001A0A  0E96               	movlw	150
  2530  001A0C  6E0A               	movwf	___xxtofl@exp,c
  2531  001A0E  D006               	goto	l819
  2532  001A10  2A0A               	incf	___xxtofl@exp,f,c
  2533  001A12  90D8               	bcf	status,0,c
  2534  001A14  320E               	rrcf	___xxtofl@arg+3,f,c
  2535  001A16  320D               	rrcf	___xxtofl@arg+2,f,c
  2536  001A18  320C               	rrcf	___xxtofl@arg+1,f,c
  2537  001A1A  320B               	rrcf	___xxtofl@arg,f,c
  2538  001A1C                     l819:
  2539  001A1C  0E00               	movlw	0
  2540  001A1E  140B               	andwf	___xxtofl@arg,w,c
  2541  001A20  6E05               	movwf	??___xxtofl& (0+255),c
  2542  001A22  0E00               	movlw	0
  2543  001A24  140C               	andwf	___xxtofl@arg+1,w,c
  2544  001A26  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2545  001A28  0E00               	movlw	0
  2546  001A2A  140D               	andwf	___xxtofl@arg+2,w,c
  2547  001A2C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2548  001A2E  0EFE               	movlw	254
  2549  001A30  140E               	andwf	___xxtofl@arg+3,w,c
  2550  001A32  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2551  001A34  5005               	movf	??___xxtofl,w,c
  2552  001A36  1006               	iorwf	??___xxtofl+1,w,c
  2553  001A38  1007               	iorwf	??___xxtofl+2,w,c
  2554  001A3A  1008               	iorwf	??___xxtofl+3,w,c
  2555  001A3C  B4D8               	btfsc	status,2,c
  2556  001A3E  D00D               	goto	l822
  2557  001A40  D7E7               	goto	l820
  2558  001A42  2A0A               	incf	___xxtofl@exp,f,c
  2559  001A44  0E01               	movlw	1
  2560  001A46  260B               	addwf	___xxtofl@arg,f,c
  2561  001A48  0E00               	movlw	0
  2562  001A4A  220C               	addwfc	___xxtofl@arg+1,f,c
  2563  001A4C  220D               	addwfc	___xxtofl@arg+2,f,c
  2564  001A4E  220E               	addwfc	___xxtofl@arg+3,f,c
  2565  001A50  90D8               	bcf	status,0,c
  2566  001A52  320E               	rrcf	___xxtofl@arg+3,f,c
  2567  001A54  320D               	rrcf	___xxtofl@arg+2,f,c
  2568  001A56  320C               	rrcf	___xxtofl@arg+1,f,c
  2569  001A58  320B               	rrcf	___xxtofl@arg,f,c
  2570  001A5A                     l822:
  2571  001A5A  0E00               	movlw	0
  2572  001A5C  140B               	andwf	___xxtofl@arg,w,c
  2573  001A5E  6E05               	movwf	??___xxtofl& (0+255),c
  2574  001A60  0E00               	movlw	0
  2575  001A62  140C               	andwf	___xxtofl@arg+1,w,c
  2576  001A64  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2577  001A66  0E00               	movlw	0
  2578  001A68  140D               	andwf	___xxtofl@arg+2,w,c
  2579  001A6A  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2580  001A6C  0EFF               	movlw	255
  2581  001A6E  140E               	andwf	___xxtofl@arg+3,w,c
  2582  001A70  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2583  001A72  5005               	movf	??___xxtofl,w,c
  2584  001A74  1006               	iorwf	??___xxtofl+1,w,c
  2585  001A76  1007               	iorwf	??___xxtofl+2,w,c
  2586  001A78  1008               	iorwf	??___xxtofl+3,w,c
  2587  001A7A  B4D8               	btfsc	status,2,c
  2588  001A7C  D007               	goto	l825
  2589  001A7E  D7E1               	goto	l823
  2590  001A80  060A               	decf	___xxtofl@exp,f,c
  2591  001A82  90D8               	bcf	status,0,c
  2592  001A84  360B               	rlcf	___xxtofl@arg,f,c
  2593  001A86  360C               	rlcf	___xxtofl@arg+1,f,c
  2594  001A88  360D               	rlcf	___xxtofl@arg+2,f,c
  2595  001A8A  360E               	rlcf	___xxtofl@arg+3,f,c
  2596  001A8C                     l825:
  2597  001A8C  BE0D               	btfsc	___xxtofl@arg+2,7,c
  2598  001A8E  D003               	goto	u2560
  2599  001A90  0E02               	movlw	2
  2600  001A92  600A               	cpfslt	___xxtofl@exp,c
  2601  001A94  D7F5               	goto	l826
  2602  001A96                     u2560:
  2603  001A96  A00A               	btfss	___xxtofl@exp,0,c
  2604  001A98  9E0D               	bcf	___xxtofl@arg+2,7,c
  2605  001A9A  90D8               	bcf	status,0,c
  2606  001A9C  320A               	rrcf	___xxtofl@exp,f,c
  2607  001A9E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2608  001AA2  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  2609  001AA4  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  2610  001AA6  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  2611  001AA8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2612  001AAC  6A07               	clrf	??___xxtofl+2,c
  2613  001AAE  6A06               	clrf	??___xxtofl+1,c
  2614  001AB0  6A05               	clrf	??___xxtofl,c
  2615  001AB2  5005               	movf	??___xxtofl,w,c
  2616  001AB4  120B               	iorwf	___xxtofl@arg,f,c
  2617  001AB6  5006               	movf	??___xxtofl+1,w,c
  2618  001AB8  120C               	iorwf	___xxtofl@arg+1,f,c
  2619  001ABA  5007               	movf	??___xxtofl+2,w,c
  2620  001ABC  120D               	iorwf	___xxtofl@arg+2,f,c
  2621  001ABE  5008               	movf	??___xxtofl+3,w,c
  2622  001AC0  120E               	iorwf	___xxtofl@arg+3,f,c
  2623  001AC2  5009               	movf	___xxtofl@sign,w,c
  2624  001AC4  A4D8               	btfss	status,2,c
  2625  001AC6  AE04               	btfss	___xxtofl@val+3,7,c
  2626  001AC8  D001               	goto	l831
  2627  001ACA  8E0E               	bsf	___xxtofl@arg+3,7,c
  2628  001ACC                     l831:
  2629  001ACC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2630  001AD0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2631  001AD4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2632  001AD8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2633  001ADC  0012               	return	
  2634  001ADE                     __end_of___xxtofl:
  2635                           	opt stack 0
  2636                           tblptru	equ	0xFF8
  2637                           tblptrh	equ	0xFF7
  2638                           tblptrl	equ	0xFF6
  2639                           tablat	equ	0xFF5
  2640                           wreg	equ	0xFE8
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function ___fltol *****************
  2644 ;; Defined at:
  2645 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  f1              4   84[COMRAM] unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  exp1            1   93[COMRAM] unsigned char 
  2650 ;;  sign1           1   92[COMRAM] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  4   84[COMRAM] long 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2660 ;;      Params:         4       0       0       0       0       0       0       0       0
  2661 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2662 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2663 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2664 ;;Total ram usage:       10 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_setPeriodTo
  2670 ;;		_SetDutyCycleTo
  2671 ;;		_USART_Init
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text11
  2676  001CFE                     __ptext11:
  2677                           	opt stack 0
  2678  001CFE                     ___fltol:
  2679                           	opt stack 29
  2680                           
  2681                           ;incstack = 0
  2682  001CFE  3457               	rlcf	___fltol@f1+2,w,c
  2683  001D00  3458               	rlcf	___fltol@f1+3,w,c
  2684  001D02  6E5E               	movwf	___fltol@exp1,c
  2685  001D04  505E               	movf	___fltol@exp1,w,c
  2686  001D06  A4D8               	btfss	status,2,c
  2687  001D08  D009               	goto	l456
  2688  001D0A  0E00               	movlw	0
  2689  001D0C  6E55               	movwf	?___fltol,c
  2690  001D0E  0E00               	movlw	0
  2691  001D10  6E56               	movwf	?___fltol+1,c
  2692  001D12  0E00               	movlw	0
  2693  001D14  6E57               	movwf	?___fltol+2,c
  2694  001D16  0E00               	movlw	0
  2695  001D18  6E58               	movwf	?___fltol+3,c
  2696  001D1A  0012               	return	
  2697  001D1C                     l456:
  2698  001D1C  C055  F059         	movff	___fltol@f1,??___fltol
  2699  001D20  C056  F05A         	movff	___fltol@f1+1,??___fltol+1
  2700  001D24  C057  F05B         	movff	___fltol@f1+2,??___fltol+2
  2701  001D28  C058  F05C         	movff	___fltol@f1+3,??___fltol+3
  2702  001D2C  0E20               	movlw	32
  2703  001D2E  D005               	goto	u2440
  2704  001D30                     u2445:
  2705  001D30  90D8               	bcf	status,0,c
  2706  001D32  325C               	rrcf	??___fltol+3,f,c
  2707  001D34  325B               	rrcf	??___fltol+2,f,c
  2708  001D36  325A               	rrcf	??___fltol+1,f,c
  2709  001D38  3259               	rrcf	??___fltol,f,c
  2710  001D3A                     u2440:
  2711  001D3A  2EE8               	decfsz	wreg,f,c
  2712  001D3C  D7F9               	goto	u2445
  2713  001D3E  5059               	movf	??___fltol,w,c
  2714  001D40  6E5D               	movwf	___fltol@sign1,c
  2715  001D42  8E57               	bsf	___fltol@f1+2,7,c
  2716  001D44  0EFF               	movlw	255
  2717  001D46  1655               	andwf	___fltol@f1,f,c
  2718  001D48  0EFF               	movlw	255
  2719  001D4A  1656               	andwf	___fltol@f1+1,f,c
  2720  001D4C  0EFF               	movlw	255
  2721  001D4E  1657               	andwf	___fltol@f1+2,f,c
  2722  001D50  0E00               	movlw	0
  2723  001D52  1658               	andwf	___fltol@f1+3,f,c
  2724  001D54  0E96               	movlw	150
  2725  001D56  5E5E               	subwf	___fltol@exp1,f,c
  2726  001D58  AE5E               	btfss	___fltol@exp1,7,c
  2727  001D5A  D016               	goto	l458
  2728  001D5C  505E               	movf	___fltol@exp1,w,c
  2729  001D5E  0A80               	xorlw	128
  2730  001D60  0F97               	addlw	151
  2731  001D62  B0D8               	btfsc	status,0,c
  2732  001D64  D009               	goto	l459
  2733  001D66  0E00               	movlw	0
  2734  001D68  6E55               	movwf	?___fltol,c
  2735  001D6A  0E00               	movlw	0
  2736  001D6C  6E56               	movwf	?___fltol+1,c
  2737  001D6E  0E00               	movlw	0
  2738  001D70  6E57               	movwf	?___fltol+2,c
  2739  001D72  0E00               	movlw	0
  2740  001D74  6E58               	movwf	?___fltol+3,c
  2741  001D76  0012               	return	
  2742  001D78                     l459:
  2743  001D78  90D8               	bcf	status,0,c
  2744  001D7A  3258               	rrcf	___fltol@f1+3,f,c
  2745  001D7C  3257               	rrcf	___fltol@f1+2,f,c
  2746  001D7E  3256               	rrcf	___fltol@f1+1,f,c
  2747  001D80  3255               	rrcf	___fltol@f1,f,c
  2748  001D82  3E5E               	incfsz	___fltol@exp1,f,c
  2749  001D84  D7F9               	goto	l459
  2750  001D86  D015               	goto	u2480
  2751  001D88                     l458:
  2752  001D88  0E1F               	movlw	31
  2753  001D8A  645E               	cpfsgt	___fltol@exp1,c
  2754  001D8C  D00F               	goto	l464
  2755  001D8E  0E00               	movlw	0
  2756  001D90  6E55               	movwf	?___fltol,c
  2757  001D92  0E00               	movlw	0
  2758  001D94  6E56               	movwf	?___fltol+1,c
  2759  001D96  0E00               	movlw	0
  2760  001D98  6E57               	movwf	?___fltol+2,c
  2761  001D9A  0E00               	movlw	0
  2762  001D9C  6E58               	movwf	?___fltol+3,c
  2763  001D9E  0012               	return	
  2764  001DA0  90D8               	bcf	status,0,c
  2765  001DA2  3655               	rlcf	___fltol@f1,f,c
  2766  001DA4  3656               	rlcf	___fltol@f1+1,f,c
  2767  001DA6  3657               	rlcf	___fltol@f1+2,f,c
  2768  001DA8  3658               	rlcf	___fltol@f1+3,f,c
  2769  001DAA  065E               	decf	___fltol@exp1,f,c
  2770  001DAC                     l464:
  2771  001DAC  505E               	movf	___fltol@exp1,w,c
  2772  001DAE  A4D8               	btfss	status,2,c
  2773  001DB0  D7F7               	goto	l465
  2774  001DB2                     u2480:
  2775  001DB2  505D               	movf	___fltol@sign1,w,c
  2776  001DB4  B4D8               	btfsc	status,2,c
  2777  001DB6  D008               	goto	l467
  2778  001DB8  1E58               	comf	___fltol@f1+3,f,c
  2779  001DBA  1E57               	comf	___fltol@f1+2,f,c
  2780  001DBC  1E56               	comf	___fltol@f1+1,f,c
  2781  001DBE  6C55               	negf	___fltol@f1,c
  2782  001DC0  0E00               	movlw	0
  2783  001DC2  2256               	addwfc	___fltol@f1+1,f,c
  2784  001DC4  2257               	addwfc	___fltol@f1+2,f,c
  2785  001DC6  2258               	addwfc	___fltol@f1+3,f,c
  2786  001DC8                     l467:
  2787  001DC8  C055  F055         	movff	___fltol@f1,?___fltol
  2788  001DCC  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  2789  001DD0  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  2790  001DD4  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  2791  001DD8  0012               	return	
  2792  001DDA                     __end_of___fltol:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           wreg	equ	0xFE8
  2799                           status	equ	0xFD8
  2800                           
  2801 ;; *************** function ___flmul *****************
  2802 ;; Defined at:
  2803 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  b               4   14[COMRAM] long 
  2806 ;;  a               4   18[COMRAM] long 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  prod            4   33[COMRAM] struct .
  2809 ;;  grs             4   27[COMRAM] unsigned long 
  2810 ;;  temp            2   37[COMRAM] struct .
  2811 ;;  bexp            1   32[COMRAM] unsigned char 
  2812 ;;  aexp            1   31[COMRAM] unsigned char 
  2813 ;;  sign            1   26[COMRAM] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  4   14[COMRAM] unsigned char 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, prodl, prodh
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2823 ;;      Params:         8       0       0       0       0       0       0       0       0
  2824 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2825 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2826 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2827 ;;Total ram usage:       25 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_setPeriodTo
  2833 ;;		_SetDutyCycleTo
  2834 ;;		_roundf
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text12
  2839  000BA2                     __ptext12:
  2840                           	opt stack 0
  2841  000BA2                     ___flmul:
  2842                           	opt stack 28
  2843                           
  2844                           ;incstack = 0
  2845  000BA2  5012               	movf	___flmul@b+3,w,c
  2846  000BA4  0B80               	andlw	128
  2847  000BA6  6E1B               	movwf	___flmul@sign,c
  2848  000BA8  5012               	movf	___flmul@b+3,w,c
  2849  000BAA  2412               	addwf	___flmul@b+3,w,c
  2850  000BAC  6E21               	movwf	___flmul@bexp,c
  2851  000BAE  BE11               	btfsc	___flmul@b+2,7,c
  2852  000BB0  8021               	bsf	___flmul@bexp,0,c
  2853  000BB2  5021               	movf	___flmul@bexp,w,c
  2854  000BB4  B4D8               	btfsc	status,2,c
  2855  000BB6  D00D               	goto	l768
  2856  000BB8  2821               	incf	___flmul@bexp,w,c
  2857  000BBA  A4D8               	btfss	status,2,c
  2858  000BBC  D008               	goto	l769
  2859  000BBE  0E00               	movlw	0
  2860  000BC0  6E0F               	movwf	___flmul@b,c
  2861  000BC2  0E00               	movlw	0
  2862  000BC4  6E10               	movwf	___flmul@b+1,c
  2863  000BC6  0E00               	movlw	0
  2864  000BC8  6E11               	movwf	___flmul@b+2,c
  2865  000BCA  0E00               	movlw	0
  2866  000BCC  6E12               	movwf	___flmul@b+3,c
  2867  000BCE                     l769:
  2868  000BCE  8E11               	bsf	___flmul@b+2,7,c
  2869  000BD0  D008               	goto	l770
  2870  000BD2                     l768:
  2871  000BD2  0E00               	movlw	0
  2872  000BD4  6E0F               	movwf	___flmul@b,c
  2873  000BD6  0E00               	movlw	0
  2874  000BD8  6E10               	movwf	___flmul@b+1,c
  2875  000BDA  0E00               	movlw	0
  2876  000BDC  6E11               	movwf	___flmul@b+2,c
  2877  000BDE  0E00               	movlw	0
  2878  000BE0  6E12               	movwf	___flmul@b+3,c
  2879  000BE2                     l770:
  2880  000BE2  5016               	movf	___flmul@a+3,w,c
  2881  000BE4  0B80               	andlw	128
  2882  000BE6  1A1B               	xorwf	___flmul@sign,f,c
  2883  000BE8  5016               	movf	___flmul@a+3,w,c
  2884  000BEA  2416               	addwf	___flmul@a+3,w,c
  2885  000BEC  6E20               	movwf	___flmul@aexp,c
  2886  000BEE  BE15               	btfsc	___flmul@a+2,7,c
  2887  000BF0  8020               	bsf	___flmul@aexp,0,c
  2888  000BF2  5020               	movf	___flmul@aexp,w,c
  2889  000BF4  B4D8               	btfsc	status,2,c
  2890  000BF6  D00D               	goto	l772
  2891  000BF8  2820               	incf	___flmul@aexp,w,c
  2892  000BFA  A4D8               	btfss	status,2,c
  2893  000BFC  D008               	goto	l773
  2894  000BFE  0E00               	movlw	0
  2895  000C00  6E13               	movwf	___flmul@a,c
  2896  000C02  0E00               	movlw	0
  2897  000C04  6E14               	movwf	___flmul@a+1,c
  2898  000C06  0E00               	movlw	0
  2899  000C08  6E15               	movwf	___flmul@a+2,c
  2900  000C0A  0E00               	movlw	0
  2901  000C0C  6E16               	movwf	___flmul@a+3,c
  2902  000C0E                     l773:
  2903  000C0E  8E15               	bsf	___flmul@a+2,7,c
  2904  000C10  D008               	goto	l774
  2905  000C12                     l772:
  2906  000C12  0E00               	movlw	0
  2907  000C14  6E13               	movwf	___flmul@a,c
  2908  000C16  0E00               	movlw	0
  2909  000C18  6E14               	movwf	___flmul@a+1,c
  2910  000C1A  0E00               	movlw	0
  2911  000C1C  6E15               	movwf	___flmul@a+2,c
  2912  000C1E  0E00               	movlw	0
  2913  000C20  6E16               	movwf	___flmul@a+3,c
  2914  000C22                     l774:
  2915  000C22  5020               	movf	___flmul@aexp,w,c
  2916  000C24  B4D8               	btfsc	status,2,c
  2917  000C26  D003               	goto	u1920
  2918  000C28  5021               	movf	___flmul@bexp,w,c
  2919  000C2A  A4D8               	btfss	status,2,c
  2920  000C2C  D009               	goto	l775
  2921  000C2E                     u1920:
  2922  000C2E  0E00               	movlw	0
  2923  000C30  6E0F               	movwf	?___flmul,c
  2924  000C32  0E00               	movlw	0
  2925  000C34  6E10               	movwf	?___flmul+1,c
  2926  000C36  0E00               	movlw	0
  2927  000C38  6E11               	movwf	?___flmul+2,c
  2928  000C3A  0E00               	movlw	0
  2929  000C3C  6E12               	movwf	?___flmul+3,c
  2930  000C3E  0012               	return	
  2931  000C40                     l775:
  2932  000C40  5015               	movf	___flmul@a+2,w,c
  2933  000C42  020F               	mulwf	___flmul@b,c
  2934  000C44  CFF3 F026          	movff	prodl,___flmul@temp
  2935  000C48  CFF4 F027          	movff	prodh,___flmul@temp+1
  2936  000C4C  5026               	movf	___flmul@temp,w,c
  2937  000C4E  6E1C               	movwf	___flmul@grs,c
  2938  000C50  6A1D               	clrf	___flmul@grs+1,c
  2939  000C52  6A1E               	clrf	___flmul@grs+2,c
  2940  000C54  6A1F               	clrf	___flmul@grs+3,c
  2941  000C56  5027               	movf	___flmul@temp+1,w,c
  2942  000C58  6E22               	movwf	___flmul@prod,c
  2943  000C5A  6A23               	clrf	___flmul@prod+1,c
  2944  000C5C  6A24               	clrf	___flmul@prod+2,c
  2945  000C5E  6A25               	clrf	___flmul@prod+3,c
  2946  000C60  5014               	movf	___flmul@a+1,w,c
  2947  000C62  0210               	mulwf	___flmul@b+1,c
  2948  000C64  CFF3 F026          	movff	prodl,___flmul@temp
  2949  000C68  CFF4 F027          	movff	prodh,___flmul@temp+1
  2950  000C6C  5026               	movf	___flmul@temp,w,c
  2951  000C6E  261C               	addwf	___flmul@grs,f,c
  2952  000C70  0E00               	movlw	0
  2953  000C72  221D               	addwfc	___flmul@grs+1,f,c
  2954  000C74  221E               	addwfc	___flmul@grs+2,f,c
  2955  000C76  221F               	addwfc	___flmul@grs+3,f,c
  2956  000C78  5027               	movf	___flmul@temp+1,w,c
  2957  000C7A  2622               	addwf	___flmul@prod,f,c
  2958  000C7C  0E00               	movlw	0
  2959  000C7E  2223               	addwfc	___flmul@prod+1,f,c
  2960  000C80  2224               	addwfc	___flmul@prod+2,f,c
  2961  000C82  2225               	addwfc	___flmul@prod+3,f,c
  2962  000C84  5013               	movf	___flmul@a,w,c
  2963  000C86  0211               	mulwf	___flmul@b+2,c
  2964  000C88  CFF3 F026          	movff	prodl,___flmul@temp
  2965  000C8C  CFF4 F027          	movff	prodh,___flmul@temp+1
  2966  000C90  5026               	movf	___flmul@temp,w,c
  2967  000C92  261C               	addwf	___flmul@grs,f,c
  2968  000C94  0E00               	movlw	0
  2969  000C96  221D               	addwfc	___flmul@grs+1,f,c
  2970  000C98  221E               	addwfc	___flmul@grs+2,f,c
  2971  000C9A  221F               	addwfc	___flmul@grs+3,f,c
  2972  000C9C  5027               	movf	___flmul@temp+1,w,c
  2973  000C9E  2622               	addwf	___flmul@prod,f,c
  2974  000CA0  0E00               	movlw	0
  2975  000CA2  2223               	addwfc	___flmul@prod+1,f,c
  2976  000CA4  2224               	addwfc	___flmul@prod+2,f,c
  2977  000CA6  2225               	addwfc	___flmul@prod+3,f,c
  2978  000CA8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2979  000CAC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2980  000CB0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2981  000CB4  6A1C               	clrf	___flmul@grs,c
  2982  000CB6  5013               	movf	___flmul@a,w,c
  2983  000CB8  0210               	mulwf	___flmul@b+1,c
  2984  000CBA  CFF3 F026          	movff	prodl,___flmul@temp
  2985  000CBE  CFF4 F027          	movff	prodh,___flmul@temp+1
  2986  000CC2  5026               	movf	___flmul@temp,w,c
  2987  000CC4  261C               	addwf	___flmul@grs,f,c
  2988  000CC6  5027               	movf	___flmul@temp+1,w,c
  2989  000CC8  221D               	addwfc	___flmul@grs+1,f,c
  2990  000CCA  0E00               	movlw	0
  2991  000CCC  221E               	addwfc	___flmul@grs+2,f,c
  2992  000CCE  0E00               	movlw	0
  2993  000CD0  221F               	addwfc	___flmul@grs+3,f,c
  2994  000CD2  5014               	movf	___flmul@a+1,w,c
  2995  000CD4  020F               	mulwf	___flmul@b,c
  2996  000CD6  CFF3 F026          	movff	prodl,___flmul@temp
  2997  000CDA  CFF4 F027          	movff	prodh,___flmul@temp+1
  2998  000CDE  5026               	movf	___flmul@temp,w,c
  2999  000CE0  261C               	addwf	___flmul@grs,f,c
  3000  000CE2  5027               	movf	___flmul@temp+1,w,c
  3001  000CE4  221D               	addwfc	___flmul@grs+1,f,c
  3002  000CE6  0E00               	movlw	0
  3003  000CE8  221E               	addwfc	___flmul@grs+2,f,c
  3004  000CEA  0E00               	movlw	0
  3005  000CEC  221F               	addwfc	___flmul@grs+3,f,c
  3006  000CEE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3007  000CF2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3008  000CF6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3009  000CFA  6A1C               	clrf	___flmul@grs,c
  3010  000CFC  5013               	movf	___flmul@a,w,c
  3011  000CFE  020F               	mulwf	___flmul@b,c
  3012  000D00  CFF3 F026          	movff	prodl,___flmul@temp
  3013  000D04  CFF4 F027          	movff	prodh,___flmul@temp+1
  3014  000D08  5026               	movf	___flmul@temp,w,c
  3015  000D0A  261C               	addwf	___flmul@grs,f,c
  3016  000D0C  5027               	movf	___flmul@temp+1,w,c
  3017  000D0E  221D               	addwfc	___flmul@grs+1,f,c
  3018  000D10  0E00               	movlw	0
  3019  000D12  221E               	addwfc	___flmul@grs+2,f,c
  3020  000D14  0E00               	movlw	0
  3021  000D16  221F               	addwfc	___flmul@grs+3,f,c
  3022  000D18  5015               	movf	___flmul@a+2,w,c
  3023  000D1A  0210               	mulwf	___flmul@b+1,c
  3024  000D1C  CFF3 F026          	movff	prodl,___flmul@temp
  3025  000D20  CFF4 F027          	movff	prodh,___flmul@temp+1
  3026  000D24  5026               	movf	___flmul@temp,w,c
  3027  000D26  2622               	addwf	___flmul@prod,f,c
  3028  000D28  5027               	movf	___flmul@temp+1,w,c
  3029  000D2A  2223               	addwfc	___flmul@prod+1,f,c
  3030  000D2C  0E00               	movlw	0
  3031  000D2E  2224               	addwfc	___flmul@prod+2,f,c
  3032  000D30  0E00               	movlw	0
  3033  000D32  2225               	addwfc	___flmul@prod+3,f,c
  3034  000D34  5014               	movf	___flmul@a+1,w,c
  3035  000D36  0211               	mulwf	___flmul@b+2,c
  3036  000D38  CFF3 F026          	movff	prodl,___flmul@temp
  3037  000D3C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3038  000D40  5026               	movf	___flmul@temp,w,c
  3039  000D42  2622               	addwf	___flmul@prod,f,c
  3040  000D44  5027               	movf	___flmul@temp+1,w,c
  3041  000D46  2223               	addwfc	___flmul@prod+1,f,c
  3042  000D48  0E00               	movlw	0
  3043  000D4A  2224               	addwfc	___flmul@prod+2,f,c
  3044  000D4C  0E00               	movlw	0
  3045  000D4E  2225               	addwfc	___flmul@prod+3,f,c
  3046  000D50  5015               	movf	___flmul@a+2,w,c
  3047  000D52  0211               	mulwf	___flmul@b+2,c
  3048  000D54  CFF3 F026          	movff	prodl,___flmul@temp
  3049  000D58  CFF4 F027          	movff	prodh,___flmul@temp+1
  3050  000D5C  5026               	movf	___flmul@temp,w,c
  3051  000D5E  6E17               	movwf	??___flmul& (0+255),c
  3052  000D60  5027               	movf	___flmul@temp+1,w,c
  3053  000D62  6E18               	movwf	(??___flmul+1)& (0+255),c
  3054  000D64  6A19               	clrf	(??___flmul+2)& (0+255),c
  3055  000D66  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3056  000D68  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3057  000D6C  C018  F019         	movff	??___flmul+1,??___flmul+2
  3058  000D70  C017  F018         	movff	??___flmul,??___flmul+1
  3059  000D74  6A17               	clrf	??___flmul,c
  3060  000D76  5017               	movf	??___flmul,w,c
  3061  000D78  2622               	addwf	___flmul@prod,f,c
  3062  000D7A  5018               	movf	??___flmul+1,w,c
  3063  000D7C  2223               	addwfc	___flmul@prod+1,f,c
  3064  000D7E  5019               	movf	??___flmul+2,w,c
  3065  000D80  2224               	addwfc	___flmul@prod+2,f,c
  3066  000D82  501A               	movf	??___flmul+3,w,c
  3067  000D84  2225               	addwfc	___flmul@prod+3,f,c
  3068  000D86  C01C  F017         	movff	___flmul@grs,??___flmul
  3069  000D8A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3070  000D8E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3071  000D92  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3072  000D96  0E19               	movlw	25
  3073  000D98  D005               	goto	u1930
  3074  000D9A                     u1935:
  3075  000D9A  90D8               	bcf	status,0,c
  3076  000D9C  321A               	rrcf	??___flmul+3,f,c
  3077  000D9E  3219               	rrcf	??___flmul+2,f,c
  3078  000DA0  3218               	rrcf	??___flmul+1,f,c
  3079  000DA2  3217               	rrcf	??___flmul,f,c
  3080  000DA4                     u1930:
  3081  000DA4  2EE8               	decfsz	wreg,f,c
  3082  000DA6  D7F9               	goto	u1935
  3083  000DA8  5017               	movf	??___flmul,w,c
  3084  000DAA  2622               	addwf	___flmul@prod,f,c
  3085  000DAC  5018               	movf	??___flmul+1,w,c
  3086  000DAE  2223               	addwfc	___flmul@prod+1,f,c
  3087  000DB0  5019               	movf	??___flmul+2,w,c
  3088  000DB2  2224               	addwfc	___flmul@prod+2,f,c
  3089  000DB4  501A               	movf	??___flmul+3,w,c
  3090  000DB6  2225               	addwfc	___flmul@prod+3,f,c
  3091  000DB8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3092  000DBC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3093  000DC0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3094  000DC4  6A1C               	clrf	___flmul@grs,c
  3095  000DC6  5020               	movf	___flmul@aexp,w,c
  3096  000DC8  C021  F017         	movff	___flmul@bexp,??___flmul
  3097  000DCC  6A18               	clrf	(??___flmul+1)& (0+255),c
  3098  000DCE  2617               	addwf	??___flmul,f,c
  3099  000DD0  0E00               	movlw	0
  3100  000DD2  2218               	addwfc	??___flmul+1,f,c
  3101  000DD4  0E82               	movlw	130
  3102  000DD6  2417               	addwf	??___flmul,w,c
  3103  000DD8  6E26               	movwf	___flmul@temp,c
  3104  000DDA  0EFF               	movlw	255
  3105  000DDC  2018               	addwfc	??___flmul+1,w,c
  3106  000DDE  6E27               	movwf	___flmul@temp+1,c
  3107  000DE0  D00F               	goto	l779
  3108  000DE2  90D8               	bcf	status,0,c
  3109  000DE4  3622               	rlcf	___flmul@prod,f,c
  3110  000DE6  3623               	rlcf	___flmul@prod+1,f,c
  3111  000DE8  3624               	rlcf	___flmul@prod+2,f,c
  3112  000DEA  3625               	rlcf	___flmul@prod+3,f,c
  3113  000DEC  BE1F               	btfsc	___flmul@grs+3,7,c
  3114  000DEE  8022               	bsf	___flmul@prod,0,c
  3115  000DF0  90D8               	bcf	status,0,c
  3116  000DF2  361C               	rlcf	___flmul@grs,f,c
  3117  000DF4  361D               	rlcf	___flmul@grs+1,f,c
  3118  000DF6  361E               	rlcf	___flmul@grs+2,f,c
  3119  000DF8  361F               	rlcf	___flmul@grs+3,f,c
  3120  000DFA  0626               	decf	___flmul@temp,f,c
  3121  000DFC  A0D8               	btfss	status,0,c
  3122  000DFE  0627               	decf	___flmul@temp+1,f,c
  3123  000E00                     l779:
  3124  000E00  AE24               	btfss	___flmul@prod+2,7,c
  3125  000E02  D7EF               	goto	l780
  3126  000E04  0E00               	movlw	0
  3127  000E06  6E20               	movwf	___flmul@aexp,c
  3128  000E08  AE1F               	btfss	___flmul@grs+3,7,c
  3129  000E0A  D016               	goto	l786
  3130  000E0C  0EFF               	movlw	255
  3131  000E0E  141C               	andwf	___flmul@grs,w,c
  3132  000E10  6E17               	movwf	??___flmul& (0+255),c
  3133  000E12  0EFF               	movlw	255
  3134  000E14  141D               	andwf	___flmul@grs+1,w,c
  3135  000E16  6E18               	movwf	(??___flmul+1)& (0+255),c
  3136  000E18  0EFF               	movlw	255
  3137  000E1A  141E               	andwf	___flmul@grs+2,w,c
  3138  000E1C  6E19               	movwf	(??___flmul+2)& (0+255),c
  3139  000E1E  0E7F               	movlw	127
  3140  000E20  141F               	andwf	___flmul@grs+3,w,c
  3141  000E22  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3142  000E24  5017               	movf	??___flmul,w,c
  3143  000E26  1018               	iorwf	??___flmul+1,w,c
  3144  000E28  1019               	iorwf	??___flmul+2,w,c
  3145  000E2A  101A               	iorwf	??___flmul+3,w,c
  3146  000E2C  A4D8               	btfss	status,2,c
  3147  000E2E  D002               	goto	u1980
  3148  000E30  A022               	btfss	___flmul@prod,0,c
  3149  000E32  D002               	goto	l786
  3150  000E34                     u1980:
  3151  000E34  0E01               	movlw	1
  3152  000E36  6E20               	movwf	___flmul@aexp,c
  3153  000E38                     l786:
  3154  000E38  5020               	movf	___flmul@aexp,w,c
  3155  000E3A  B4D8               	btfsc	status,2,c
  3156  000E3C  D01F               	goto	l788
  3157  000E3E  0E01               	movlw	1
  3158  000E40  2622               	addwf	___flmul@prod,f,c
  3159  000E42  0E00               	movlw	0
  3160  000E44  2223               	addwfc	___flmul@prod+1,f,c
  3161  000E46  2224               	addwfc	___flmul@prod+2,f,c
  3162  000E48  2225               	addwfc	___flmul@prod+3,f,c
  3163  000E4A  A025               	btfss	___flmul@prod+3,0,c
  3164  000E4C  D017               	goto	l788
  3165  000E4E  C022  F017         	movff	___flmul@prod,??___flmul
  3166  000E52  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3167  000E56  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3168  000E5A  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3169  000E5E  341A               	rlcf	??___flmul+3,w,c
  3170  000E60  321A               	rrcf	??___flmul+3,f,c
  3171  000E62  3219               	rrcf	??___flmul+2,f,c
  3172  000E64  3218               	rrcf	??___flmul+1,f,c
  3173  000E66  3217               	rrcf	??___flmul,f,c
  3174  000E68  C017  F022         	movff	??___flmul,___flmul@prod
  3175  000E6C  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3176  000E70  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3177  000E74  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3178  000E78  4A26               	infsnz	___flmul@temp,f,c
  3179  000E7A  2A27               	incf	___flmul@temp+1,f,c
  3180  000E7C                     l788:
  3181  000E7C  BE27               	btfsc	___flmul@temp+1,7,c
  3182  000E7E  D00D               	goto	l789
  3183  000E80  5027               	movf	___flmul@temp+1,w,c
  3184  000E82  E103               	bnz	u2010
  3185  000E84  2826               	incf	___flmul@temp,w,c
  3186  000E86  A0D8               	btfss	status,0,c
  3187  000E88  D008               	goto	l789
  3188  000E8A                     u2010:
  3189  000E8A  0E00               	movlw	0
  3190  000E8C  6E22               	movwf	___flmul@prod,c
  3191  000E8E  0E00               	movlw	0
  3192  000E90  6E23               	movwf	___flmul@prod+1,c
  3193  000E92  0E80               	movlw	128
  3194  000E94  6E24               	movwf	___flmul@prod+2,c
  3195  000E96  0E7F               	movlw	127
  3196  000E98  D020               	goto	L11
  3197  000E9A                     l789:
  3198  000E9A  BE27               	btfsc	___flmul@temp+1,7,c
  3199  000E9C  D005               	goto	u2020
  3200  000E9E  5027               	movf	___flmul@temp+1,w,c
  3201  000EA0  E10E               	bnz	l791
  3202  000EA2  0426               	decf	___flmul@temp,w,c
  3203  000EA4  B0D8               	btfsc	status,0,c
  3204  000EA6  D00B               	goto	l791
  3205  000EA8                     u2020:
  3206  000EA8  0E00               	movlw	0
  3207  000EAA  6E22               	movwf	___flmul@prod,c
  3208  000EAC  0E00               	movlw	0
  3209  000EAE  6E23               	movwf	___flmul@prod+1,c
  3210  000EB0  0E00               	movlw	0
  3211  000EB2  6E24               	movwf	___flmul@prod+2,c
  3212  000EB4  0E00               	movlw	0
  3213  000EB6  6E25               	movwf	___flmul@prod+3,c
  3214  000EB8  0E00               	movlw	0
  3215  000EBA  6E1B               	movwf	___flmul@sign,c
  3216  000EBC  D00F               	goto	l792
  3217  000EBE                     l791:
  3218  000EBE  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3219  000EC2  0EFF               	movlw	255
  3220  000EC4  1622               	andwf	___flmul@prod,f,c
  3221  000EC6  0EFF               	movlw	255
  3222  000EC8  1623               	andwf	___flmul@prod+1,f,c
  3223  000ECA  0E7F               	movlw	127
  3224  000ECC  1624               	andwf	___flmul@prod+2,f,c
  3225  000ECE  0E00               	movlw	0
  3226  000ED0  1625               	andwf	___flmul@prod+3,f,c
  3227  000ED2  B021               	btfsc	___flmul@bexp,0,c
  3228  000ED4  8E24               	bsf	___flmul@prod+2,7,c
  3229  000ED6  90D8               	bcf	status,0,c
  3230  000ED8  3021               	rrcf	___flmul@bexp,w,c
  3231  000EDA                     L11:
  3232  000EDA  6E25               	movwf	___flmul@prod+3,c
  3233  000EDC                     l792:
  3234  000EDC  501B               	movf	___flmul@sign,w,c
  3235  000EDE  1225               	iorwf	___flmul@prod+3,f,c
  3236  000EE0  C022  F00F         	movff	___flmul@prod,?___flmul
  3237  000EE4  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3238  000EE8  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3239  000EEC  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3240  000EF0  0012               	return	
  3241  000EF2                     __end_of___flmul:
  3242                           	opt stack 0
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           prodh	equ	0xFF4
  3248                           prodl	equ	0xFF3
  3249                           wreg	equ	0xFE8
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function ___fldiv *****************
  3253 ;; Defined at:
  3254 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  b               4   39[COMRAM] unsigned char 
  3257 ;;  a               4   43[COMRAM] unsigned char 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  grs             4   58[COMRAM] unsigned long 
  3260 ;;  rem             4   51[COMRAM] unsigned long 
  3261 ;;  new_exp         2   56[COMRAM] short 
  3262 ;;  aexp            1   63[COMRAM] unsigned char 
  3263 ;;  bexp            1   62[COMRAM] unsigned char 
  3264 ;;  sign            1   55[COMRAM] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  4   39[COMRAM] unsigned char 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3274 ;;      Params:         8       0       0       0       0       0       0       0       0
  3275 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3276 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3277 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3278 ;;Total ram usage:       25 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_setPeriodTo
  3284 ;;		_SetDutyCycleTo
  3285 ;;		_USART_Init
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text13
  3290  001544                     __ptext13:
  3291                           	opt stack 0
  3292  001544                     ___fldiv:
  3293                           	opt stack 29
  3294                           
  3295                           ;incstack = 0
  3296  001544  502B               	movf	___fldiv@b+3,w,c
  3297  001546  0B80               	andlw	128
  3298  001548  6E38               	movwf	___fldiv@sign,c
  3299  00154A  502B               	movf	___fldiv@b+3,w,c
  3300  00154C  242B               	addwf	___fldiv@b+3,w,c
  3301  00154E  6E3F               	movwf	___fldiv@bexp,c
  3302  001550  BE2A               	btfsc	___fldiv@b+2,7,c
  3303  001552  803F               	bsf	___fldiv@bexp,0,c
  3304  001554  503F               	movf	___fldiv@bexp,w,c
  3305  001556  B4D8               	btfsc	status,2,c
  3306  001558  D00D               	goto	l734
  3307  00155A  283F               	incf	___fldiv@bexp,w,c
  3308  00155C  A4D8               	btfss	status,2,c
  3309  00155E  D008               	goto	l735
  3310  001560  0E00               	movlw	0
  3311  001562  6E28               	movwf	___fldiv@b,c
  3312  001564  0E00               	movlw	0
  3313  001566  6E29               	movwf	___fldiv@b+1,c
  3314  001568  0E00               	movlw	0
  3315  00156A  6E2A               	movwf	___fldiv@b+2,c
  3316  00156C  0E00               	movlw	0
  3317  00156E  6E2B               	movwf	___fldiv@b+3,c
  3318  001570                     l735:
  3319  001570  8E2A               	bsf	___fldiv@b+2,7,c
  3320  001572  D006               	goto	L12
  3321  001574                     l734:
  3322  001574  0E00               	movlw	0
  3323  001576  6E28               	movwf	___fldiv@b,c
  3324  001578  0E00               	movlw	0
  3325  00157A  6E29               	movwf	___fldiv@b+1,c
  3326  00157C  0E00               	movlw	0
  3327  00157E  6E2A               	movwf	___fldiv@b+2,c
  3328  001580                     L12:
  3329  001580  0E00               	movlw	0
  3330  001582  6E2B               	movwf	___fldiv@b+3,c
  3331  001584  502F               	movf	___fldiv@a+3,w,c
  3332  001586  0B80               	andlw	128
  3333  001588  1A38               	xorwf	___fldiv@sign,f,c
  3334  00158A  502F               	movf	___fldiv@a+3,w,c
  3335  00158C  242F               	addwf	___fldiv@a+3,w,c
  3336  00158E  6E40               	movwf	___fldiv@aexp,c
  3337  001590  BE2E               	btfsc	___fldiv@a+2,7,c
  3338  001592  8040               	bsf	___fldiv@aexp,0,c
  3339  001594  5040               	movf	___fldiv@aexp,w,c
  3340  001596  B4D8               	btfsc	status,2,c
  3341  001598  D00D               	goto	l738
  3342  00159A  2840               	incf	___fldiv@aexp,w,c
  3343  00159C  A4D8               	btfss	status,2,c
  3344  00159E  D008               	goto	l739
  3345  0015A0  0E00               	movlw	0
  3346  0015A2  6E2C               	movwf	___fldiv@a,c
  3347  0015A4  0E00               	movlw	0
  3348  0015A6  6E2D               	movwf	___fldiv@a+1,c
  3349  0015A8  0E00               	movlw	0
  3350  0015AA  6E2E               	movwf	___fldiv@a+2,c
  3351  0015AC  0E00               	movlw	0
  3352  0015AE  6E2F               	movwf	___fldiv@a+3,c
  3353  0015B0                     l739:
  3354  0015B0  8E2E               	bsf	___fldiv@a+2,7,c
  3355  0015B2  D006               	goto	L13
  3356  0015B4                     l738:
  3357  0015B4  0E00               	movlw	0
  3358  0015B6  6E2C               	movwf	___fldiv@a,c
  3359  0015B8  0E00               	movlw	0
  3360  0015BA  6E2D               	movwf	___fldiv@a+1,c
  3361  0015BC  0E00               	movlw	0
  3362  0015BE  6E2E               	movwf	___fldiv@a+2,c
  3363  0015C0                     L13:
  3364  0015C0  0E00               	movlw	0
  3365  0015C2  6E2F               	movwf	___fldiv@a+3,c
  3366  0015C4  502C               	movf	___fldiv@a,w,c
  3367  0015C6  102D               	iorwf	___fldiv@a+1,w,c
  3368  0015C8  102E               	iorwf	___fldiv@a+2,w,c
  3369  0015CA  102F               	iorwf	___fldiv@a+3,w,c
  3370  0015CC  A4D8               	btfss	status,2,c
  3371  0015CE  D017               	goto	l741
  3372  0015D0  0E00               	movlw	0
  3373  0015D2  6E28               	movwf	___fldiv@b,c
  3374  0015D4  0E00               	movlw	0
  3375  0015D6  6E29               	movwf	___fldiv@b+1,c
  3376  0015D8  0E00               	movlw	0
  3377  0015DA  6E2A               	movwf	___fldiv@b+2,c
  3378  0015DC  0E00               	movlw	0
  3379  0015DE  6E2B               	movwf	___fldiv@b+3,c
  3380  0015E0  0E80               	movlw	128
  3381  0015E2  122A               	iorwf	___fldiv@b+2,f,c
  3382  0015E4  0E7F               	movlw	127
  3383  0015E6  122B               	iorwf	___fldiv@b+3,f,c
  3384  0015E8  5038               	movf	___fldiv@sign,w,c
  3385  0015EA  122B               	iorwf	___fldiv@b+3,f,c
  3386  0015EC  C028  F028         	movff	___fldiv@b,?___fldiv
  3387  0015F0  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  3388  0015F4  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  3389  0015F8  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  3390  0015FC  0012               	return	
  3391  0015FE                     l741:
  3392  0015FE  503F               	movf	___fldiv@bexp,w,c
  3393  001600  A4D8               	btfss	status,2,c
  3394  001602  D011               	goto	l743
  3395  001604  0E00               	movlw	0
  3396  001606  6E28               	movwf	___fldiv@b,c
  3397  001608  0E00               	movlw	0
  3398  00160A  6E29               	movwf	___fldiv@b+1,c
  3399  00160C  0E00               	movlw	0
  3400  00160E  6E2A               	movwf	___fldiv@b+2,c
  3401  001610  0E00               	movlw	0
  3402  001612  6E2B               	movwf	___fldiv@b+3,c
  3403  001614  C028  F028         	movff	___fldiv@b,?___fldiv
  3404  001618  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  3405  00161C  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  3406  001620  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  3407  001624  0012               	return	
  3408  001626                     l743:
  3409  001626  5040               	movf	___fldiv@aexp,w,c
  3410  001628  6E30               	movwf	??___fldiv& (0+255),c
  3411  00162A  6A31               	clrf	(??___fldiv+1)& (0+255),c
  3412  00162C  1E30               	comf	??___fldiv,f,c
  3413  00162E  1E31               	comf	??___fldiv+1,f,c
  3414  001630  4A30               	infsnz	??___fldiv,f,c
  3415  001632  2A31               	incf	??___fldiv+1,f,c
  3416  001634  503F               	movf	___fldiv@bexp,w,c
  3417  001636  6E32               	movwf	(??___fldiv+2)& (0+255),c
  3418  001638  6A33               	clrf	(??___fldiv+3)& (0+255),c
  3419  00163A  5030               	movf	??___fldiv,w,c
  3420  00163C  2632               	addwf	??___fldiv+2,f,c
  3421  00163E  5031               	movf	??___fldiv+1,w,c
  3422  001640  2233               	addwfc	??___fldiv+3,f,c
  3423  001642  0E7F               	movlw	127
  3424  001644  2432               	addwf	??___fldiv+2,w,c
  3425  001646  6E39               	movwf	___fldiv@new_exp,c
  3426  001648  0E00               	movlw	0
  3427  00164A  2033               	addwfc	??___fldiv+3,w,c
  3428  00164C  6E3A               	movwf	___fldiv@new_exp+1,c
  3429  00164E  C028  F034         	movff	___fldiv@b,___fldiv@rem
  3430  001652  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  3431  001656  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  3432  00165A  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  3433  00165E  0E00               	movlw	0
  3434  001660  6E28               	movwf	___fldiv@b,c
  3435  001662  0E00               	movlw	0
  3436  001664  6E29               	movwf	___fldiv@b+1,c
  3437  001666  0E00               	movlw	0
  3438  001668  6E2A               	movwf	___fldiv@b+2,c
  3439  00166A  0E00               	movlw	0
  3440  00166C  6E2B               	movwf	___fldiv@b+3,c
  3441  00166E  0E00               	movlw	0
  3442  001670  6E3B               	movwf	___fldiv@grs,c
  3443  001672  0E00               	movlw	0
  3444  001674  6E3C               	movwf	___fldiv@grs+1,c
  3445  001676  0E00               	movlw	0
  3446  001678  6E3D               	movwf	___fldiv@grs+2,c
  3447  00167A  0E00               	movlw	0
  3448  00167C  6E3E               	movwf	___fldiv@grs+3,c
  3449  00167E  0E00               	movlw	0
  3450  001680  6E40               	movwf	___fldiv@aexp,c
  3451  001682  D028               	goto	l744
  3452  001684  5040               	movf	___fldiv@aexp,w,c
  3453  001686  B4D8               	btfsc	status,2,c
  3454  001688  D011               	goto	l746
  3455  00168A  90D8               	bcf	status,0,c
  3456  00168C  3634               	rlcf	___fldiv@rem,f,c
  3457  00168E  3635               	rlcf	___fldiv@rem+1,f,c
  3458  001690  3636               	rlcf	___fldiv@rem+2,f,c
  3459  001692  3637               	rlcf	___fldiv@rem+3,f,c
  3460  001694  90D8               	bcf	status,0,c
  3461  001696  3628               	rlcf	___fldiv@b,f,c
  3462  001698  3629               	rlcf	___fldiv@b+1,f,c
  3463  00169A  362A               	rlcf	___fldiv@b+2,f,c
  3464  00169C  362B               	rlcf	___fldiv@b+3,f,c
  3465  00169E  BE3E               	btfsc	___fldiv@grs+3,7,c
  3466  0016A0  8028               	bsf	___fldiv@b,0,c
  3467  0016A2  90D8               	bcf	status,0,c
  3468  0016A4  363B               	rlcf	___fldiv@grs,f,c
  3469  0016A6  363C               	rlcf	___fldiv@grs+1,f,c
  3470  0016A8  363D               	rlcf	___fldiv@grs+2,f,c
  3471  0016AA  363E               	rlcf	___fldiv@grs+3,f,c
  3472  0016AC                     l746:
  3473  0016AC  502C               	movf	___fldiv@a,w,c
  3474  0016AE  5C34               	subwf	___fldiv@rem,w,c
  3475  0016B0  502D               	movf	___fldiv@a+1,w,c
  3476  0016B2  5835               	subwfb	___fldiv@rem+1,w,c
  3477  0016B4  502E               	movf	___fldiv@a+2,w,c
  3478  0016B6  5836               	subwfb	___fldiv@rem+2,w,c
  3479  0016B8  502F               	movf	___fldiv@a+3,w,c
  3480  0016BA  5837               	subwfb	___fldiv@rem+3,w,c
  3481  0016BC  A0D8               	btfss	status,0,c
  3482  0016BE  D009               	goto	l748
  3483  0016C0  8C3E               	bsf	___fldiv@grs+3,6,c
  3484  0016C2  502C               	movf	___fldiv@a,w,c
  3485  0016C4  5E34               	subwf	___fldiv@rem,f,c
  3486  0016C6  502D               	movf	___fldiv@a+1,w,c
  3487  0016C8  5A35               	subwfb	___fldiv@rem+1,f,c
  3488  0016CA  502E               	movf	___fldiv@a+2,w,c
  3489  0016CC  5A36               	subwfb	___fldiv@rem+2,f,c
  3490  0016CE  502F               	movf	___fldiv@a+3,w,c
  3491  0016D0  5A37               	subwfb	___fldiv@rem+3,f,c
  3492  0016D2                     l748:
  3493  0016D2  2A40               	incf	___fldiv@aexp,f,c
  3494  0016D4                     l744:
  3495  0016D4  0E19               	movlw	25
  3496  0016D6  6440               	cpfsgt	___fldiv@aexp,c
  3497  0016D8  D7D5               	goto	l745
  3498  0016DA  5034               	movf	___fldiv@rem,w,c
  3499  0016DC  1035               	iorwf	___fldiv@rem+1,w,c
  3500  0016DE  1036               	iorwf	___fldiv@rem+2,w,c
  3501  0016E0  1037               	iorwf	___fldiv@rem+3,w,c
  3502  0016E2  B4D8               	btfsc	status,2,c
  3503  0016E4  D011               	goto	l751
  3504  0016E6  803B               	bsf	___fldiv@grs,0,c
  3505  0016E8  D00F               	goto	l751
  3506  0016EA  90D8               	bcf	status,0,c
  3507  0016EC  3628               	rlcf	___fldiv@b,f,c
  3508  0016EE  3629               	rlcf	___fldiv@b+1,f,c
  3509  0016F0  362A               	rlcf	___fldiv@b+2,f,c
  3510  0016F2  362B               	rlcf	___fldiv@b+3,f,c
  3511  0016F4  BE3E               	btfsc	___fldiv@grs+3,7,c
  3512  0016F6  8028               	bsf	___fldiv@b,0,c
  3513  0016F8  90D8               	bcf	status,0,c
  3514  0016FA  363B               	rlcf	___fldiv@grs,f,c
  3515  0016FC  363C               	rlcf	___fldiv@grs+1,f,c
  3516  0016FE  363D               	rlcf	___fldiv@grs+2,f,c
  3517  001700  363E               	rlcf	___fldiv@grs+3,f,c
  3518  001702  0639               	decf	___fldiv@new_exp,f,c
  3519  001704  A0D8               	btfss	status,0,c
  3520  001706  063A               	decf	___fldiv@new_exp+1,f,c
  3521  001708                     l751:
  3522  001708  AE2A               	btfss	___fldiv@b+2,7,c
  3523  00170A  D7EF               	goto	l752
  3524  00170C  0E00               	movlw	0
  3525  00170E  6E40               	movwf	___fldiv@aexp,c
  3526  001710  AE3E               	btfss	___fldiv@grs+3,7,c
  3527  001712  D016               	goto	l758
  3528  001714  0EFF               	movlw	255
  3529  001716  143B               	andwf	___fldiv@grs,w,c
  3530  001718  6E30               	movwf	??___fldiv& (0+255),c
  3531  00171A  0EFF               	movlw	255
  3532  00171C  143C               	andwf	___fldiv@grs+1,w,c
  3533  00171E  6E31               	movwf	(??___fldiv+1)& (0+255),c
  3534  001720  0EFF               	movlw	255
  3535  001722  143D               	andwf	___fldiv@grs+2,w,c
  3536  001724  6E32               	movwf	(??___fldiv+2)& (0+255),c
  3537  001726  0E7F               	movlw	127
  3538  001728  143E               	andwf	___fldiv@grs+3,w,c
  3539  00172A  6E33               	movwf	(??___fldiv+3)& (0+255),c
  3540  00172C  5030               	movf	??___fldiv,w,c
  3541  00172E  1031               	iorwf	??___fldiv+1,w,c
  3542  001730  1032               	iorwf	??___fldiv+2,w,c
  3543  001732  1033               	iorwf	??___fldiv+3,w,c
  3544  001734  A4D8               	btfss	status,2,c
  3545  001736  D002               	goto	u2370
  3546  001738  A028               	btfss	___fldiv@b,0,c
  3547  00173A  D002               	goto	l758
  3548  00173C                     u2370:
  3549  00173C  0E01               	movlw	1
  3550  00173E  6E40               	movwf	___fldiv@aexp,c
  3551  001740                     l758:
  3552  001740  5040               	movf	___fldiv@aexp,w,c
  3553  001742  B4D8               	btfsc	status,2,c
  3554  001744  D01F               	goto	l760
  3555  001746  0E01               	movlw	1
  3556  001748  2628               	addwf	___fldiv@b,f,c
  3557  00174A  0E00               	movlw	0
  3558  00174C  2229               	addwfc	___fldiv@b+1,f,c
  3559  00174E  222A               	addwfc	___fldiv@b+2,f,c
  3560  001750  222B               	addwfc	___fldiv@b+3,f,c
  3561  001752  A02B               	btfss	___fldiv@b+3,0,c
  3562  001754  D017               	goto	l760
  3563  001756  C028  F030         	movff	___fldiv@b,??___fldiv
  3564  00175A  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  3565  00175E  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  3566  001762  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  3567  001766  3433               	rlcf	??___fldiv+3,w,c
  3568  001768  3233               	rrcf	??___fldiv+3,f,c
  3569  00176A  3232               	rrcf	??___fldiv+2,f,c
  3570  00176C  3231               	rrcf	??___fldiv+1,f,c
  3571  00176E  3230               	rrcf	??___fldiv,f,c
  3572  001770  C030  F028         	movff	??___fldiv,___fldiv@b
  3573  001774  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  3574  001778  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  3575  00177C  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  3576  001780  4A39               	infsnz	___fldiv@new_exp,f,c
  3577  001782  2A3A               	incf	___fldiv@new_exp+1,f,c
  3578  001784                     l760:
  3579  001784  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  3580  001786  D010               	goto	l761
  3581  001788  503A               	movf	___fldiv@new_exp+1,w,c
  3582  00178A  E103               	bnz	u2400
  3583  00178C  2839               	incf	___fldiv@new_exp,w,c
  3584  00178E  A0D8               	btfss	status,0,c
  3585  001790  D00B               	goto	l761
  3586  001792                     u2400:
  3587  001792  0E00               	movlw	0
  3588  001794  6E3A               	movwf	___fldiv@new_exp+1,c
  3589  001796  6839               	setf	___fldiv@new_exp,c
  3590  001798  0E00               	movlw	0
  3591  00179A  6E28               	movwf	___fldiv@b,c
  3592  00179C  0E00               	movlw	0
  3593  00179E  6E29               	movwf	___fldiv@b+1,c
  3594  0017A0  0E00               	movlw	0
  3595  0017A2  6E2A               	movwf	___fldiv@b+2,c
  3596  0017A4  0E00               	movlw	0
  3597  0017A6  6E2B               	movwf	___fldiv@b+3,c
  3598  0017A8                     l761:
  3599  0017A8  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  3600  0017AA  D005               	goto	u2410
  3601  0017AC  503A               	movf	___fldiv@new_exp+1,w,c
  3602  0017AE  E111               	bnz	l2192
  3603  0017B0  0439               	decf	___fldiv@new_exp,w,c
  3604  0017B2  B0D8               	btfsc	status,0,c
  3605  0017B4  D00E               	goto	l762
  3606  0017B6                     u2410:
  3607  0017B6  0E00               	movlw	0
  3608  0017B8  6E3A               	movwf	___fldiv@new_exp+1,c
  3609  0017BA  0E00               	movlw	0
  3610  0017BC  6E39               	movwf	___fldiv@new_exp,c
  3611  0017BE  0E00               	movlw	0
  3612  0017C0  6E28               	movwf	___fldiv@b,c
  3613  0017C2  0E00               	movlw	0
  3614  0017C4  6E29               	movwf	___fldiv@b+1,c
  3615  0017C6  0E00               	movlw	0
  3616  0017C8  6E2A               	movwf	___fldiv@b+2,c
  3617  0017CA  0E00               	movlw	0
  3618  0017CC  6E2B               	movwf	___fldiv@b+3,c
  3619  0017CE  0E00               	movlw	0
  3620  0017D0  6E38               	movwf	___fldiv@sign,c
  3621  0017D2                     l762:
  3622  0017D2                     l2192:
  3623  0017D2  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  3624  0017D6  A03F               	btfss	___fldiv@bexp,0,c
  3625  0017D8  D002               	goto	l763
  3626  0017DA  8E2A               	bsf	___fldiv@b+2,7,c
  3627  0017DC  D001               	goto	l764
  3628  0017DE                     l763:
  3629  0017DE  9E2A               	bcf	___fldiv@b+2,7,c
  3630  0017E0                     l764:
  3631  0017E0  90D8               	bcf	status,0,c
  3632  0017E2  303F               	rrcf	___fldiv@bexp,w,c
  3633  0017E4  6E2B               	movwf	___fldiv@b+3,c
  3634  0017E6  5038               	movf	___fldiv@sign,w,c
  3635  0017E8  122B               	iorwf	___fldiv@b+3,f,c
  3636  0017EA  C028  F028         	movff	___fldiv@b,?___fldiv
  3637  0017EE  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  3638  0017F2  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  3639  0017F6  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  3640  0017FA  0012               	return	
  3641  0017FC                     __end_of___fldiv:
  3642                           	opt stack 0
  3643                           tblptru	equ	0xFF8
  3644                           tblptrh	equ	0xFF7
  3645                           tblptrl	equ	0xFF6
  3646                           tablat	equ	0xFF5
  3647                           prodh	equ	0xFF4
  3648                           prodl	equ	0xFF3
  3649                           wreg	equ	0xFE8
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function ___fladd *****************
  3653 ;; Defined at:
  3654 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcadd.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  b               4   64[COMRAM] unsigned char 
  3657 ;;  a               4   68[COMRAM] unsigned char 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  grs             1   83[COMRAM] unsigned char 
  3660 ;;  bexp            1   82[COMRAM] unsigned char 
  3661 ;;  aexp            1   81[COMRAM] unsigned char 
  3662 ;;  signs           1   80[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  4   64[COMRAM] unsigned char 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3672 ;;      Params:         8       0       0       0       0       0       0       0       0
  3673 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3674 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3675 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3676 ;;Total ram usage:       20 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_setPeriodTo
  3682 ;;		_SetDutyCycleTo
  3683 ;;		_USART_Init
  3684 ;;		_roundf
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text14
  3689  000EF2                     __ptext14:
  3690                           	opt stack 0
  3691  000EF2                     ___fladd:
  3692                           	opt stack 28
  3693                           
  3694                           ;incstack = 0
  3695  000EF2  5044               	movf	___fladd@b+3,w,c
  3696  000EF4  0B80               	andlw	128
  3697  000EF6  6E51               	movwf	___fladd@signs,c
  3698  000EF8  5044               	movf	___fladd@b+3,w,c
  3699  000EFA  2444               	addwf	___fladd@b+3,w,c
  3700  000EFC  6E53               	movwf	___fladd@bexp,c
  3701  000EFE  BE43               	btfsc	___fladd@b+2,7,c
  3702  000F00  8053               	bsf	___fladd@bexp,0,c
  3703  000F02  5053               	movf	___fladd@bexp,w,c
  3704  000F04  B4D8               	btfsc	status,2,c
  3705  000F06  D00D               	goto	l677
  3706  000F08  2853               	incf	___fladd@bexp,w,c
  3707  000F0A  A4D8               	btfss	status,2,c
  3708  000F0C  D008               	goto	l678
  3709  000F0E  0E00               	movlw	0
  3710  000F10  6E41               	movwf	___fladd@b,c
  3711  000F12  0E00               	movlw	0
  3712  000F14  6E42               	movwf	___fladd@b+1,c
  3713  000F16  0E00               	movlw	0
  3714  000F18  6E43               	movwf	___fladd@b+2,c
  3715  000F1A  0E00               	movlw	0
  3716  000F1C  6E44               	movwf	___fladd@b+3,c
  3717  000F1E                     l678:
  3718  000F1E  8E43               	bsf	___fladd@b+2,7,c
  3719  000F20  D006               	goto	L14
  3720  000F22                     l677:
  3721  000F22  0E00               	movlw	0
  3722  000F24  6E41               	movwf	___fladd@b,c
  3723  000F26  0E00               	movlw	0
  3724  000F28  6E42               	movwf	___fladd@b+1,c
  3725  000F2A  0E00               	movlw	0
  3726  000F2C  6E43               	movwf	___fladd@b+2,c
  3727  000F2E                     L14:
  3728  000F2E  0E00               	movlw	0
  3729  000F30  6E44               	movwf	___fladd@b+3,c
  3730  000F32  5048               	movf	___fladd@a+3,w,c
  3731  000F34  0B80               	andlw	128
  3732  000F36  6E52               	movwf	___fladd@aexp,c
  3733  000F38  5051               	movf	___fladd@signs,w,c
  3734  000F3A  1852               	xorwf	___fladd@aexp,w,c
  3735  000F3C  A4D8               	btfss	status,2,c
  3736  000F3E  8C51               	bsf	___fladd@signs,6,c
  3737  000F40  5048               	movf	___fladd@a+3,w,c
  3738  000F42  2448               	addwf	___fladd@a+3,w,c
  3739  000F44  6E52               	movwf	___fladd@aexp,c
  3740  000F46  BE47               	btfsc	___fladd@a+2,7,c
  3741  000F48  8052               	bsf	___fladd@aexp,0,c
  3742  000F4A  5052               	movf	___fladd@aexp,w,c
  3743  000F4C  B4D8               	btfsc	status,2,c
  3744  000F4E  D00D               	goto	l682
  3745  000F50  2852               	incf	___fladd@aexp,w,c
  3746  000F52  A4D8               	btfss	status,2,c
  3747  000F54  D008               	goto	l683
  3748  000F56  0E00               	movlw	0
  3749  000F58  6E45               	movwf	___fladd@a,c
  3750  000F5A  0E00               	movlw	0
  3751  000F5C  6E46               	movwf	___fladd@a+1,c
  3752  000F5E  0E00               	movlw	0
  3753  000F60  6E47               	movwf	___fladd@a+2,c
  3754  000F62  0E00               	movlw	0
  3755  000F64  6E48               	movwf	___fladd@a+3,c
  3756  000F66                     l683:
  3757  000F66  8E47               	bsf	___fladd@a+2,7,c
  3758  000F68  D006               	goto	L15
  3759  000F6A                     l682:
  3760  000F6A  0E00               	movlw	0
  3761  000F6C  6E45               	movwf	___fladd@a,c
  3762  000F6E  0E00               	movlw	0
  3763  000F70  6E46               	movwf	___fladd@a+1,c
  3764  000F72  0E00               	movlw	0
  3765  000F74  6E47               	movwf	___fladd@a+2,c
  3766  000F76                     L15:
  3767  000F76  0E00               	movlw	0
  3768  000F78  6E48               	movwf	___fladd@a+3,c
  3769  000F7A  5053               	movf	___fladd@bexp,w,c
  3770  000F7C  5C52               	subwf	___fladd@aexp,w,c
  3771  000F7E  B0D8               	btfsc	status,0,c
  3772  000F80  D022               	goto	l685
  3773  000F82  AC51               	btfss	___fladd@signs,6,c
  3774  000F84  D002               	goto	l686
  3775  000F86  0E80               	movlw	128
  3776  000F88  1A51               	xorwf	___fladd@signs,f,c
  3777  000F8A                     l686:
  3778  000F8A  C053  F054         	movff	___fladd@bexp,___fladd@grs
  3779  000F8E  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  3780  000F92  C054  F052         	movff	___fladd@grs,___fladd@aexp
  3781  000F96  C041  F054         	movff	___fladd@b,___fladd@grs
  3782  000F9A  C045  F041         	movff	___fladd@a,___fladd@b
  3783  000F9E  C054  F045         	movff	___fladd@grs,___fladd@a
  3784  000FA2  C042  F054         	movff	___fladd@b+1,___fladd@grs
  3785  000FA6  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  3786  000FAA  C054  F046         	movff	___fladd@grs,___fladd@a+1
  3787  000FAE  C043  F054         	movff	___fladd@b+2,___fladd@grs
  3788  000FB2  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  3789  000FB6  C054  F047         	movff	___fladd@grs,___fladd@a+2
  3790  000FBA  C044  F054         	movff	___fladd@b+3,___fladd@grs
  3791  000FBE  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  3792  000FC2  C054  F048         	movff	___fladd@grs,___fladd@a+3
  3793  000FC6                     l685:
  3794  000FC6  0E00               	movlw	0
  3795  000FC8  6E54               	movwf	___fladd@grs,c
  3796  000FCA  5053               	movf	___fladd@bexp,w,c
  3797  000FCC  6E49               	movwf	??___fladd& (0+255),c
  3798  000FCE  6A4A               	clrf	(??___fladd+1)& (0+255),c
  3799  000FD0  1E49               	comf	??___fladd,f,c
  3800  000FD2  1E4A               	comf	??___fladd+1,f,c
  3801  000FD4  4A49               	infsnz	??___fladd,f,c
  3802  000FD6  2A4A               	incf	??___fladd+1,f,c
  3803  000FD8  5052               	movf	___fladd@aexp,w,c
  3804  000FDA  6E4B               	movwf	(??___fladd+2)& (0+255),c
  3805  000FDC  6A4C               	clrf	(??___fladd+3)& (0+255),c
  3806  000FDE  5049               	movf	??___fladd,w,c
  3807  000FE0  264B               	addwf	??___fladd+2,f,c
  3808  000FE2  504A               	movf	??___fladd+1,w,c
  3809  000FE4  224C               	addwfc	??___fladd+3,f,c
  3810  000FE6  BE4C               	btfsc	??___fladd+3,7,c
  3811  000FE8  D02C               	goto	l689
  3812  000FEA  504C               	movf	??___fladd+3,w,c
  3813  000FEC  E104               	bnz	u1550
  3814  000FEE  0E1A               	movlw	26
  3815  000FF0  5C4B               	subwf	??___fladd+2,w,c
  3816  000FF2  A0D8               	btfss	status,0,c
  3817  000FF4  D026               	goto	l689
  3818  000FF6                     u1550:
  3819  000FF6  5041               	movf	___fladd@b,w,c
  3820  000FF8  1042               	iorwf	___fladd@b+1,w,c
  3821  000FFA  1043               	iorwf	___fladd@b+2,w,c
  3822  000FFC  1044               	iorwf	___fladd@b+3,w,c
  3823  000FFE  B4D8               	btfsc	status,2,c
  3824  001000  D002               	goto	u1560
  3825  001002  0E01               	movlw	1
  3826  001004  D001               	goto	u1570
  3827  001006                     u1560:
  3828  001006  0E00               	movlw	0
  3829  001008                     u1570:
  3830  001008  6E54               	movwf	___fladd@grs,c
  3831  00100A  0E00               	movlw	0
  3832  00100C  6E41               	movwf	___fladd@b,c
  3833  00100E  0E00               	movlw	0
  3834  001010  6E42               	movwf	___fladd@b+1,c
  3835  001012  0E00               	movlw	0
  3836  001014  6E43               	movwf	___fladd@b+2,c
  3837  001016  0E00               	movlw	0
  3838  001018  6E44               	movwf	___fladd@b+3,c
  3839  00101A  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  3840  00101E  D015               	goto	u1600
  3841  001020                     l690:
  3842  001020  A054               	btfss	___fladd@grs,0,c
  3843  001022  D005               	goto	l691
  3844  001024  90D8               	bcf	status,0,c
  3845  001026  3054               	rrcf	___fladd@grs,w,c
  3846  001028  0901               	iorlw	1
  3847  00102A  6E54               	movwf	___fladd@grs,c
  3848  00102C  D002               	goto	l692
  3849  00102E                     l691:
  3850  00102E  90D8               	bcf	status,0,c
  3851  001030  3254               	rrcf	___fladd@grs,f,c
  3852  001032                     l692:
  3853  001032  B041               	btfsc	___fladd@b,0,c
  3854  001034  8E54               	bsf	___fladd@grs,7,c
  3855  001036  3444               	rlcf	___fladd@b+3,w,c
  3856  001038  3244               	rrcf	___fladd@b+3,f,c
  3857  00103A  3243               	rrcf	___fladd@b+2,f,c
  3858  00103C  3242               	rrcf	___fladd@b+1,f,c
  3859  00103E  3241               	rrcf	___fladd@b,f,c
  3860  001040  2A53               	incf	___fladd@bexp,f,c
  3861  001042                     l689:
  3862  001042  5052               	movf	___fladd@aexp,w,c
  3863  001044  5C53               	subwf	___fladd@bexp,w,c
  3864  001046  A0D8               	btfss	status,0,c
  3865  001048  D7EB               	goto	l690
  3866  00104A                     u1600:
  3867  00104A  BC51               	btfsc	___fladd@signs,6,c
  3868  00104C  D028               	goto	l695
  3869  00104E  5053               	movf	___fladd@bexp,w,c
  3870  001050  A4D8               	btfss	status,2,c
  3871  001052  D009               	goto	l696
  3872  001054  0E00               	movlw	0
  3873  001056  6E41               	movwf	?___fladd,c
  3874  001058  0E00               	movlw	0
  3875  00105A  6E42               	movwf	?___fladd+1,c
  3876  00105C  0E00               	movlw	0
  3877  00105E  6E43               	movwf	?___fladd+2,c
  3878  001060  0E00               	movlw	0
  3879  001062  6E44               	movwf	?___fladd+3,c
  3880  001064  0012               	return	
  3881  001066                     l696:
  3882  001066  5045               	movf	___fladd@a,w,c
  3883  001068  2641               	addwf	___fladd@b,f,c
  3884  00106A  5046               	movf	___fladd@a+1,w,c
  3885  00106C  2242               	addwfc	___fladd@b+1,f,c
  3886  00106E  5047               	movf	___fladd@a+2,w,c
  3887  001070  2243               	addwfc	___fladd@b+2,f,c
  3888  001072  5048               	movf	___fladd@a+3,w,c
  3889  001074  2244               	addwfc	___fladd@b+3,f,c
  3890  001076  A044               	btfss	___fladd@b+3,0,c
  3891  001078  D082               	goto	u1730
  3892  00107A  A054               	btfss	___fladd@grs,0,c
  3893  00107C  D005               	goto	l699
  3894  00107E  90D8               	bcf	status,0,c
  3895  001080  3054               	rrcf	___fladd@grs,w,c
  3896  001082  0901               	iorlw	1
  3897  001084  6E54               	movwf	___fladd@grs,c
  3898  001086  D002               	goto	l700
  3899  001088                     l699:
  3900  001088  90D8               	bcf	status,0,c
  3901  00108A  3254               	rrcf	___fladd@grs,f,c
  3902  00108C                     l700:
  3903  00108C  B041               	btfsc	___fladd@b,0,c
  3904  00108E  8E54               	bsf	___fladd@grs,7,c
  3905  001090  3444               	rlcf	___fladd@b+3,w,c
  3906  001092  3244               	rrcf	___fladd@b+3,f,c
  3907  001094  3243               	rrcf	___fladd@b+2,f,c
  3908  001096  3242               	rrcf	___fladd@b+1,f,c
  3909  001098  3241               	rrcf	___fladd@b,f,c
  3910  00109A  2A53               	incf	___fladd@bexp,f,c
  3911  00109C  D070               	goto	u1730
  3912  00109E                     l695:
  3913  00109E  5045               	movf	___fladd@a,w,c
  3914  0010A0  5C41               	subwf	___fladd@b,w,c
  3915  0010A2  5046               	movf	___fladd@a+1,w,c
  3916  0010A4  5842               	subwfb	___fladd@b+1,w,c
  3917  0010A6  5047               	movf	___fladd@a+2,w,c
  3918  0010A8  5843               	subwfb	___fladd@b+2,w,c
  3919  0010AA  5044               	movf	___fladd@b+3,w,c
  3920  0010AC  0A80               	xorlw	128
  3921  0010AE  6E49               	movwf	??___fladd& (0+255),c
  3922  0010B0  5048               	movf	___fladd@a+3,w,c
  3923  0010B2  0A80               	xorlw	128
  3924  0010B4  5849               	subwfb	??___fladd& (0+255),w,c
  3925  0010B6  B0D8               	btfsc	status,0,c
  3926  0010B8  D036               	goto	l703
  3927  0010BA  C041  F049         	movff	___fladd@b,??___fladd
  3928  0010BE  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  3929  0010C2  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  3930  0010C6  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  3931  0010CA  1E49               	comf	??___fladd,f,c
  3932  0010CC  1E4A               	comf	??___fladd+1,f,c
  3933  0010CE  1E4B               	comf	??___fladd+2,f,c
  3934  0010D0  1E4C               	comf	??___fladd+3,f,c
  3935  0010D2  2A49               	incf	??___fladd,f,c
  3936  0010D4  0E00               	movlw	0
  3937  0010D6  224A               	addwfc	??___fladd+1,f,c
  3938  0010D8  224B               	addwfc	??___fladd+2,f,c
  3939  0010DA  224C               	addwfc	??___fladd+3,f,c
  3940  0010DC  5045               	movf	___fladd@a,w,c
  3941  0010DE  2449               	addwf	??___fladd,w,c
  3942  0010E0  6E4D               	movwf	(??___fladd+4)& (0+255),c
  3943  0010E2  5046               	movf	___fladd@a+1,w,c
  3944  0010E4  204A               	addwfc	??___fladd+1,w,c
  3945  0010E6  6E4E               	movwf	(??___fladd+5)& (0+255),c
  3946  0010E8  5047               	movf	___fladd@a+2,w,c
  3947  0010EA  204B               	addwfc	??___fladd+2,w,c
  3948  0010EC  6E4F               	movwf	(??___fladd+6)& (0+255),c
  3949  0010EE  5048               	movf	___fladd@a+3,w,c
  3950  0010F0  204C               	addwfc	??___fladd+3,w,c
  3951  0010F2  6E50               	movwf	(??___fladd+7)& (0+255),c
  3952  0010F4  0EFF               	movlw	255
  3953  0010F6  244D               	addwf	??___fladd+4,w,c
  3954  0010F8  6E41               	movwf	___fladd@b,c
  3955  0010FA  0EFF               	movlw	255
  3956  0010FC  204E               	addwfc	??___fladd+5,w,c
  3957  0010FE  6E42               	movwf	___fladd@b+1,c
  3958  001100  0EFF               	movlw	255
  3959  001102  204F               	addwfc	??___fladd+6,w,c
  3960  001104  6E43               	movwf	___fladd@b+2,c
  3961  001106  0EFF               	movlw	255
  3962  001108  2050               	addwfc	??___fladd+7,w,c
  3963  00110A  6E44               	movwf	___fladd@b+3,c
  3964  00110C  0E80               	movlw	128
  3965  00110E  1A51               	xorwf	___fladd@signs,f,c
  3966  001110  6C54               	negf	___fladd@grs,c
  3967  001112  5054               	movf	___fladd@grs,w,c
  3968  001114  A4D8               	btfss	status,2,c
  3969  001116  D00F               	goto	l705
  3970  001118  0E01               	movlw	1
  3971  00111A  2641               	addwf	___fladd@b,f,c
  3972  00111C  0E00               	movlw	0
  3973  00111E  2242               	addwfc	___fladd@b+1,f,c
  3974  001120  2243               	addwfc	___fladd@b+2,f,c
  3975  001122  2244               	addwfc	___fladd@b+3,f,c
  3976  001124  D008               	goto	l705
  3977  001126                     l703:
  3978  001126  5045               	movf	___fladd@a,w,c
  3979  001128  5E41               	subwf	___fladd@b,f,c
  3980  00112A  5046               	movf	___fladd@a+1,w,c
  3981  00112C  5A42               	subwfb	___fladd@b+1,f,c
  3982  00112E  5047               	movf	___fladd@a+2,w,c
  3983  001130  5A43               	subwfb	___fladd@b+2,f,c
  3984  001132  5048               	movf	___fladd@a+3,w,c
  3985  001134  5A44               	subwfb	___fladd@b+3,f,c
  3986  001136                     l705:
  3987  001136  5041               	movf	___fladd@b,w,c
  3988  001138  1042               	iorwf	___fladd@b+1,w,c
  3989  00113A  1043               	iorwf	___fladd@b+2,w,c
  3990  00113C  1044               	iorwf	___fladd@b+3,w,c
  3991  00113E  A4D8               	btfss	status,2,c
  3992  001140  D01C               	goto	l712
  3993  001142  5054               	movf	___fladd@grs,w,c
  3994  001144  A4D8               	btfss	status,2,c
  3995  001146  D019               	goto	l712
  3996  001148  0E00               	movlw	0
  3997  00114A  6E41               	movwf	?___fladd,c
  3998  00114C  0E00               	movlw	0
  3999  00114E  6E42               	movwf	?___fladd+1,c
  4000  001150  0E00               	movlw	0
  4001  001152  6E43               	movwf	?___fladd+2,c
  4002  001154  0E00               	movlw	0
  4003  001156  6E44               	movwf	?___fladd+3,c
  4004  001158  0012               	return	
  4005  00115A  90D8               	bcf	status,0,c
  4006  00115C  3641               	rlcf	___fladd@b,f,c
  4007  00115E  3642               	rlcf	___fladd@b+1,f,c
  4008  001160  3643               	rlcf	___fladd@b+2,f,c
  4009  001162  3644               	rlcf	___fladd@b+3,f,c
  4010  001164  BE54               	btfsc	___fladd@grs,7,c
  4011  001166  8041               	bsf	___fladd@b,0,c
  4012  001168  A054               	btfss	___fladd@grs,0,c
  4013  00116A  D002               	goto	l710
  4014  00116C  80D8               	bsf	status,0,c
  4015  00116E  D001               	goto	L16
  4016  001170                     l710:
  4017  001170  90D8               	bcf	status,0,c
  4018  001172                     L16:
  4019  001172  3654               	rlcf	___fladd@grs,f,c
  4020  001174  5053               	movf	___fladd@bexp,w,c
  4021  001176  A4D8               	btfss	status,2,c
  4022  001178  0653               	decf	___fladd@bexp,f,c
  4023  00117A                     l712:
  4024  00117A  AE43               	btfss	___fladd@b+2,7,c
  4025  00117C  D7EE               	goto	l708
  4026  00117E                     u1730:
  4027  00117E  0E00               	movlw	0
  4028  001180  6E52               	movwf	___fladd@aexp,c
  4029  001182  AE54               	btfss	___fladd@grs,7,c
  4030  001184  D00A               	goto	l717
  4031  001186  C054  F049         	movff	___fladd@grs,??___fladd
  4032  00118A  0E7F               	movlw	127
  4033  00118C  1649               	andwf	??___fladd,f,c
  4034  00118E  A4D8               	btfss	status,2,c
  4035  001190  D002               	goto	u1760
  4036  001192  A041               	btfss	___fladd@b,0,c
  4037  001194  D002               	goto	l717
  4038  001196                     u1760:
  4039  001196  0E01               	movlw	1
  4040  001198  6E52               	movwf	___fladd@aexp,c
  4041  00119A                     l717:
  4042  00119A  5052               	movf	___fladd@aexp,w,c
  4043  00119C  B4D8               	btfsc	status,2,c
  4044  00119E  D020               	goto	l720
  4045  0011A0  0E01               	movlw	1
  4046  0011A2  2641               	addwf	___fladd@b,f,c
  4047  0011A4  0E00               	movlw	0
  4048  0011A6  2242               	addwfc	___fladd@b+1,f,c
  4049  0011A8  2243               	addwfc	___fladd@b+2,f,c
  4050  0011AA  2244               	addwfc	___fladd@b+3,f,c
  4051  0011AC  A044               	btfss	___fladd@b+3,0,c
  4052  0011AE  D018               	goto	l720
  4053  0011B0  C041  F049         	movff	___fladd@b,??___fladd
  4054  0011B4  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  4055  0011B8  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  4056  0011BC  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  4057  0011C0  344C               	rlcf	??___fladd+3,w,c
  4058  0011C2  324C               	rrcf	??___fladd+3,f,c
  4059  0011C4  324B               	rrcf	??___fladd+2,f,c
  4060  0011C6  324A               	rrcf	??___fladd+1,f,c
  4061  0011C8  3249               	rrcf	??___fladd,f,c
  4062  0011CA  C049  F041         	movff	??___fladd,___fladd@b
  4063  0011CE  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  4064  0011D2  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  4065  0011D6  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  4066  0011DA  2853               	incf	___fladd@bexp,w,c
  4067  0011DC  A4D8               	btfss	status,2,c
  4068  0011DE  2A53               	incf	___fladd@bexp,f,c
  4069  0011E0                     l720:
  4070  0011E0  2853               	incf	___fladd@bexp,w,c
  4071  0011E2  B4D8               	btfsc	status,2,c
  4072  0011E4  D003               	goto	u1810
  4073  0011E6  5053               	movf	___fladd@bexp,w,c
  4074  0011E8  A4D8               	btfss	status,2,c
  4075  0011EA  D00D               	goto	l724
  4076  0011EC                     u1810:
  4077  0011EC  0E00               	movlw	0
  4078  0011EE  6E41               	movwf	___fladd@b,c
  4079  0011F0  0E00               	movlw	0
  4080  0011F2  6E42               	movwf	___fladd@b+1,c
  4081  0011F4  0E00               	movlw	0
  4082  0011F6  6E43               	movwf	___fladd@b+2,c
  4083  0011F8  0E00               	movlw	0
  4084  0011FA  6E44               	movwf	___fladd@b+3,c
  4085  0011FC  5053               	movf	___fladd@bexp,w,c
  4086  0011FE  A4D8               	btfss	status,2,c
  4087  001200  D002               	goto	l724
  4088  001202  0E00               	movlw	0
  4089  001204  6E51               	movwf	___fladd@signs,c
  4090  001206                     l724:
  4091  001206  A053               	btfss	___fladd@bexp,0,c
  4092  001208  D002               	goto	l725
  4093  00120A  8E43               	bsf	___fladd@b+2,7,c
  4094  00120C  D001               	goto	l726
  4095  00120E                     l725:
  4096  00120E  9E43               	bcf	___fladd@b+2,7,c
  4097  001210                     l726:
  4098  001210  90D8               	bcf	status,0,c
  4099  001212  3053               	rrcf	___fladd@bexp,w,c
  4100  001214  6E44               	movwf	___fladd@b+3,c
  4101  001216  BE51               	btfsc	___fladd@signs,7,c
  4102  001218  8E44               	bsf	___fladd@b+3,7,c
  4103  00121A  C041  F041         	movff	___fladd@b,?___fladd
  4104  00121E  C042  F042         	movff	___fladd@b+1,?___fladd+1
  4105  001222  C043  F043         	movff	___fladd@b+2,?___fladd+2
  4106  001226  C044  F044         	movff	___fladd@b+3,?___fladd+3
  4107  00122A  0012               	return	
  4108  00122C                     __end_of___fladd:
  4109                           	opt stack 0
  4110                           tblptru	equ	0xFF8
  4111                           tblptrh	equ	0xFF7
  4112                           tblptrl	equ	0xFF6
  4113                           tablat	equ	0xFF5
  4114                           prodh	equ	0xFF4
  4115                           prodl	equ	0xFF3
  4116                           wreg	equ	0xFE8
  4117                           status	equ	0xFD8
  4118                           
  4119 ;; *************** function _PWM_Init *****************
  4120 ;; Defined at:
  4121 ;;		line 29 in file "HC-05_Module.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4138 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_main
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text15
  4149  001F4E                     __ptext15:
  4150                           	opt stack 0
  4151  001F4E                     _PWM_Init:
  4152                           	opt stack 30
  4153                           
  4154                           ;HC-05_Module.c: 31:     TRISCbits.TRISC1 = 0;
  4155                           
  4156                           ;incstack = 0
  4157  001F4E  9294               	bcf	3988,1,c	;volatile
  4158                           
  4159                           ;HC-05_Module.c: 32:     CCP2CON = 0x0C;
  4160  001F50  0E0C               	movlw	12
  4161  001F52  6EBA               	movwf	4026,c	;volatile
  4162  001F54  0012               	return		;funcret
  4163  001F56                     __end_of_PWM_Init:
  4164                           	opt stack 0
  4165                           tblptru	equ	0xFF8
  4166                           tblptrh	equ	0xFF7
  4167                           tblptrl	equ	0xFF6
  4168                           tablat	equ	0xFF5
  4169                           prodh	equ	0xFF4
  4170                           prodl	equ	0xFF3
  4171                           wreg	equ	0xFE8
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _MSdelay *****************
  4175 ;; Defined at:
  4176 ;;		line 61 in file "USART_Source_File.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  val             2    0[COMRAM] unsigned int 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  j               2    4[COMRAM] unsigned int 
  4181 ;;  i               2    2[COMRAM] unsigned int 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4191 ;;      Params:         2       0       0       0       0       0       0       0       0
  4192 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4194 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4195 ;;Total ram usage:        6 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_main
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text16
  4205  001E6E                     __ptext16:
  4206                           	opt stack 0
  4207  001E6E                     _MSdelay:
  4208                           	opt stack 30
  4209                           
  4210                           ;USART_Source_File.c: 61: void MSdelay(unsigned int val);USART_Source_File.c: 62: {;USAR
      +                          T_Source_File.c: 63:      unsigned int i,j;;USART_Source_File.c: 64:         for(i=0;i<=
      +                          val;i++)
  4211                           
  4212                           ;incstack = 0
  4213  001E6E  0E00               	movlw	0
  4214  001E70  6E04               	movwf	MSdelay@i+1,c
  4215  001E72  0E00               	movlw	0
  4216  001E74  6E03               	movwf	MSdelay@i,c
  4217  001E76  D00F               	goto	l152
  4218  001E78                     
  4219                           ;USART_Source_File.c: 65:             for(j=0;j<81;j++);
  4220  001E78  0E00               	movlw	0
  4221  001E7A  6E06               	movwf	MSdelay@j+1,c
  4222  001E7C  0E00               	movlw	0
  4223  001E7E  6E05               	movwf	MSdelay@j,c
  4224  001E80                     l2396:
  4225  001E80  5006               	movf	MSdelay@j+1,w,c
  4226  001E82  E107               	bnz	l2404
  4227  001E84  0E51               	movlw	81
  4228  001E86  5C05               	subwf	MSdelay@j,w,c
  4229  001E88  B0D8               	btfsc	status,0,c
  4230  001E8A  D003               	goto	u2740
  4231  001E8C  4A05               	infsnz	MSdelay@j,f,c
  4232  001E8E  2A06               	incf	MSdelay@j+1,f,c
  4233  001E90  D7F7               	goto	l2396
  4234  001E92                     u2740:
  4235  001E92                     l2404:
  4236  001E92  4A03               	infsnz	MSdelay@i,f,c
  4237  001E94  2A04               	incf	MSdelay@i+1,f,c
  4238  001E96                     l152:
  4239  001E96  5003               	movf	MSdelay@i,w,c
  4240  001E98  5C01               	subwf	MSdelay@val,w,c
  4241  001E9A  5004               	movf	MSdelay@i+1,w,c
  4242  001E9C  5802               	subwfb	MSdelay@val+1,w,c
  4243  001E9E  A0D8               	btfss	status,0,c
  4244  001EA0  0012               	return	
  4245  001EA2  D7EA               	goto	l153
  4246  001EA4                     __end_of_MSdelay:
  4247                           	opt stack 0
  4248                           tblptru	equ	0xFF8
  4249                           tblptrh	equ	0xFF7
  4250                           tblptrl	equ	0xFF6
  4251                           tablat	equ	0xFF5
  4252                           prodh	equ	0xFF4
  4253                           prodl	equ	0xFF3
  4254                           wreg	equ	0xFE8
  4255                           status	equ	0xFD8
  4256                           
  4257 ;; *************** function _GetBitValue *****************
  4258 ;; Defined at:
  4259 ;;		line 74 in file "HC-05_Module.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  n               2    0[COMRAM] int 
  4262 ;;  bitPosition     2    2[COMRAM] int 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      _Bool 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4274 ;;      Params:         4       0       0       0       0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4276 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4277 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4278 ;;Total ram usage:        7 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_main
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text17
  4288  001EFC                     __ptext17:
  4289                           	opt stack 0
  4290  001EFC                     _GetBitValue:
  4291                           	opt stack 30
  4292                           
  4293                           ;HC-05_Module.c: 75:    return ((n >> bitPosition) & 1);
  4294                           
  4295                           ;incstack = 0
  4296  001EFC  C003  F005         	movff	GetBitValue@bitPosition,??_GetBitValue
  4297  001F00  C001  F006         	movff	GetBitValue@n,??_GetBitValue+1
  4298  001F04  C002  F007         	movff	GetBitValue@n+1,??_GetBitValue+2
  4299  001F08  2A05               	incf	??_GetBitValue,f,c
  4300  001F0A  D003               	goto	u2684
  4301  001F0C                     u2685:
  4302  001F0C  3407               	rlcf	??_GetBitValue+2,w,c
  4303  001F0E  3207               	rrcf	??_GetBitValue+2,f,c
  4304  001F10  3206               	rrcf	??_GetBitValue+1,f,c
  4305  001F12                     u2684:
  4306  001F12  2E05               	decfsz	??_GetBitValue,f,c
  4307  001F14  D7FB               	goto	u2685
  4308  001F16  A006               	btfss	??_GetBitValue+1,0,c
  4309  001F18  D002               	goto	u2690
  4310  001F1A  0E01               	movlw	1
  4311  001F1C  0012               	return	
  4312  001F1E                     u2690:
  4313  001F1E  0E00               	movlw	0
  4314  001F20  0012               	return	
  4315  001F22                     __end_of_GetBitValue:
  4316                           	opt stack 0
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           wreg	equ	0xFE8
  4324                           status	equ	0xFD8
  4325                           tblptru	equ	0xFF8
  4326                           tblptrh	equ	0xFF7
  4327                           tblptrl	equ	0xFF6
  4328                           tablat	equ	0xFF5
  4329                           prodh	equ	0xFF4
  4330                           prodl	equ	0xFF3
  4331                           wreg	equ	0xFE8
  4332                           status	equ	0xFD8
  4333                           
  4334                           	psect	rparam
  4335  0000                     tblptru	equ	0xFF8
  4336                           tblptrh	equ	0xFF7
  4337                           tblptrl	equ	0xFF6
  4338                           tablat	equ	0xFF5
  4339                           prodh	equ	0xFF4
  4340                           prodl	equ	0xFF3
  4341                           wreg	equ	0xFE8
  4342                           status	equ	0xFD8


Data Sizes:
    Strings     30
    Constant    4
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     53      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[2]), STR_4(CODE[6]), STR_3(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_setPeriodTo
    _setPeriodTo->___fltol
    _roundf->___fladd
    _USART_SendString->_USART_TransmitChar
    _USART_Init->___fltol
    _SetDutyCycleTo->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv

Critical Paths under _main in BANK0

    _main->_setPeriodTo
    _setPeriodTo->_roundf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   35308
                                             44 BANK0      9     9      0
                        _GetBitValue
                            _MSdelay
                           _PWM_Init
                     _SetDutyCycleTo
                         _USART_Init
                  _USART_ReceiveChar
                   _USART_SendString
                        _setPeriodTo
 ---------------------------------------------------------------------------------
 (1) _setPeriodTo                                         27    23      4   17560
                                             94 COMRAM     1     1      0
                                             18 BANK0     26    22      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4    7734
                                             84 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     349
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     447
                                              1 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    6967
                                              0 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _SetDutyCycleTo                                      14     8      6    9614
                                              0 BANK0     14     8      6
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             84 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2352
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1703
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3908
                                             64 COMRAM    20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     168
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _GetBitValue                                          7     3      4     196
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetBitValue
   _MSdelay
   _PWM_Init
   _SetDutyCycleTo
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _USART_Init
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _USART_ReceiveChar
   _USART_SendString
     _USART_TransmitChar
   _setPeriodTo
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___flge
       ___flmul
         ___xxtofl (ARG)
       ___flneg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      39       5       35.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      20        0.0%
DATA                 0      0      98       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jan 02 23:06:18 2019

                 ___fldiv@aexp 0040                   ___fldiv@bexp 003F            __end_of_GetBitValue 1F22  
                 ___fldiv@sign 0038                             l50 1260                             l60 1360  
                           l52 1298                             l62 1392                             l54 12CA  
                           l64 13C4                             l56 12FC                             l80 18EE  
                           l58 132E                             l92 1966                             l84 1916  
                           l77 1844                             l78 1898                             l79 18C6  
                           l96 1982                             l88 193E                             l98 1990  
                  __CFG_BOR$ON 000000                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                          l152 1E96                            l153 1E78                            l146 1EE8  
                          l147 1ED4                            l422 1B12                            l423 1B46  
                          l424 1B84                            l425 1BC2                            l433 1EC0  
                          l427 1BFA                            l700 108C                            l710 1170  
                          l703 1126                            l720 11E0                            l712 117A  
                          l464 1DAC                            l456 1D1C                            l705 1136  
                          l465 1DA0                            l458 1D88                            l467 1DC8  
                          l459 1D78                            l724 1206                            l708 115A  
                          l820 1A10                            l725 120E                            l717 119A  
                          l741 15FE                            l726 1210                            l734 1574  
                          l822 1A5A                            l751 1708                            l743 1626  
                          l735 1570                            l831 1ACC                            l823 1A42  
                          l815 19DC                            l760 1784                            l752 16EA  
                          l744 16D4                            l816 19EC                            l840 08E2  
                          l761 17A8                            l745 1684                            l825 1A8C  
                          l817 1A0A                            l841 092A                            l690 1020  
                          l682 0F6A                            l762 17D2                            l746 16AC  
                          l738 15B4                            l770 0BE2                            l826 1A80  
                          l842 0A88                            l691 102E                            l683 0F66  
                          l763 17DE                            l739 15B0                            l819 1A1C  
                          l692 1032                            l764 17E0                            l748 16D2  
                          l780 0DE2                            l772 0C12                            l844 0B0A  
                          l685 0FC6                            l677 0F22                            l773 0C0E  
                          l686 0F8A                            l678 0F1E                            l758 1740  
                          l774 0C22                            l846 0B90                            l838 0890  
                          l695 109E                            l791 0EBE                            l775 0C40  
                          l696 1066                            l792 0EDC                            l768 0BD2  
                          l689 1042                            l769 0BCE                            l786 0E38  
                          l699 1088                            l779 0E00                            l788 0E7C  
                          l789 0E9A                   __CFG_CPB$OFF 000000                            _PR2 000FCB  
                 __CFG_CPD$OFF 000000                            wreg 000FE8                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                    main@data_in 0094                   __CFG_LVP$OFF 000000  
                 ___fltol@exp1 005E                   __CFG_WDT$OFF 000000                           l2044 092A  
                         l2066 1F3C                           l2404 1E92                           l2308 1260  
                         l2192 17D2                           l2396 1E80                           STR_1 080E  
                         STR_2 0805                           STR_3 081C                           STR_4 0816  
                         STR_5 0821                           u2010 0E8A                           u2020 0EA8  
                         u2100 0862                           u2110 087E                           u2120 08AE  
                         u2105 0858                           u2140 08F4                           u2125 08A4  
                         _LATB 000F8A                           u1600 104A                           u2400 1792  
                         u2410 17B6                           u2170 0B5C                           u1550 0FF6  
                         u2175 0B52                           u1560 1006                           u2440 1D3A  
                         u1810 11EC                           u1730 117E                           u1570 1008  
                         u2370 173C                           u2445 1D30                           u1760 1196  
                         u1920 0C2E                           u2480 1DB2                           u2560 1A96  
                         u2800 1900                           u1930 0DA4                           u2740 1E92  
                         u2820 1928                           u1935 0D9A                           u2840 1950  
                         u2690 1F1E                           u2684 1F12                           u1980 0E34  
                         u2780 18D8                           u2685 1F0C                           _RCIF 007CF5  
                         _TMR2 000FCC                           _TXIF 007CF4       SetDutyCycleTo@Duty_cycle 0060  
                         _main 17FC       __end_of_USART_SendString 1EFC                           prodh 000FF4  
                         prodl 000FF3                           start 0000                __end_of_MSdelay 1EA4  
                __CFG_IESO$OFF 000000                ___fldiv@new_exp 0039                   ___param_bank 000000  
                __CFG_PLLDIV$1 000000                 __CFG_CCP2MX$ON 000000                  ___fltol@sign1 005D  
              __end_of___fladd 122C                          ?_main 0001                __end_of___fldiv 17FC  
              __end_of___flneg 1ED2                __end_of___flmul 0EF2                __end_of___fltol 1DDA  
                        _T2CON 000FCA                          _LATD0 007C60                          _LATD1 007C61  
                        _LATD2 007C62                          _LATD3 007C63                          _LATD5 007C65  
                        _LATD6 007C66                          _RCREG 000FAE                          _RCSTA 000FAB  
                        _SPBRG 000FAF                  __CFG_USBDIV$1 000000                          _TRISB 000F93  
                        _TRISD 000F95                          _TXREG 000FAD                          _TXSTA 000FAC  
                __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000     setPeriodTo@clockSelectBits 0082                 __CFG_EBTRB$OFF 000000  
                        _toint 0801               __end_of_PWM_Init 1F56                          tablat 000FF5  
               main@Duty_Scale 0090                          status 000FD8                 __CFG_ICPRT$OFF 000000  
                  _GetBitValue 1EFC                    ?_USART_Init 0060                 __CFG_MCLRE$OFF 000000  
              __initialization 1F22                   __end_of_main 199E                         ??_main 0060  
                __activetblptr 000001                   ?_setPeriodTo 0072                         _CCPR2L 000FBB  
                    ??_MSdelay 0003                         _OSCCON 000FD3                         _TRISC6 007CA6  
                       _TRISC7 007CA7               __end_of___xxtofl 1ADE               ??_SetDutyCycleTo 0066  
               __CFG_XINST$OFF 000000                         ___flge 1ADE                      ??___fladd 0049  
                    ??___fldiv 0030                      ??___flneg 0005                 __CFG_STVREN$ON 000000  
                    ??___flmul 0017                      ??___fltol 0059                         _roundf 0824  
   __end_of_USART_TransmitChar 1F46                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8            __size_of_USART_Init 0094  
                   ___flge@ff1 0001                     ___flge@ff2 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     __accesstop 0060  
      __end_of__initialization 1F2C                __CFG_PBADEN$OFF 000000                     ___flneg@f1 0001  
                ___rparam_used 000001                     ___fltol@f1 0055                 __pcstackCOMRAM 0001  
       setPeriodTo@_resolution 0088                  __end_of_toint 0805                      ?_PWM_Init 0001  
                   __pbssBANK0 0095              ?_USART_SendString 0002             ??_USART_SendString 0004  
                      ?___flge 0001                        _CCP2CON 000FBA                     ??_PWM_Init 0001  
                      ?_roundf 0055                      ?___xxtofl 0001           __size_of_setPeriodTo 0318  
                      _MSdelay 1E6E                __CFG_VREGEN$OFF 000000                   ?_GetBitValue 0001  
              _setPeriodTo$839 0076                   ??_USART_Init 005F                        __Hparam 0000  
                      __Lparam 0000                __size_of___flge 0120                        ___fladd 0EF2  
                      ___fldiv 1544                        ___flneg 1EA4                        ___flmul 0BA2  
                      ___fltol 1CFE                   __psmallconst 0800                        __pcinit 1F22  
                      __ramtop 0800                        __ptext0 17FC                        __ptext1 122C  
                      __ptext2 0824                        __ptext3 1EA4                        __ptext4 1ADE  
                      __ptext5 1ED2                        __ptext6 1F3A                        __ptext7 1F46  
                      __ptext8 1DDA                        __ptext9 1BFE            USART_SendString@out 0002  
              __size_of_roundf 037E                 USART_Init@temp 0064                      _T2CONbits 000FCA  
                   ??___xxtofl 0005             __end_of_USART_Init 1E6E   setPeriodTo@TimerPrescaleBits 007A  
                      main@out 008C           end_of_initialization 1F2C  setPeriodTo@TimerPrescaleValue 007C  
                      roundf@e 0064                        roundf@u 006A                        roundf@x 0055  
                      roundf@y 006E                    ___fladd@grs 0054                  ___xxtofl@sign 0009  
                   _roundf$841 0066                      _TRISCbits 000F94                     _roundf$842 0060  
                  ___fldiv@grs 003B                    ___fldiv@rem 0034           SetDutyCycleTo@Period 0064  
                   main@Period 008E            USART_Init@baud_rate 0060          USART_TransmitChar@out 0001  
                  ___flmul@grs 001C             _USART_TransmitChar 1F3A            ?_USART_TransmitChar 0001  
               __end_of___flge 1BFE              setPeriodTo@period 0084                 __end_of_roundf 0BA2  
            __size_of_PWM_Init 0008            start_initialization 1F22           ??_USART_TransmitChar 0001  
  SetDutyCycleTo@PWM10BitValue 006C              _USART_ReceiveChar 1F46         GetBitValue@bitPosition 0003  
         __size_of_GetBitValue 0026                       ??___flge 0009             ?_USART_ReceiveChar 0001  
             __CFG_LPT1OSC$OFF 000000        __size_of_SetDutyCycleTo 0100                       ??_roundf 0059  
          ??_USART_ReceiveChar 0001      __size_of_USART_SendString 002A                      ___fladd@a 0045  
                    ___fladd@b 0041                      ___fldiv@a 002C                      ___fldiv@b 0028  
                    ___flmul@a 0013                      ___flmul@b 000F                  __pcstackBANK0 0060  
                 GetBitValue@n 0001              __size_of___xxtofl 0140                       ?_MSdelay 0001  
    __end_of_USART_ReceiveChar 1F4E                       ?___fladd 0041                       ?___fldiv 0028  
                     ?___flneg 0001                       ?___flmul 000F                       ?___fltol 0055  
                  __smallconst 0800                  ??_setPeriodTo 005F                       MSdelay@i 0003  
                     MSdelay@j 0005               __CFG_WDTPS$32768 000000                       _PWM_Init 1F4E  
          __end_of_setPeriodTo 1544               __size_of_MSdelay 0036     __size_of_USART_ReceiveChar 0008  
                   roundf@F521 0095                       __Hrparam 0000                       __Lrparam 0000  
                 __Lsmallconst 0800               __size_of___fladd 033A               __size_of___fldiv 02B8  
             __size_of___flneg 002E               __size_of___flmul 0350                 _SetDutyCycleTo 1BFE  
             __size_of___fltol 00DC               _USART_SendString 1ED2                       ___xxtofl 199E  
                     __ptext10 199E                       __ptext11 1CFE                       __ptext12 0BA2  
                     __ptext13 1544                       __ptext14 0EF2                       __ptext15 1F4E  
                     __ptext16 1E6E                       __ptext17 1EFC                  __size_of_main 01A2  
                   MSdelay@val 0001         __end_of_SetDutyCycleTo 1CFE                setPeriodTo@FOSC 007E  
              setPeriodTo@FPWM 0072          __CFG_CPUDIV$OSC1_PLL2 000000                    _setPeriodTo 122C  
  __size_of_USART_TransmitChar 000C                  ??_GetBitValue 0005                ?_SetDutyCycleTo 0060  
          __CFG_FOSC$INTOSC_EC 000000                  ___fladd@signs 0051             _SetDutyCycleTo$840 0068  
                 ___fladd@aexp 0052                   ___fladd@bexp 0053                     _USART_Init 1DDA  
